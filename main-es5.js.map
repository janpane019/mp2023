{"version":3,"sources":["webpack:///src/app/board/components/client/client.component.html","webpack:///src/app/board/components/client/client.component.ts","webpack:///src/app/board/components/textfield/textfield.component.ts","webpack:///src/app/board/components/textfield/textfield.component.html","webpack:///src/models/Options.ts","webpack:///src/models/APIGateway.ts","webpack:///src/app/export.service.ts","webpack:///src/shared/DelayedHoverDirective.ts","webpack:///src/models/EndpointOperator.ts","webpack:///src/app/pages/pages.component.ts","webpack:///src/app/pages/pages.component.html","webpack:///src/app/board/tutorials/tutorial-controls/tutorial-controls.component.ts","webpack:///src/app/board/tutorials/tutorial-controls/tutorial-controls.component.html","webpack:///src/shared/resizable-textarea.ts","webpack:///src/app/board/components/cdn/cdn.component.ts","webpack:///src/app/board/components/cdn/cdn.component.html","webpack:///src/app/board/components/apigateway/apigateway.component.ts","webpack:///src/app/board/components/apigateway/apigateway.component.html","webpack:///src/environments/environment.ts","webpack:///src/models/enums/BalancingAlgorithm.ts","webpack:///src/models/Endpoint.ts","webpack:///src/shared/vue-event-modifiers.plugin.ts","webpack:///src/models/enums/ReplacementPolicy.ts","webpack:///src/models/Database.ts","webpack:///src/models/enums/APIType.ts","webpack:///src/models/Shared/EventDispatcher.ts","webpack:///src/models/Client.ts","webpack:///src/app/board/components/port/port.component.ts","webpack:///src/app/board/components/port/port.component.html","webpack:///src/models/PubSub.ts","webpack:///src/app/pages/landing-page/landing-page.component.ts","webpack:///src/app/pages/landing-page/landing-page.component.html","webpack:///src/app/board/components/database/database.component.ts","webpack:///src/app/board/components/database/database.component.html","webpack:///src/app/create/create.component.html","webpack:///src/app/create/create.component.ts","webpack:///src/models/enums/gRPCMode.ts","webpack:///src/models/RequestData.ts","webpack:///src/app/board/board.component.html","webpack:///src/app/board/board.component.ts","webpack:///src/models/ClientCluster.ts","webpack:///src/app/board/components/api/api.component.ts","webpack:///src/app/board/components/api/api.component.html","webpack:///src/app/board/components/cache/cache.component.ts","webpack:///src/app/board/components/cache/cache.component.html","webpack:///src/app/board/components/Shared/title/title.component.html","webpack:///src/app/board/components/Shared/title/title.component.ts","webpack:///src/app/board/components/connection/connection.component.ts","webpack:///src/app/board/components/connection/connection.component.html","webpack:///src/models/MessageQueue.ts","webpack:///src/app/board/optionsmenu/optionsmenu.component.ts","webpack:///src/app/board/optionsmenu/optionsmenu.component.html","webpack:///src/app/board/components/Shared/OperatorComponent.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/board/components/pubsub/pubsub.component.ts","webpack:///src/app/board/components/pubsub/pubsub.component.html","webpack:///src/models/enums/HTTPStatus.ts","webpack:///src/app/saving.service.ts","webpack:///src/models/Port.ts","webpack:///src/models/enums/WritePolicy.ts","webpack:///src/models/enums/LoadBalancerType.ts","webpack:///src/app/changes.service.ts","webpack:///src/app/board/boardUI/boardUI.component.html","webpack:///src/app/board/boardUI/boardUI.component.ts","webpack:///src/models/enums/DatabaseType.ts","webpack:///src/app/app.module.ts","webpack:///src/app/board/components/proxy/proxy.component.ts","webpack:///src/app/board/components/proxy/proxy.component.html","webpack:///src/app/board/components/Shared/endpoint-select/endpoint-select.component.ts","webpack:///src/app/board/components/Shared/endpoint-select/endpoint-select.component.html","webpack:///src/models/enums/HTTPMethod.ts","webpack:///src/app/board/components/loadbalancer/loadbalancer.component.ts","webpack:///src/app/board/components/loadbalancer/loadbalancer.component.html","webpack:///src/models/LogicComponent.ts","webpack:///src/app/placing.service.ts","webpack:///src/shared/ExtensionMethods.ts","webpack:///src/models/Proxy.ts","webpack:///src/models/API.ts","webpack:///src/models/Cache.ts","webpack:///src/app/board/components/Shared/slider-described/slider-described.component.ts","webpack:///src/app/board/components/Shared/slider-described/slider-described.component.html","webpack:///src/app/board/components/clientcluster/clientcluster.component.ts","webpack:///src/app/board/components/clientcluster/clientcluster.component.html","webpack:///src/models/LoadBalancer.ts","webpack:///src/app/selection.service.ts","webpack:///src/models/TextField.ts","webpack:///src/app/viewing.service.ts","webpack:///src/app/board/components/cloudstorage/cloudstorage.component.ts","webpack:///src/app/board/components/cloudstorage/cloudstorage.component.html","webpack:///src/app/info-tooltip/info-tooltip.component.html","webpack:///src/app/info-tooltip/info-tooltip.component.ts","webpack:///src/models/enums/Protocol.ts","webpack:///src/models/Connection.ts","webpack:///src/models/CloudStorage.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/models/CDN.ts","webpack:///src/app/board/components/messagequeue/messagequeue.component.ts","webpack:///src/app/board/components/messagequeue/messagequeue.component.html","webpack:///src/models/WebServer.ts","webpack:///src/app/board/componentmenu/componentmenu.component.ts","webpack:///src/app/board/componentmenu/componentmenu.component.html","webpack:///src/app/board/components/webserver/webserver.component.ts","webpack:///src/app/board/components/webserver/webserver.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ClientComponent","LogicClient","availableEndpoints","availableMethods","canAutoSend","canSend","canEstablishConnection","canEndConnection","isAutomaticSending","Init","options","endpointRef","method","endpoint","supportedMethods","endpointSelect","value","protocol","afterChange","updateEndpoint","currEdp","currMth","methodSelect","getAvailableEndpoints","length","updateCanSendData","updateCanEstablishStream","updateCanEndStream","was","e","url","isReadOnly","cdRef","detectChanges","event","updateSelection","stream","grpcMode","isConnectedToEndpoint","Unary","WebSockets","outputRate","sendData","request","header","origin","outputPort","connections","originID","connectedId","requestId","res","id","c","color","handleMousedown","handleClick","handleEndpointChange","toggleAutomaticSend","TextfieldComponent","LogicTextField","field","nativeElement","addEventListener","key","preventDefault","start","selectionStart","end","selectionEnd","substring","onViewInit","forEach","selectionService","currentSelections","indexOf","isBold","isItalic","width","height","resize","toggleBold","toggleItalic","Options","title","X","Y","APIGateway","connectionTable","inputPort","APIGatewayOptions","data","fromOutput","targetConnection","responseId","fireReceiveData","hasAction","getEndpoints","actions","action","result","Error","targetEndpoint","getTargetEndpoint","sendResponse","isFirstStreamRequest","isLastStreamRequest","dontSendRequestResponse","connection","endpoints","getOtherPort","parent","find","isStream","epRef","asynchronous","serverStream","getResponse","response","clear","console","log","streamingEndpoint","filter","newReqId","restEndpoints","concat","rpcEndpoints","grpcEndpoints","graphqlEndpoints","websocketsEndpoints","ExportService","placingService","savingService","svgns","getBase64FromUrl","fetch","blob","Promise","resolve","reader","FileReader","readAsDataURL","onloadend","base64data","component","components","canvas","document","createElement","boardWidth","boardHeight","offsetX","offsetY","captureUsed","captureUsedArea","minX","minY","maxX","maxY","Math","max","min","ctx","getContext","transparentBackground","fillStyle","lightMode","fillRect","beginPath","getComponentSize","backgroundColor","strokeStyle","lineWidth","rect","fill","stroke","font","fontSize","textAlign","textBaseline","wrapCanvasText","roundRect","img","Image","r","onload","src","getComponentType","toLowerCase","drawImage","showTitles","renderComponentTitleToCanvas","lightTitles","renderConnectionsToCanvas","renderPortsToCanvas","context","text","x","y","maxWidth","maxHeight","lineHeight","line","letter","newLine","metrics","measureText","newWidth","fillText","arc","PI","component2","size2","grad","createLinearGradient","addColorStop","comp2","comp2Size","comp2Width","comp2Height","lineBreaks","moveTo","lineTo","closePath","lineBreak","br","push","textPath","setLineDash","svg","newSvgLine","createSvgText","appendChild","getComputedTextLength","removeChild","newText","textSvg","createElementNS","setAttributeNS","toString","textContent","Number","MAX_VALUE","sizes","getElementsByTagName","setAttribute","wrapSvgText","encoded","renderComponentTitleToSvg","renderConnectionsToSvg","renderPortsToSvg","port","stop1","stop2","slice","map","radius","quadraticCurveTo","ExportPngOptions","ExportSvgOptions","EmbedIFrameOptions","darkMode","DelayedHoverDirective","element","delay","hoverEvent","hide$","pipe","_","show$","show","parseInt","subscribe","emit","EndpointOperator","requestCount","connectableEndpoints","duplicate","ep","hasEndpoint","notAllowed","targetUrl","fireShowStatusCode","EndpointOptions","PagesComponent","TutorialSlide","image","TutorialControlsComponent","closeMenu","slides","isMinimized","currentSlideIndex","currentSlide","close","toggleMinimize","ResizableTextAreaDirective","renderer","el","offsetWidth","offsetHeight","mouseMoveListener","listen","ngOnDestroy","CDNComponent","LogicCDN","ApiGatewayComponent","LogicApiGateway","getConnectableEndpoints","j","i","splice","environment","production","BalancingAlgorithm","Endpoint","HTTP","EndpointRef","GET","EndpointAction","Inherit","DatabaseEndpoint","POST","PUT","DELETE","Database","VueEventModifiersPlugin","supportsPassive","detectPassiveSupport","higherOrderEventName","handler","eventConfig","parseHigherOrderEventName","setupEventBinding","higherOrderElement","target","parseHigherOrderElement","eventName","eventPattern","test","support","passive","window","removeEventListener","error","selector","body","parts","split","config","name","shift","isStop","isPrevent","isCapture","isSelf","isOnce","isPassive","capture","addProxyFunction","removeProxyFunction","proxyFunction","stopPropagation","ReplacementPolicy","removeShardDispatcher","DatabaseOptions","isMasterShard","shardRequest","conn","round","random","wasOutput","fireRemoveShard","connectingWithOutput","isShard","type","fireFailedConnect","message","register","fire","APIType","EventDispatcher","handlers","h","Client","ClientOptions","isAvailable","PortComponent","IsReadOnly","connectionComponents","lineStartX","lineStartY","lineCurrX","lineCurrY","linePrevX","linePrevY","destroySelf","detach","LogicPort","LogicParent","getPort","IsOutput","board","getElementById","svgCanvas","onDropRequest","dirX","dirY","offsetLeft","clientWidth","offsetTop","clientHeight","classList","add","style","transform","setTimeout","opacity","remove","index","findIndex","con","display","logicConnection","LogicConnection","isConnecting","canMoveConnection","children","getAttribute","MouseEvent","stopConnecting","startConnecting","clientX","clientY","strokeWidth","strokeLinecap","strokeDasharray","onmousemove","boardScale","TouchEvent","touches","ontouchmove","ontouchend","innerHTML","connectingPort","connectPorts","componentChanged","portImage","borderColor","handleMouseUp","autoAttach","PubSub","PubSubOptions","PATCH","sendToConsumers","LandingPageComponent","getElementsByClassName","scrollTop","DatabaseComponent","LogicDatabase","SHARDS_PER_SHRARD","onRemoveShard","outputPortRef","createPort","createOutputPort","initX","initY","comp","createComponent","getPortComponent","pushComponent","onAfterDestroySelf","changeDatabaseType","shard","CreateComponent","route","viewingService","titleService","API_URL","isTutorialMenuOpen","showOnboardIntro","showReadOnlyViewer","showReadOnlyViewerError","showBoard","showEdit","setTitle","seenIntroTutorial","localStorage","getItem","queryParams","params","viewer","viewerEditLink","getBoard","save","Array","isArray","viewerSave","getSaveFromOptimizedSave","setDarkMode","setTitlesHidden","edit","openTutorialMenu","setItem","uuid","json","json_data","JSON","parse","atob","allLogicComponents","newFile","showSnack","file","getBoardJson","currentBoardId","loadFromJson","openSavedBoards","getCurrentBoardCanvas","ui","toDataURL","getCurrentBoardSvg","copyItem","pasteItem","selectAll","cutItem","undo","redo","clearBoard","requestFullscreen","zoomIn","zoomOut","resetView","changeSystemName","changeName","scale","updateBoardTransform","gRPCMode","RequestData","RequestDataHeader","SavedBoard","BoardComponent","snackBar","changeRef","changesService","exportService","posX","posY","boardMoved","isLoading","isAutosaving","isAllClientsSendingData","canToggleClientsSendingData","AUTOSAVE_INTERVAL","componentTypes","ClientCluster","API","Cache","CloudStorage","LoadBalancer","MessageQueue","Proxy","TextField","WebServer","CDN","allComponents","beforeState","savedBoards","showContextMenu","showComponentContextMenu","lastTouchMoveX","lastTouchMoveY","handleMousemove","movementX","movementY","handleMouseup","button","contextMenuX","contextMenuY","deltaY","onwheel","scroll","onStopSelecting","logicComponent","getLogicComponent","size","pos","top","left","addSelection","isCreating","creatingItem","creatingItemOptions","stopCreating","lastTouch","pageX","pageY","setInterval","selections","selection","outputConnectionsList","from","to","constructor","copyItems","clearSelection","clearCurrentConnectionSelections","connectionRef","loadedSave","loadFromSave","loadLatestBoard","savedBoardsJson","getSavedBoardsJson","convertedBoard","getComponentsFromSave","savedBoard","displaySavedBoard","showSavedBoardsPopup","divContainer","className","onclick","selectedSavedBoard","ondblclick","closeSavedBoards","expOptions","isDarkMode","getCanvas","marginBottom","innerText","existing","savedBoardsRef","showSavedBoards","saveBoards","reset","saveCurrentBoardToAllBoards","getSvg","latestBoardJson","getLatestBoardJson","getCurrentBoardJson","startSelecting","canDrag","clearConnectionSelection","clearLineBreakSelection","modifier","isTitlesHidden","innerWidth","innerHeight","xFromCenter","yFromCenter","establishConnection","LogicClientCluster","startSendingData","endConnection","stopSendingData","pushChange","systemName","undoState","getUndo","redoState","getRedo","deleteSelection","showIcon","showInfo","wasError","outputPortsTable","getComponentTypeFromName","connectLoadedComponents","currentComponentIndex","boardSave","getBoardSave","currentBoardIndex","isFromOutput","updateComponents","clearLocalStorage","LOCALSTORAGE_AUTOSAVE_KEY","handleSelfClick","streamingConnections","ClientClusterOptions","streamConnection","connectionId","isSendingData","sendNewRequest","stopStream","floor","StreamingConnection","ApiComponent","LogicApi","REST","GraphQL","RPC","gRPC","handleTypeChange","CacheComponent","LogicCache","TitleComponent","ViewUpdated","$event","ConnectionComponent","connectionID","titlePopupX","titlePopupY","destroy","destroyComponent","portComponent1","onRemoveConnection","removeConnection","portComponent2","onSendData","dataSvg","anim","mainPath","getTotalLength","isResponsesHidden","getSendDataDelay","beginElement","onDeleteLineBreak","markForCheck","setConnectionSelection","startX","startY","endX","endY","addConnection","previous","next","moveLine","currentConnectionSelections","setLineBreakSelection","prev","moveX","moveY","SNAP_ANGLE","diffNextX","abs","diffNextY","diffPrevX","diffPrevY","onmouseup","roundRobinIndex","fillColor","messages","sendDataDispatcher","MessageQueueOptions","sendToConsumer","pop","fireSendData","roundRobin","nodesLength","OptionsmenuComponent","openGeneral","openProps","openActions","hasActions","multipleSelectionsTitle","onChangeSelection","optionsWrapper","actionsWrapper","multipleSelectionsX","multipleSelectionsY","isActive","optionsElement","getOptionsElement","actionsElement","getActionsElement","sameTitles","multipleSelectionsOldX","multipleSelectionsOldY","setPosition","realX","realY","OperatorComponent","resolver","hasChanged","HTTPMethod","HTTPMethodKeys","Object","values","k","isNaN","EndpointActionHTTPMethod","EndpointActionHTTPMethodKeys","Protocol","ProtocolKeys","APITypeKeys","gRPCModeKeys","LoadBalancerType","LoadBalancerTypeKeys","BalancingAlgorithmKeys","DatabaseType","DatabaseTypeKeys","WritePolicy","WritePolicyKeys","ReplacementPolicyKeys","moveComponents","stopPlacing","beforeOptions","LogicComponent","startPlacing","anchorRect","anchorRef","getBoundingClientRect","prevX","prevY","number","convertPosition","ctrlKey","getOutput","inputPortRef","optionsRef","actionsRef","code","span","isPerformanceMode","contains","generateTitle","border","onShowStatusCode","showStatusCode","onReceiveData","setReceiveDataAnimation","onFailedConnect","output","factory","resolveComponentFactory","ref","instance","location","Model","isDatabase","AppComponent","documentElement","PubsubComponent","LogicPubSub","idx","replace","addEndpoint","HTTPStatus","SavingService","LOCALSTORAGE_BOARDS_KEY","types","optimizedBoardNames","t","tt","o","p","es","eR","u","sM","m","as","gM","iCn","iSb","rEp","rpEp","gEp","gpEp","wEp","ag","rPl","wPl","w","fS","iB","iI","iMs","iS","bg","co","a","pf","oR","optimizedComponentTypes","A","AG","C","CC","CA","CS","D","LB","MQ","P","PS","TF","WS","CD","jsonReadyComponents","jsonReadyComponent","cloneOptions","jsonReadyConnection","connectedComponent","jsonReadySave","stringify","outputsTable","keys","connectTo","optimizedConnections","cloneOptionsOptimized","saveJson","getOptimizedBoard","getOptionsFromOptimized","normalConnections","normalConnection","boards","cloneObj","attribut","opt","Port","isOutput","hasMultipleConnections","removeConnectionDispatcher","dropRequestDispatcher","receiveData","isConnectedTo","connectWith","onConnectionUpdate","removeConnections","removeFromOther","triggerOnRemove","connectionIndex","hasConnection","connected","fireRemoveConnection","removed","Change","Board","ChangesService","undoStack","redoStack","state","change","currentState","fullscreen","saveFile","BoardUIComponent","loadFile","showSaved","exportPng","exportSvg","embedIFrame","copyComponent","pasteComponent","selectAllComponents","cutComponent","delComponent","changeScale","onboardTutorial1","saveFileName","confirmDialogText","confirmDialogOpen","isKeyboardShortcutsOpen","isExportPngDialogOpen","isExportSvgDialogOpen","isHelpersDisabled","isPreviewOpen","isSavingOpen","isEmbedIFrameOpen","isPerformanceModeEnabled","embedIFrameTemplate","showEmbedError","embedIFrameOptions","embedIFrameJson","undefined","embedIFrameBase64Encoded","embedIFrameUuid","canUseShortcuts","exportPngOptions","exportSvgOptions","isMobile","scaleControl","scaleSelectList","confirmDialogReturnFunction","controlShortcuts","files","isJson","f","readAsText","fileInput","setValue","onkeydown","navigator","userAgent","returnFunction","getComponents","obj","btoa","sendBoardPost","template","win","open","copyText","select","setSelectionRange","execCommand","alert","closeExportPngDialog","closeExportSvgDialog","setHelpersDisabled","setPerformanceMode","setResponsesHidden","png","exportPngPreview","preview","exportSvgPreview","onNameChange","showConfirmDialog","openSaveFile","load","openExportPngDialog","openExportSvgDialog","openEmbedIFrame","toggleHelpersDisabled","toggleTitlesHidden","openKeyboardShortcuts","togglePerformanceModeEnabled","toggleHideResponses","handleScaleChange","closeDialog","confirmDialog","closeKeyboardShortcuts","openPreview","exportAsPng","exportAsSvg","closePreview","AppModule","provide","useClass","multi","useValue","ProxyComponent","LogicProxy","EndpointSelectComponent","Type","Multiple","HasActions","HasStreamActions","ModifiableMethods","ConnectableEndpoints","DatabaseEndpoints","Title","ShowCounter","Property","AfterChange","act","LoadbalancerComponent","LogicLoadBalancer","algorithm","receiveDataDispatcher","showStatusCodeDispatcher","failedConnectDispatcher","operator","otherPort","canConnectTo","CopiedItem","PlacingService","isPlacing","copiedItems","portComponent","duration","horizontalPosition","items","connectionsList","item","pasteOriginX","pasteOriginY","pasteX","pasteY","comp1","comp1Initiated","comp2Initiated","logicConn","UUID","v","arrayEquals","a1","a2","sleep","time","formattedDbMethod","getFormattedMethod","download","filename","encodeURIComponent","click","downloadPng","downloadSvg","serializer","XMLSerializer","source","serializeToString","match","clone","object","createRoundedPath","coords","path","b","hypot","createRoundedCanvasPath","dist2D","x1","y1","x2","y2","dx","dy","sqrt","CanvasRenderingContext2D","prototype","textOverflow","textJustify","textStrokeMin","call","restore","s","di","dpos","pointAt","dl","dt","atan2","letterPadding","d","minWidth","nbspace","overflow","wl","translate","rotate","strokeText","getRateFromOutputRate","minRate","maxRate","maxOutputRate","diff","streamConnectionTable","ProxyOptions","APIOptions","initialEndpoint","CacheOptions","cacheHit","writePolicy","writeThrough","writeBack","replacementPolicy","SliderDescribedComponent","Tooltip","ClientclusterComponent","LoadBalancerOptions","ipHash","leastConnections","urlHash","hash","substr","hashInt","allConnections","least","leastNum","StopSelectingEvent","SelectionService","selectionWidth","selectionHeight","selectionScale","stopSelecting","selectionRect","moveSelectionRect","diffX","selectionPrevX","diffY","selectionPrevY","selectionClientX","selectionStartX","selectionClientY","selectionStartY","cX","cY","convertLineBreak","convertScaledPosition","changeSelectionDispatcher","multiple","reattach","selectionOutputPort","selectionInputPort","getConnectionComponent","oldSelection","fireChangeSelection","currentConnectionSelection","list","currentLineBreakSelection","currentLineBreakList","TextFieldOptions","ViewingService","HELPERS_KEY","TITLES_KEY","DARKMODE_KEY","PERFORMANCEMODE_KEY","RESPONSES_KEY","helpersDisabled","titlesHidden","darkModeEnabled","performanceModeEnabled","responsesHidden","disabled","hidden","saveToLocalStorage","enabled","CloudStorageComponent","LogicCloudStorage","InfoTooltipComponent","LineBreak","Connection","port1","port2","CloudStorageOptions","routes","AppRoutingModule","forRoot","CDNOptions","MessagequeueComponent","LogicMessageQueue","WebServerOptions","MenuItem","caption","mark","imageUrl","info","presetOptions","getColor","Category","ComponentmenuComponent","allCategories","categories","isOpen","isInfoOpen","mouseUp","placingItem","mouseMove","placingItemRef","SQL","NoSQL","category","relevantItems","isSearchRelevant","currentItem","searchValue","isRelevant","startCreating","currentInfoComponent","WebserverComponent","LogicWebServer","bootstrapModule","err","webpackEmptyAsyncContext","req","then","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["<div\n#anchorRef\n[class.side-menu]=\"isReadOnly\"\n[style.left.px]=\"LogicClient.options.X \"\n[style.top.px]=\"LogicClient.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/client.svg\">\n    </div>    \n</div>\n<div *ngIf=\"isReadOnly\" \n[style.left.px]=\"LogicClient.options.X \"\n[style.top.px]=\"LogicClient.options.Y\" class=\"read-only-controls\">\n    <button class=\"icon\" (click)=\"sendData()\" *ngIf=\"canSend\">\n        <img src=\"./assets/send.svg\">\n    </button>\n    <button *ngIf=\"canEstablishConnection\"(click)=\"establishConnection()\">\n        Establish<br>Connection\n    </button>\n    <button class=\"bottom\" *ngIf=\"canEndConnection\"(click)=\"endConnection()\">\n        End<br>Connection\n    </button>\n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div>\n            <div class=\"options-endpoint\">\n                <span class=\"property-name endpoint-title\">Target Endpoint: <info-tooltip [Message]=\"'The endpoint that data will be sent to using selected method.'\"></info-tooltip></span>\n                <div class=\"endpoint-protocol\">\n                    <span>{{ Protocol[protocol] }}</span>\n                </div>\n            </div>\n            <div class=\"options-endpoint\">\n                <mat-form-field appearance=\"fill\" class=\"endpoint-url\">\n                    <mat-select #endpointSelect (selectionChange)=\"handleEndpointChange()\" [(ngModel)]=\"LogicClient.options.endpointRef.endpoint\">\n                      <mat-option *ngFor=\"let endpoint of availableEndpoints\" [value]=\"endpoint\">{{endpoint.url}}</mat-option>\n                    </mat-select>\n                    <ng-template #emptyEndpoint>\n                        <mat-select value=\"/\" disabled>\n                            <mat-option value=\"/\">/</mat-option>\n                        </mat-select>\n                    </ng-template>\n                </mat-form-field>\n                <mat-form-field style=\"display: flex;\" appearance=\"fill\" class=\"endpoint-method\">\n                    <mat-select (selectionChange)=\"afterChange()\" [(ngModel)]=\"LogicClient.options.endpointRef.method\" #methodSelect>\n                      <mat-option *ngFor=\"let method of availableMethods\" [value]=\"method\">{{ formatMethod(HTTPMethod[method+''], protocol == Protocol.Database) }}</mat-option>\n                    </mat-select>\n                    <ng-template #emptyMethod>\n                        <mat-select value=\"GET\" disabled>\n                            <mat-option value=\"GET\">GET</mat-option>\n                        </mat-select>\n                    </ng-template>\n                </mat-form-field>\n            </div>\n        </div>\n        <slider-described class=\"mt\"\n        [Model]=\"LogicClient\"\n        [Title]=\"'Output rate'\"\n        [Property]=\"'outputRate'\"\n        [AfterChange]=\"afterChange\"\n        [Tooltip]=\"'Change the speed at which data is sent.'\"\n        ></slider-described>\n    </div>\n    <div #actions>\n        <div class=\"options-actions\">\n            <div class=\"actions-container\">\n                <button *ngIf=\"canEstablishConnection\"\n                 (click)=\"establishConnection()\">Establish Connection</button>\n                <button *ngIf=\"canEndConnection\"\n                 (click)=\"endConnection()\">End Connection</button>\n                <div>\n                    <button [disabled]=\"!canSend\"\n                    (click)=\"sendData()\">Send Data</button>\n                    <span [class.active]=\"isAutomaticSending\" [class.inactive]=\"!isAutomaticSending\" [class.disabled]=\"!canSend\" (click)=\"toggleAutomaticSend()\" class=\"options-button-icon inactive auto-send\"><i class=\"fas fa-sync-alt\"></i></span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Client } from 'src/models/Client';\nimport { Endpoint } from 'src/models/Endpoint';\nimport { gRPCMode } from 'src/models/enums/gRPCMode';\nimport { HTTPMethod } from 'src/models/enums/HTTPMethod';\nimport { Protocol } from 'src/models/enums/Protocol';\nimport { RequestData, RequestDataHeader } from 'src/models/RequestData';\nimport { arrayEquals, getRateFromOutputRate, sleep, UUID } from 'src/shared/ExtensionMethods';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'client',\n\ttemplateUrl: './client.component.html',\n\tstyleUrls: ['./client.component.scss']\n})\nexport class ClientComponent  extends OperatorComponent implements OnInit{\n\n\tpublic LogicClient : Client = new Client();\n\n\tavailableEndpoints: Endpoint[] = [];\n\tavailableMethods: HTTPMethod[] = [];\n\tprotocol: Protocol;\n\tcanAutoSend: boolean = true;\n\n\tcanSend: boolean = false;\n\tcanEstablishConnection: boolean = false;\n\tcanEndConnection: boolean = false;\n\n\t@ViewChild(\"endpointSelect\") endpointSelect;\n\t@ViewChild(\"methodSelect\") methodSelect;\n\n\tisAutomaticSending = false;\n\n\tngAfterViewInit(): void {\n\t\tthis.Init(true);\n  \t}\n\n\thandleEndpointChange(){\n\t\tthis.LogicClient.options.endpointRef.method = this.LogicClient.options.endpointRef.endpoint.supportedMethods[0];\n\t\tthis.availableMethods = this.endpointSelect.value.supportedMethods;\n\t\tthis.protocol = this.LogicClient.options.endpointRef.endpoint.protocol;\n\t\tthis.afterChange();\n\t}\n\n\tupdateSelection(){\n\t\tthis.LogicClient.updateEndpoint();\n\t\tlet currEdp = this.endpointSelect.value as Endpoint;\n\t\tlet currMth = this.methodSelect.value;\n\t\tthis.LogicClient.options.endpointRef.endpoint = null;\n\t\tthis.endpointSelect.value = null;\n\t\tthis.availableEndpoints = this.LogicClient.getAvailableEndpoints();\n\t\tif(this.availableEndpoints.length == 0){\n\t\t\tthis.availableMethods = [];\n\t\t\tthis.updateCanSendData();\n\t\t\tthis.updateCanEstablishStream();\n\t\t\tthis.updateCanEndStream();\n\t\t\treturn;\n\t\t}\n\t\tif(currEdp != null && currMth != null){\n\t\t\tlet was = false;\n\t\t\tfor(let e of this.availableEndpoints){ // need this workaround to keep values in material select....\n\t\t\t\tif(e.url == currEdp.url && arrayEquals(e.supportedMethods,currEdp.supportedMethods)){\n\t\t\t\t\twas = true;\n\t\t\t\t\tthis.LogicClient.options.endpointRef.endpoint = e;\n\t\t\t\t\tthis.endpointSelect.value = e;\n\t\t\t\t\tthis.availableMethods = e.supportedMethods;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.LogicClient.options.endpointRef.method = currMth;\n\t\t\tif(!was){\n\t\t\t\tthis.LogicClient.options.endpointRef.endpoint = this.availableEndpoints[0];\n\t\t\t\tthis.availableMethods = this.LogicClient.options.endpointRef.endpoint.supportedMethods;\n\t\t\t\tthis.LogicClient.options.endpointRef.method = this.availableMethods[0];\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tthis.LogicClient.options.endpointRef.endpoint = this.availableEndpoints[0];\n\t\t\tthis.availableMethods = this.LogicClient.options.endpointRef.endpoint.supportedMethods;\n\t\t\tthis.LogicClient.options.endpointRef.method = this.availableMethods[0];\n\t\t}\n\t\tthis.protocol = this.LogicClient.options.endpointRef.endpoint.protocol;\n\t\tthis.updateCanSendData();\n\t\tthis.updateCanEstablishStream();\n\t\tthis.updateCanEndStream();\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tpublic handleClick(event: MouseEvent){\n\t\tsuper.handleClick(event);\n\t\tthis.updateSelection();\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicClient;\n\t}\n\n\tasync toggleAutomaticSend(){\n\t\tthis.isAutomaticSending = !this.isAutomaticSending;\n\t\tif(this.isAutomaticSending){\n\t\t\tif(this.canAutoSend){\n\t\t\t\tthis.canAutoSend = false;\n\t\t\t\tthis.canAutoSend = await this.stream();\n\t\t\t}\n\t\t}\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tupdateCanSendData(){\n\t\tif(this.LogicClient.options.endpointRef.endpoint == null) {\n\t\t\tthis.canSend = false;\n\t\t\treturn;\n\t\t}\n\t\tthis.canSend = this.LogicClient.options.endpointRef.endpoint.grpcMode != gRPCMode['Server Streaming'] && \n\t\t\tthis.LogicClient.isConnectedToEndpoint || \n\t\t\tthis.LogicClient.options.endpointRef.endpoint.grpcMode == gRPCMode.Unary && this.LogicClient.options.endpointRef.endpoint.protocol != Protocol.WebSockets;\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tupdateCanEstablishStream(){\n\t\tthis.canEstablishConnection = this.LogicClient.options.endpointRef.endpoint != null && \n\t\t(this.LogicClient.options.endpointRef.endpoint.grpcMode != gRPCMode.Unary || \n\t\tthis.LogicClient.options.endpointRef.endpoint.protocol == Protocol.WebSockets) && \n\t\t!this.LogicClient.isConnectedToEndpoint\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tupdateCanEndStream(){\n\t\tthis.canEndConnection = this.LogicClient.options.endpointRef.endpoint != null && \n\t\t(this.LogicClient.options.endpointRef.endpoint.grpcMode != gRPCMode.Unary || \n\t\tthis.LogicClient.options.endpointRef.endpoint.protocol == Protocol.WebSockets) && \n\t\tthis.LogicClient.isConnectedToEndpoint\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tasync stream(){\n\t\tawait sleep( (1 / getRateFromOutputRate(this.LogicClient.options.outputRate)) * 1000);\n\t\tthis.updateCanSendData();\n\t\tif(!this.isAutomaticSending || !this.canSend) \n\t\t\treturn true;\n\t\tthis.sendData();\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t\treturn await this.stream();\n\t}\n\n\tasync sendData(){\n\t\tlet request = new RequestData();\n\n\t\trequest.header = new RequestDataHeader(this.LogicClient.options.endpointRef, this.LogicClient.options.protocol)\n\t\trequest.origin = this.LogicClient.outputPort.connections[0];\n\t\trequest.originID = this.LogicClient.originID;\n\t\tif(this.LogicClient.connectedId != null) {\n\t\t\trequest.requestId = this.LogicClient.connectedId;\n\t\t\trequest.header.stream = true;\n\t\t}\n\t\telse\n\t\t\trequest.requestId = UUID();\n\t\tlet res = this.LogicClient.sendData(request);\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t\tthis.updateSelection();\n\t\tif(! (await res)){\n\t\t\tthis.isAutomaticSending = false;\n\t\t\tthis.canAutoSend = true;\n\t\t\tif(this.isReadOnly)\n\t\t\t\tthis.cdRef.detectChanges();\n\t\t}\n\t}\n\n\testablishConnection(){\n\t\tif(this.LogicClient.isConnectedToEndpoint) \n\t\t\treturn;\n\t\tthis.LogicClient.isConnectedToEndpoint = true;\n\t\t\n\t\tlet id = UUID();\n\t\tlet request = new RequestData();\n\t\trequest.header = new RequestDataHeader(this.LogicClient.options.endpointRef, this.LogicClient.options.protocol, true);\n\t\trequest.origin = this.LogicClient.outputPort.connections[0];\n\t\trequest.originID = this.LogicClient.originID;\n\t\trequest.requestId = id;\n\t\tthis.LogicClient.connectedId = id;\n\t\tthis.LogicClient.sendData(request);\n\n\t\tthis.updateSelection();\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tasync endConnection(){\n\t\tif(!this.LogicClient.isConnectedToEndpoint) \n\t\t\treturn;\n\t\t\n\t\tlet id = this.LogicClient.connectedId;\n\t\tif(id == null) \n\t\t\treturn;\n\t\tlet request = new RequestData();\n\t\trequest.header = new RequestDataHeader(this.LogicClient.options.endpointRef, this.LogicClient.options.protocol, false);\n\t\trequest.origin = this.LogicClient.outputPort.connections[0];\n\t\trequest.originID = this.LogicClient.originID;\n\t\trequest.requestId = id;\n\t\tthis.LogicClient.connectedId = null;\n\t\tthis.canAutoSend = true;\n\t\tthis.isAutomaticSending = false;\n\t\tawait this.LogicClient.sendData(request);\n\t\tthis.LogicClient.isConnectedToEndpoint = false;\n\n\t\tthis.updateSelection();\n\t\tif(this.isReadOnly)\n\t\t\tthis.cdRef.detectChanges();\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new Client();\n\t\treturn c.color;\n\t}\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { TextField } from 'src/models/TextField';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n  \tselector: 'textfield',\n\ttemplateUrl: './textfield.component.html',\n\tstyleUrls: ['./textfield.component.scss']\n})\nexport class TextfieldComponent extends OperatorComponent implements OnInit{\n\n\tpublic LogicTextField : TextField = new TextField();\n\n  \t@ViewChild(\"field\") field: ElementRef;\n\n\tngAfterViewInit(): void {\n\t\tsuper.Init(false);\n\t\tthis.field.nativeElement.addEventListener('keydown', function(e) {\n\t\t\tif (e.key == 'Tab') {\n\t\t\t\te.preventDefault();\n\t\t\t\tvar start = this.selectionStart;\n\t\t\t\tvar end = this.selectionEnd;\n\t\t\t\n\t\t\t\tthis.value = this.value.substring(0, start) +\n\t\t\t\t\t\"\\t\" + this.value.substring(end);\n\t\t\t\n\t\t\t\tthis.selectionStart =\n\t\t\t\t\tthis.selectionEnd = start + 1;\n\t\t\t}\n\t\t});\n\t\tthis.onViewInit.forEach(e => e());\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tpublic handleMousedown(event){\n\t\tif(this.selectionService.currentSelections.indexOf(this) == -1)\n\t\t\tsuper.handleMousedown(event);\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicTextField;\n\t}\n\n\ttoggleBold(){\n\t\tthis.LogicTextField.options.isBold = !this.LogicTextField.options.isBold;\n\t}\n\n\ttoggleItalic(){\n\t\tthis.LogicTextField.options.isItalic = !this.LogicTextField.options.isItalic;\n\t}\n\n\tresize(e){\n\t\tthis.LogicTextField.options.width = e.width;\n\t\tthis.LogicTextField.options.height = e.height;\n\t}\n}","<div\n#anchorRef\n(mousedown)=\"handleMousedown( $event )\"\n(touchstart)=\"handleMousedown($event)\"\n(click)=\"handleClick($event)\"\n[style.left.px]=\"LogicTextField.options.X \"\n[style.top.px]=\"LogicTextField.options.Y\" \n>\n    <textarea [class.bold]=\"LogicTextField.options.isBold\" [class.italic]=\"LogicTextField.options.isItalic\" \n    [style.font-size]=\"LogicTextField.options.fontSize + 'px'\" spellcheck=\"false\" \n    [(ngModel)]=\"LogicTextField.options.title\" maxlength=\"250\" #field class=\"img-container\"\n    [style.width]=\"LogicTextField.options.width+'px'\" [style.height]=\"LogicTextField.options.height+'px'\"\n    [style.backgroundColor]=\"LogicTextField.options.backgroundColor\" [style.color]=\"LogicTextField.options.color\" \n    (resize)=\"resize($event)\"></textarea>\n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div>\n            <span class=\"property-name\">Font Size:</span>\n            <div class=\"text-format-container\">\n                <mat-form-field appearance=\"fill\" class=\"endpoint-url\">\n                    <mat-select (selectionChange)=\"afterChange()\" [(ngModel)]=\"LogicTextField.options.fontSize\">\n                        <mat-option [value]=\"8\">8px</mat-option>\n                        <mat-option [value]=\"10\">10px</mat-option>\n                        <mat-option [value]=\"12\">12px</mat-option>\n                        <mat-option [value]=\"14\">14px</mat-option>\n                        <mat-option [value]=\"16\">16px</mat-option>\n                        <mat-option [value]=\"18\">18px</mat-option>\n                        <mat-option [value]=\"20\">20px</mat-option>\n                    </mat-select>\n                    <ng-template #emptyEndpoint>\n                        <mat-select value=\"/\" disabled>\n                            <mat-option value=\"/\">/</mat-option>\n                        </mat-select>\n                    </ng-template>\n                </mat-form-field>\n                <span (click)=\"toggleBold(); afterChange()\" [class.inactive]=\"!LogicTextField.options.isBold\" [class.active]=\"LogicTextField.options.isBold\" class=\"options-button-icon\">\n                    <i class=\"fas fa-bold\"></i>\n                </span>\n                <span (click)=\"toggleItalic(); afterChange()\" [class.inactive]=\"!LogicTextField.options.isItalic\" [class.active]=\"LogicTextField.options.isItalic\" class=\"options-button-icon\">\n                    <i class=\"fas fa-italic\"></i>\n                </span>\n            </div>\n            <span class=\"property-name\">Color:</span>\n            <div class=\"text-format-contianer\">\n                <input [value]=\"LogicTextField.options.color\"\n                    [cpPosition]=\"'top-right'\"\n                    [(colorPicker)]=\"LogicTextField.options.color\"\n                    [cpPosition]=\"'top'\"/>\n      \n            </div>\n            <span class=\"property-name\">Background color:</span>\n            <div class=\"text-format-contianer\">\n                <input [value]=\"LogicTextField.options.backgroundColor\"\n                    [cpPosition]=\"'top-right'\"\n                    [(colorPicker)]=\"LogicTextField.options.backgroundColor\"\n                    [cpPosition]=\"'top'\"/>\n      \n            </div>\n        </div>\n    </div>\n</div>","export class Options{\n    title: string = \"Component\";\n    X: number = 0;\n    Y: number = 0;\n}","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { arrayEquals, sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { Connection } from \"./Connection\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { Endpoint, EndpointRef } from \"./Endpoint\";\nimport { gRPCMode } from \"./enums/gRPCMode\";\nimport { EndpointActionHTTPMethod, HTTPMethod } from \"./enums/HTTPMethod\";\nimport { Protocol } from \"./enums/Protocol\";\nimport { Port } from \"./Port\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\n\nexport class APIGateway extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    connectionTable: {[id:string]:Connection} = {};\n    options: APIGatewayOptions;\n    color = \"#2C5364\";\n\n    constructor() {\n        super()\n        this.inputPort = new Port(this, false, true);        \n        this.outputPort = new Port(this, true, true);       \n        this.options = new APIGatewayOptions(); \n        this.options.title = \"API Gateway\";\n    }\n\n    async receiveData(data: RequestData, fromOutput:boolean) {\n        if(fromOutput){\n            let targetConnection = this.connectionTable[data.responseId]\n            if(targetConnection == null) // connection could be ended before last data was sent\n                return; \n            // Checking if endpoint wasn't removed before stream end\n            this.fireReceiveData(data);\n            if(data.header.stream){\n                let hasAction = false;\n\n                this.getEndpoints().forEach(endpoint => {\n                    endpoint.actions.forEach(action => {\n                        if(action.endpoint.url === data.header.endpoint.endpoint.url &&\n                        arrayEquals(action.endpoint.supportedMethods, data.header.endpoint.endpoint.supportedMethods)){\n                            hasAction = true;\n                        }\n                    })\n                })\n                if(!hasAction){ // send end of stream to out if the action no longer exists\n                    data.header.stream = false;\n                    data.requestId = data.responseId;\n                    data.responseId = null;\n                    let result = this.outputPort.sendData(data,data.origin)\n                    if(result)\n                        this.connectionTable[data.responseId] = null;\n                    return;\n                }\n                let result = await this.inputPort.sendData(data, this.connectionTable[data.responseId]);\n                if(!result && data.header.stream){ // send end stream to out if the client doesn't exist \n                    data.header.stream = false;\n                    data.requestId = data.responseId;\n                    data.responseId = null;\n                    let res = this.outputPort.sendData(data,data.origin)\n                    if(res)\n                        this.connectionTable[data.responseId] = null;\n                }\n            }\n            else{\n                if(data.header.endpoint.endpoint.protocol == Protocol.WebSockets || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Bidirectional Streaming\"] || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Server Streaming\"])\n                    await this.inputPort.sendData(data, this.connectionTable[data.responseId]);\n            }\n        }\n        else{\n            if(data.requestId == \"\" || data.requestId == null) throw new Error(\"Request ID can not be null\");\n            if(data.header.endpoint == null) throw new Error(\"Endpoint can not be null\")\n\n            let targetEndpoint = this.getTargetEndpoint(data);\n            if(targetEndpoint == null)\n                return;\n\n            this.fireReceiveData(data);\n\n            let sendResponse = false;\n            let isFirstStreamRequest = this.connectionTable[data.requestId] == null && data.header.stream;\n            let isLastStreamRequest = this.connectionTable[data.requestId] != null && !data.header.stream;\n            let dontSendRequestResponse = (isFirstStreamRequest || isLastStreamRequest);\n\n            // Send data to every action \n            for(let action of targetEndpoint.actions){\n                // Get connection to given action endpoint\n                if(action.endpoint == null || action.endpoint.url == null)\n                    continue;\n                let targetConnection: Connection;\n                for(let connection of this.outputPort.connections){\n                    let endpoints = connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n                    if(endpoints.find(endpoint => endpoint.url == action.endpoint.url && arrayEquals(endpoint.supportedMethods,action.endpoint.supportedMethods)) != null ){\n                        targetConnection = connection;\n                        break;\n                    }\n                }\n                if(targetConnection == null)\n                    continue;\n\n                let isStream = action.endpoint.protocol == Protocol.WebSockets || action.endpoint.grpcMode != gRPCMode.Unary;\n                if(data.header.stream && isStream && action.endpoint.grpcMode == gRPCMode[\"Server Streaming\"] \n                && !dontSendRequestResponse || dontSendRequestResponse && !isStream) {\n                    continue;\n                }\n\n                let requestId = (isStream && !data.header.stream && !isLastStreamRequest) ? UUID() : data.requestId;\n                let request = new RequestData();\n                let epRef = new EndpointRef();\n                epRef.endpoint = action.endpoint;\n                epRef.method = EndpointActionHTTPMethod[action.method] == \"Inherit\" ? data.header.endpoint.method : HTTPMethod[EndpointActionHTTPMethod[action.method]]\n                \n                request.header = new RequestDataHeader(epRef, action.endpoint.protocol, data.header.stream);\n\n                request.origin = targetConnection;\n                request.originID = this.originID;\n                request.requestId = requestId;\n\n                if(isStream)\n                    this.outputPort.sendData(request, targetConnection);\n                else{\n                    if(!data.header.stream) \n                        sendResponse = true;\n                    if(action.asynchronous){\n                        this.outputPort.sendData(request, targetConnection);\n                    }\n                    else{\n                        await this.outputPort.sendData(request, targetConnection);\n                        if(data.sendResponse)\n                            this.connectionTable[requestId] = data.origin;\n                    }\n                }\n            }\n\n            if(isFirstStreamRequest)\n                this.connectionTable[data.requestId] = data.origin;\n            if(targetEndpoint.grpcMode == gRPCMode[\"Server Streaming\"]) {\n                if(isFirstStreamRequest){\n                    // Initiate server stream \n                    this.serverStream(this.getResponse(data), targetEndpoint);\n                   // this.serverStream(data, targetEndpoint);\n                }\n                if(isLastStreamRequest)\n                    this.connectionTable[data.requestId] = null;\n            }\n            if((sendResponse || targetEndpoint.actions.length == 0 && !data.header.stream) && data.sendResponse){\n                // Send response back\n                this.connectionTable[data.requestId] = data.origin;\n                await this.sendData(this.getResponse(data));\n            }\n        }\n    }\n\n    async sendData(response: RequestData, clear: boolean = true) {\n        let targetConnection = this.connectionTable[response.responseId]\n        if(targetConnection == null)\n            return;\n        let result = await this.inputPort.sendData(response, targetConnection);\n        if(!result && response.header.stream){\n            response.header.stream = false;\n            response.requestId = response.responseId;\n            response.responseId = null;\n            let res = this.outputPort.sendData(response,response.origin)\n            if(res){\n                console.log(\"clear 1\")\n                this.connectionTable[response.responseId] = null;\n            }\n        }\n        else if(clear){\n            this.connectionTable[response.responseId] = null;\n        }\n    }\n\n    async serverStream(data: RequestData, streamingEndpoint: Endpoint){\n        await sleep(700);\n        console.log(data.responseId);\n        console.log(data.requestId);\n        console.log(\"----\")\n        if(\n            streamingEndpoint.actions.filter(action => action.endpoint.grpcMode != gRPCMode[\"Server Streaming\"]).length == 0 \n            || this.connectionTable[data.responseId] == null \n            || (streamingEndpoint.grpcMode != gRPCMode[\"Server Streaming\"])\n            || this.getEndpoints().indexOf(streamingEndpoint) == -1) \n            return;\n\n        for(let action of streamingEndpoint.actions){\n            // Get connection to given action endpoint\n            if(action.endpoint == null || action.endpoint.url == null || action.endpoint.grpcMode != gRPCMode.Unary || action.endpoint.protocol == Protocol.WebSockets)\n                continue;\n\n            let targetConnection: Connection;\n            for(let connection of this.outputPort.connections){\n                let endpoints = connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n                if(endpoints.find(endpoint => endpoint.url == action.endpoint.url && arrayEquals(endpoint.supportedMethods,action.endpoint.supportedMethods)) != null ){\n                    targetConnection = connection;\n                    break;\n                }\n            }\n            if(targetConnection == null)\n                continue;\n\n            let newReqId = UUID();\n            this.connectionTable[newReqId] = data.origin\n            let request = new RequestData();\n            let epRef = new EndpointRef();\n            epRef.endpoint = action.endpoint;\n            epRef.method = EndpointActionHTTPMethod[action.method] == \"Inherit\" ? data.header.endpoint.method : HTTPMethod[EndpointActionHTTPMethod[action.method]]\n\n            request.header = new RequestDataHeader(epRef, action.endpoint.protocol);\n            request.origin = targetConnection;\n            request.originID = this.originID;\n            request.requestId = newReqId;\n            await this.outputPort.sendData(request, targetConnection);\n        }\n\n        await this.sendData(data, false);\n        await this.serverStream(data, streamingEndpoint);\n    }\n\n    getEndpoints() : Endpoint[]{\n        return this.options.restEndpoints\n            .concat(this.options.rpcEndpoints)\n            .concat(this.options.grpcEndpoints)\n            .concat(this.options.graphqlEndpoints)\n            .concat(this.options.websocketsEndpoints);\n    }\n}\n\nexport class APIGatewayOptions extends EndpointOptions{\n    restEndpoints: Endpoint[] = [];\n    rpcEndpoints: Endpoint[] = [];\n    graphqlEndpoints: Endpoint[] = [];\n    grpcEndpoints: Endpoint[] = [];\n    websocketsEndpoints: Endpoint[] = [];\n}","import { Injectable } from '@angular/core';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\nimport { APIGateway } from 'src/models/APIGateway';\nimport { ClientCluster } from 'src/models/ClientCluster';\nimport { MessageQueue } from 'src/models/MessageQueue';\nimport { Port } from 'src/models/Port';\nimport { TextField } from 'src/models/TextField';\nimport { createRoundedPath, UUID } from 'src/shared/ExtensionMethods';\nimport { PlacingService } from './placing.service';\nimport { SavingService } from './saving.service';\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class ExportService {\n\n\tprivate svgns = \"http://www.w3.org/2000/svg\";\n\n  \tconstructor(private placingService: PlacingService, private savingService: SavingService) { }\n\n\tpublic getComponentSize(component: IDataOperator){\n\t\tif(component instanceof TextField)\n\t\t\treturn {width: component.options.width, height: component.options.height};\n\t\treturn {width: component instanceof MessageQueue ? 80 : 40, height: component instanceof APIGateway || component instanceof ClientCluster ? 80 : 40}\n\t}\n\n  \tasync getCanvas(components: IDataOperator[], options: ExportPngOptions){\n\t\tlet canvas = document.createElement(\"canvas\");\n\t\tcanvas.width = this.placingService.boardWidth;\n\t\tcanvas.height = this.placingService.boardHeight;\n\t\tlet offsetX = 0;\n\t\tlet offsetY = 0;\n\t\tif(options.captureUsed){ // Crop the board\n\t\t\tlet {minX, minY, maxX, maxY} = this.captureUsedArea(components);\n\t\t\toffsetX = Math.max(0, minX - 40);\n\t\t\toffsetY = Math.max(0, minY - 40);\n\t\t\tcanvas.width = Math.min(this.placingService.boardWidth, maxX + 40 - offsetX);\n\t\t\tcanvas.height = Math.min(this.placingService.boardHeight, maxY + 40 - offsetY);\n\t\t}\n\t\tlet ctx = canvas.getContext(\"2d\");\n\t\tif(!options.transparentBackground){\n\t\t\tctx.fillStyle = options.lightMode ? \"#fff\" : \"#282A37\";\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t}\n\t\tfor(let component of components){\n\t\t\t// Render component\n\t\t\tctx.beginPath()\n\t\t\tctx.fillStyle = component.color;\n\t\t\tlet {width, height} = this.getComponentSize(component);\n\t\n\t\t\t// Render image\n\t\t\tif(component instanceof TextField){\n\t\t\t\tctx.fillStyle = component.options.backgroundColor;\n\t\t\t\tctx.strokeStyle = \"rgba(0, 0, 0, 0.1)\";\n\t\t\t\tctx.lineWidth = 2;\n\t\t\t\tctx.rect(component.options.X - offsetX, component.options.Y - offsetY, component.options.width, component.options.height);\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.fillStyle = component.options.color;\n\t\t\t\tctx.font = `${component.options.isBold ? \"bold\" : \"\"}  ${component.options.isItalic ? \"italic\" : \"\"} ${component.options.fontSize}px Arial`;\n\t\t\t\tctx.textAlign = 'left'\n\t\t\t\tctx.textBaseline = 'alphabetic'\n\t\t\t\tthis.wrapCanvasText(ctx, component.options.title, component.options.X - offsetX + 3, component.options.Y - offsetY + component.options.fontSize + 3,  component.options.width - 6, component.options.height - 6, component.options.fontSize+3)\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.roundRect(ctx, component.options.X - offsetX, component.options.Y - offsetY, width, height, 5);\n\t\t\t\tlet img = new Image();\n\t\t\t\tawait new Promise(r => {img.onload=r ; img.src=`./assets/${this.savingService.getComponentType(component).toLowerCase()}.svg`});\n\t\t\t\tctx.drawImage(img, component.options.X - offsetX + width/2 - 20 + 7, component.options.Y - offsetY + height/2 - 20 + 7, 26, 26);\n\t\t\t\tif(options.showTitles)\n\t\t\t\t\tthis.renderComponentTitleToCanvas(ctx, component, options.transparentBackground ? options.lightTitles : !options.lightMode, offsetX, offsetY);\n\t\t\t}\n\t\t\tctx.fillStyle = options.lightMode ? \"#fff\" : \"#282A37\"\n\t\t\tctx.lineWidth = 2;\n\t\t\tif(component[\"inputPort\"]){ \n\t\t\t\t// Render connections\n\t\t\t\tthis.renderConnectionsToCanvas(ctx, options.transparentBackground ? options.lightTitles : !options.lightMode, component, offsetX, offsetY);\n\t\t\t}\n\t\t}\n\t\t\n\t\tctx.fillStyle = \"#282A37\";\n\t\tthis.renderPortsToCanvas(ctx, components, offsetX, offsetY, options.lightMode);\n\t\treturn canvas;\n\t}\n\n\tprivate wrapCanvasText(context: CanvasRenderingContext2D, text: string, x: number, y: number, maxWidth: number, maxHeight: number, lineHeight: number) {\n        let line = '';\n\t\tlet height = lineHeight;\n\t\tfor(let letter of text){\n\t\t\tvar newLine = line + letter;\n\t\t\tvar metrics = context.measureText(newLine);\n\t\t\tvar newWidth = metrics.width;\n\t\t\tif(newWidth > maxWidth){\n\t\t\t\tcontext.fillText(line, x, y);\n\t\t\t\tline = letter;\n\t\t\t\ty += lineHeight;\n\t\t\t\theight += lineHeight;\n\t\t\t\tif(height >= maxHeight){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tline = newLine;\n\t\t\t}\n\t\t}\n        context.fillText(line, x, y);\n\t}\n\n\tprivate renderPortsToCanvas(ctx: CanvasRenderingContext2D, components: IDataOperator[], offsetX: number, offsetY: number, lightMode: boolean){\n\t\tif(lightMode) {\n\t\t\tctx.fillStyle = \"#fff\";\n\t\t}\n\t\tfor(let component of components){ // Render ports (render them over connections)\n\t\t\tctx.strokeStyle = component.color;\n\t\t\tctx.lineWidth = 2;\n\t\t\tlet {width, height} = this.getComponentSize(component);\n\t\t\tif(component[\"inputPort\"] && component[\"inputPort\"].connections.length > 0){ // Render input port\n\t\t\t\tctx.beginPath()\n\t\t\t\tctx.arc(component.options.X - offsetX - 12, component.options.Y - offsetY + height/2, 7.5, 0, 2 * Math.PI, false);\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t\tif(component[\"outputPort\"] && component[\"outputPort\"].connections.length > 0){ // Render output port\n\t\t\t\tctx.beginPath()\n\t\t\t\tctx.arc(component.options.X - offsetX + width + 12, component.options.Y - offsetY + height/2, 7.5, 0, 2 * Math.PI, false);\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderConnectionsToCanvas(ctx: CanvasRenderingContext2D, lightMode: boolean, component: IDataOperator, offsetX: number, offsetY: number){\n\t\tfor(let connection of (component[\"inputPort\"] as Port).connections){\n\t\t\tlet {width, height} = this.getComponentSize(component);\n\t\t\tlet component2 = connection.getOtherPort(component[\"inputPort\"]).parent;\n\t\t\tlet size2 = this.getComponentSize(component2);\n\t\t\tvar grad= ctx.createLinearGradient(component.options.X - offsetX, component.options.Y - offsetY,\n\t\t\t\t component2.options.X - offsetX + size2.width, component2.options.Y - offsetY + size2.height);\n\t\t\tgrad.addColorStop(0, component.color);\n\t\t\tgrad.addColorStop(1, component2.color);\n\t\t\tctx.strokeStyle = grad;\n\t\t\tlet comp2 = connection.getOtherPort(component[\"inputPort\"]).parent;\n\t\t\tlet comp2Size = this.getComponentSize(comp2);\n\t\t\tlet comp2Width = comp2Size.width;\n\t\t\tlet comp2Height = comp2Size.height;\n\t\t\tif(connection.lineBreaks == null || connection.lineBreaks.length == 0){\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(component.options.X - offsetX - 12, component.options.Y - offsetY + height/2);\n\t\t\t\tctx.lineTo(comp2.options.X - offsetX + comp2Width + 12, comp2.options.Y - offsetY + comp2Height/2);\n\t\t\t\tctx.stroke()\n\t\t\t\tctx.closePath() \n\t\t\t}\n\t\t\telse{\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(connection.lineBreaks[0].x - offsetX, connection.lineBreaks[0].y - offsetY);\n\t\t\t\tctx.closePath() \n\t\t\t\tfor(let lineBreak of connection.lineBreaks){\n\t\t\t\t\tctx.lineTo(lineBreak.x - offsetX, lineBreak.y - offsetY);\n\t\t\t\t\tctx.stroke()\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tif(connection.lineBreaks && connection.title){\n\t\t\t\t// Draw text along the path\n\t\t\t\tctx.font=\"12px Arial\";\n\t\t\t\tctx.textBaseline = \"bottom\";\n\t\t\t\tctx.strokeStyle = \"transparent\";\n\t\t\t\tctx.fillStyle = lightMode ? \"#dadada\" : \"#454545\";\n\t\t\t\tlet lineBreaks = [];\n\t\t\t\tconnection.lineBreaks.forEach(br => {lineBreaks.push(...[br.x - offsetX, br.y - offsetY]);});\n\t\t\t\t(ctx as any).textPath(connection.title || \"\", lineBreaks);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderComponentTitleToCanvas(ctx: CanvasRenderingContext2D, component: IDataOperator, lightMode: boolean, offsetX: number, offsetY: number){\n\t\tlet {width, height} = this.getComponentSize(component);\n\t\tctx.fillStyle = lightMode ? \"#c9c9c9\" : \"#454545\";\n\t\tctx.setLineDash([0]);\n\t\tctx.font = 'normal 12px Arial'\n\t\tctx.textAlign = 'center'\n\t\tctx.textBaseline = 'alphabetic'\n\t\tctx.fillText(component.options.title, component.options.X - offsetX+width/2, component.options.Y - offsetY - 10)\n\t\n\t}\n\n\tprivate wrapSvgText(svg: SVGElement, text: string, color: string, x: number, y: number, maxWidth: number, maxHeight: number, lineHeight: number, fontSize: number, isBold = false, isItalic = false) {\n        let line = '';\n\t\tlet height = lineHeight;\n\n\t\tfor(let letter of text){\n\t\t\tvar newLine = line + letter;\n\t\t\tlet newSvgLine = this.createSvgText(newLine, color, x, y, fontSize, isBold, isItalic);\n\t\t\tsvg.appendChild(newSvgLine);\n\t\t\tlet newWidth = newSvgLine.getComputedTextLength()\n\t\t\tsvg.removeChild(newSvgLine);\n\t\t\tif(newWidth > maxWidth){\n\t\t\t\tlet newText = this.createSvgText(line, color, x, y, fontSize, isBold, isItalic);\n\t\t\t\tsvg.appendChild(newText);\n\t\t\t\tline = letter;\n\t\t\t\ty += lineHeight;\n\t\t\t\theight += lineHeight;\n\t\t\t\tif(height >= maxHeight){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tline = newLine;\n\t\t\t}\n\t\t}\n\t\tlet newText = this.createSvgText(line, color, x, y, fontSize, isBold, isItalic);\n\t\tsvg.appendChild(newText);\n\t}\n\n\tprivate createSvgText(text, color: string, x, y, fontSize, isBold = false, isItalic = false){\n\t\tlet textSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n\t\ttextSvg.setAttributeNS(null,\"x\",(x).toString());     \n\t\ttextSvg.setAttributeNS(null,\"y\",(y).toString()); \n\t\ttextSvg.setAttributeNS(null,\"font-size\",`${fontSize}px`);\n\t\ttextSvg.setAttributeNS(null,\"font-family\",'Arial');\n\t\ttextSvg.setAttributeNS(null,\"font-weight\",`${isBold ? \"bold\" : \"normal\"}`);\n\t\ttextSvg.setAttributeNS(null,\"font-style\",`${isItalic ? \"italic\" : \"normal\"}`);\n\t\ttextSvg.setAttributeNS(null,\"fill\", color);\n\t\ttextSvg.textContent = text;\n\t\treturn textSvg;\n\t}\n\n\t/**\n\t * Returns minimal and maximal x and y coordinates of the given components\n\t */\n\tprivate captureUsedArea(components: IDataOperator[]){\n\t\tlet minX = Number.MAX_VALUE;\n\t\tlet minY = Number.MAX_VALUE;\n\t\tlet maxX = 0;\n\t\tlet maxY = 0;\n\t\tfor(let component of components){\n\t\t\tlet width: number;\n\t\t\tlet height: number;\n\t\t\tif(component instanceof TextField){\n\t\t\t\twidth = component.options.width;\n\t\t\t\theight = component.options.height;\t\t\t\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlet sizes = this.getComponentSize(component);\n\t\t\t\twidth = sizes.width;\n\t\t\t\theight = sizes.height;\n\t\t\t}\n\n\t\t\tlet outputPort = component[\"outputPort\"]\n\t\t\tif(outputPort){\n\t\t\t\tlet connections = outputPort.connections;\n\t\t\t\tconnections.forEach(connection => {\n\t\t\t\t\tconnection.lineBreaks.forEach(lineBreak => {\n\t\t\t\t\t\tminX = Math.min(minX, lineBreak.x);\n\t\t\t\t\t\tminY = Math.min(minY, lineBreak.y);\n\t\t\t\t\t\tmaxX = Math.max(maxX, lineBreak.x);\n\t\t\t\t\t\tmaxY = Math.max(maxY, lineBreak.y);\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tminX = Math.min(minX, component.options.X);\n\t\t\tminY = Math.min(minY, component.options.Y);\n\t\t\tmaxX = Math.max(maxX, component.options.X + width);\n\t\t\tmaxY = Math.max(maxY, component.options.Y + height);\n\t\t}\n\t\treturn {minX, minY, maxX, maxY};\n\t}\n\n\tasync getSvg(components: IDataOperator[], options: ExportSvgOptions){\n\t\tif(components.length == 0)\n\t\t\treturn null;\n\t\tlet svg = document.createElementNS(this.svgns, \"svg\") as SVGElement;\n\t\tdocument.getElementsByTagName(\"body\")[0].appendChild(svg);\n\t\tlet offsetX = 0;\n\t\tlet offsetY = 0;\n\t\t// Crop the board\n\t\tlet {minX, minY, maxX, maxY} = this.captureUsedArea(components);\n\t\toffsetX = Math.max(0, minX - 40);\n\t\toffsetY = Math.max(0, minY - 40);\n\t\tsvg.setAttribute(\"width\", `${Math.min(this.placingService.boardWidth, maxX + 40 - offsetX)}`);\n\t\tsvg.setAttribute(\"height\", `${Math.min(this.placingService.boardHeight, maxY + 40 - offsetY)}`);\n\t\tfor(let component of components){\n\t\t\tlet {width, height} = this.getComponentSize(component);\n\t\n\t\t\t// Render image\n\t\t\tif(component instanceof TextField){\n\t\t\t\tlet rect = document.createElementNS(this.svgns, 'rect');\n\t\t\t\trect.setAttributeNS(null, 'x', (component.options.X - offsetX).toString());\n\t\t\t\trect.setAttributeNS(null, 'y', (component.options.Y - offsetY).toString());\n\t\t\t\trect.setAttributeNS(null, 'width', component.options.width.toString());\n\t\t\t\trect.setAttributeNS(null, 'height', component.options.height.toString());\n\t\t\t\trect.setAttributeNS(null, 'fill', component.options.backgroundColor);\n\t\t\t\trect.setAttributeNS(null, 'stroke-width', '2');\n\t\t\t\trect.setAttributeNS(null, 'stroke', \"rgba(0, 0, 0, 0.1)\");\n\t\t\t\tsvg.appendChild(rect);\n\t\t\t\tthis.wrapSvgText(svg, component.options.title, component.options.color, component.options.X - offsetX + 3, component.options.Y - offsetY + component.options.fontSize + 3, component.options.width - 6, component.options.height - 6, component.options.fontSize, component.options.fontSize, component.options.isBold, component.options.isItalic);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tlet rect = document.createElementNS(this.svgns, 'rect');\n\t\t\t\trect.setAttributeNS(null, 'x', (component.options.X - offsetX).toString());\n\t\t\t\trect.setAttributeNS(null, 'y', (component.options.Y - offsetY).toString());\n\t\t\t\trect.setAttributeNS(null, 'rx', \"3\");\n\t\t\t\trect.setAttributeNS(null, 'ry', \"3\");\n\t\t\t\trect.setAttributeNS(null, 'width', width.toString());\n\t\t\t\trect.setAttributeNS(null, 'height', height.toString());\n\t\t\t\trect.setAttributeNS(null, 'fill',  component.color);\n\t\t\t\tsvg.appendChild(rect);\n\t\t\t\tlet img = document.createElementNS(this.svgns,'image') as SVGImageElement;\n\t\t\t\timg.setAttributeNS(null,'height','26');\n\t\t\t\timg.setAttributeNS(null,'width','26');\n\t\t\t\t//img.setAttributeNS('http://www.w3.org/1999/xlink','href', `http://localhost:4200/assets/${this.savingService.getComponentType(component).toLowerCase()}.svg`);\n\t\t\t\tconst encoded = await this.getBase64FromUrl(`https://janpane019.github.io/mp2023/assets/${this.savingService.getComponentType(component).toLowerCase()}.svg`);\n\t\t\t\timg.setAttributeNS('http://www.w3.org/1999/xlink','href', encoded.toString());\n\t\t\t\timg.setAttributeNS(null,'x', (component.options.X - offsetX + width/2 - 20 + 7).toString());\n\t\t\t\timg.setAttributeNS(null,'y', (component.options.Y - offsetY + height/2 - 20 + 7).toString());\n\t\t\t\timg.setAttributeNS(null, 'visibility', 'visible');\n\t\t\t\t\n\t\t\t\tsvg.appendChild(img);\n\t\t\t\tif(options.showTitles)\n\t\t\t\t\tthis.renderComponentTitleToSvg(svg, component, options.lightTitles, offsetX, offsetY);\n\t\t\t}\n\n\t\t\tif(component[\"inputPort\"]){ \n\t\t\t\tthis.renderConnectionsToSvg(svg, component, options.lightTitles, offsetX, offsetY);\n\t\t\t}\n\t\t}\n\n\t\tthis.renderPortsToSvg(svg, components, options.lightTitles, offsetX, offsetY);\n\t\treturn svg;\n\t}\n\n\tprivate renderPortsToSvg(svg: SVGElement, components: IDataOperator[], lightMode: boolean, offsetX: number, offsetY: number){\n\t\tfor(let component of components){ // Render ports (render then over connections)\n\t\t\tlet {width, height} = this.getComponentSize(component);\n\t\t\tif(component[\"inputPort\"] && component[\"inputPort\"].connections.length > 0){ // Render input port\n\t\t\t\tlet port = document.createElementNS(this.svgns,\"circle\");\n\t\t\t\tport.setAttribute(\"cx\", (component.options.X - offsetX - 12).toString());\n\t\t\t\tport.setAttribute(\"cy\", (component.options.Y - offsetY + height/2).toString());\n\t\t\t\tport.setAttribute(\"r\", \"7.5\");\n\t\t\t\tport.setAttribute(\"fill\", \"#fff\");\n\t\t\t\tport.setAttribute(\"stroke\", component.color);\n\t\t\t\tport.setAttribute(\"stroke-width\", \"2\");\n\t\t\t\tsvg.appendChild(port);\n\t\t\t}\n\t\t\tif(component[\"outputPort\"] && component[\"outputPort\"].connections.length > 0){ // Render output port\n\t\t\t\tlet port = document.createElementNS(this.svgns,\"circle\");\n\t\t\t\tport.setAttribute(\"cx\", (component.options.X - offsetX + width + 12).toString());\n\t\t\t\tport.setAttribute(\"cy\", (component.options.Y - offsetY + height/2).toString());\n\t\t\t\tport.setAttribute(\"r\", \"7.5\");\n\t\t\t\tport.setAttribute(\"fill\", \"#fff\");\n\t\t\t\tport.setAttribute(\"stroke\", component.color);\n\t\t\t\tport.setAttribute(\"stroke-width\", \"2\");\n\t\t\t\tsvg.appendChild(port);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderConnectionsToSvg(svg: SVGElement, component: IDataOperator, lightMode: boolean, offsetX: number, offsetY: number){\n\t\t// Render connections\n\t\tfor(let connection of (component[\"inputPort\"] as Port).connections){\n\t\t\tvar newLine = document.createElementNS(this.svgns,'path');\n\t\t\tlet grad = document.createElementNS(this.svgns, \"linearGradient\");\n\t\t\tlet stop1 = document.createElementNS(this.svgns, \"stop\");\n\t\t\tlet stop2 = document.createElementNS(this.svgns, \"stop\");\n\t\t\tlet id = UUID().slice(0, 6);\n\t\t\tgrad.id = id;\n\t\t\tnewLine.id = `con-${id}`;\n\t\t\tgrad.setAttribute(\"x1\", \"0\");\n\t\t\tgrad.setAttribute(\"y1\", \"0\");\n\t\t\tgrad.setAttribute(\"x2\", \"100%\");\n\t\t\tgrad.setAttribute(\"y2\", \"0\");\n\t\t\tstop1.setAttribute(\"offset\", \"0%\");\n\t\t\tstop2.setAttribute(\"offset\", \"100%\");\n\t\t\tstop1.setAttribute(\"stop-color\", connection.getOtherPort(component[\"inputPort\"]).parent.color);\n\t\t\tstop2.setAttribute(\"stop-color\", component.color);\n\t\t\tlet line = createRoundedPath(connection.lineBreaks.map(br => {return {x: br.x - offsetX, y: br.y - offsetY}}), 10, false);\n\t\t\tnewLine.setAttribute(\"d\", line);\n\t\t\tnewLine.setAttribute(\"stroke\", `url(#${id})`);\n\t\t\tnewLine.setAttribute(\"fill\", \"transparent\");\n\t\t\tnewLine.setAttribute(\"stroke-width\", \"2\");\n\t\t\tgrad.appendChild(stop1);\n\t\t\tgrad.appendChild(stop2);\n\t\t\tsvg.appendChild(grad);\n\t\t\tsvg.appendChild(newLine);\n\n\t\t\tif(connection.lineBreaks && connection.title){\n\t\t\t\tlet text = document.createElementNS(this.svgns, \"text\");\n\t\t\t\tlet textPath = document.createElementNS(this.svgns, \"textPath\");\n\t\t\t\ttext.setAttribute(\"text-anchor\", \"middle\");\n\t\t\t\ttext.setAttribute(\"fill\", lightMode ? \"#dadada\" : \"454545\");\n\t\t\t\ttext.setAttribute(\"font-size\", \"12px\");\n\t\t\t\ttext.setAttribute(\"font-family\", \"Arial\");\n\t\t\t\ttextPath.setAttribute(\"startOffset\", \"50%\");\n\t\t\t\ttextPath.setAttribute(\"href\", `#con-${id}`);\n\t\t\t\ttextPath.setAttribute(\"dominant-baseline\", \"text-after-edge\");\n\t\t\t\ttextPath.textContent = connection.title;\n\t\t\t\ttext.appendChild(textPath);\n\t\t\t\tsvg.appendChild(text);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate renderComponentTitleToSvg(svg: SVGElement, component: IDataOperator, lightMode: boolean, offsetX: number, offsetY: number){\n\t\tlet {width, height} = this.getComponentSize(component);\n\t\tlet newText = this.createSvgText(component.options.title, lightMode ? \"#fff\" : \"#000\", component.options.X - offsetX+width/2, component.options.Y - offsetY - 10, 12);\n\t\tnewText.setAttributeNS(null,\"text-anchor\",'middle');\n\t\tnewText.setAttributeNS(null,\"fill\", lightMode ? \"#c9c9c9\" : \"#454545\");\n\t\tsvg.appendChild(newText);\n\t}\n\n\tprivate roundRect(ctx : CanvasRenderingContext2D, x : number, y : number, width : number, height : number, radius : number = 5) {\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\t\tctx.fill();\n\t}\n\n\tprivate getBase64FromUrl = async (url) => {\n\t\tconst data = await fetch(url);\n\t\tconst blob = await data.blob();\n\t\treturn new Promise((resolve) => {\n\t\t  \tconst reader = new FileReader();\n\t\t\treader.readAsDataURL(blob); \n\t\t\treader.onloadend = () => {\n\t\t\t\tconst base64data = reader.result;   \n\t\t\t\tresolve(base64data);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport class ExportPngOptions{\n\t/**\n\t * Capture only used part of board instead of the whole board\n\t */\n\tcaptureUsed: boolean = false;\n\ttransparentBackground: boolean = false;\n\tshowTitles: boolean = true;\n\tlightTitles: boolean = true;\n\tlightMode: boolean = false;\n}\n\nexport class ExportSvgOptions{\n\tshowTitles: boolean = true;\n\tlightTitles: boolean = true;\n}\n\nexport class EmbedIFrameOptions{\n\tshowTitles: boolean = true;\n\tdarkMode: boolean = false;\n}","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\nimport { fromEvent, merge, of } from 'rxjs';\nimport { delay, map, switchMap } from 'rxjs/operators';\n\n@Directive({\n\t// tslint:disable-next-line:directive-selector\n\tselector: '[delayed-hover]',\n})\nexport class DelayedHoverDirective implements OnInit, OnDestroy {\n\t@Input()\n\tdelay = \"1500\";\n\n\t@Output('delayed-hover') hoverEvent = new EventEmitter();\n\n\tconstructor(private readonly element: ElementRef) {}\n\n\tngOnInit() {\n\t\tconst hide$ = fromEvent(this.element.nativeElement, 'mouseleave').pipe(map(_ => false));\n\t\tconst show$ = fromEvent(this.element.nativeElement, 'mouseenter').pipe(map(_ => true));\n\n\t\tmerge(hide$, show$)\n\t\t\t.pipe(\n\t\t\t\tuntilDestroyed(this),\n\t\t\t\tswitchMap(show => {\n\t\t\t\t\tif (!show) {\n\t\t\t\t\t\treturn of(false);\n\t\t\t\t\t}\n\t\t\t\t\treturn of(true).pipe(delay(parseInt(this.delay)));\n\t\t\t\t})\n\t\t\t)\n\t\t\t.subscribe(show => {\n\t\t\t\tif (show) {\n\t\t\t\t\tthis.hoverEvent.emit();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tngOnDestroy() {}\n}","import { sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { Endpoint } from \"./Endpoint\";\nimport { HTTPStatus } from \"./enums/HTTPStatus\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Options } from \"./Options\";\nimport { Port } from \"./Port\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\nimport { EventDispatcher, Handler } from \"./Shared/EventDispatcher\";\n\nexport class EndpointOperator extends LogicComponent{\n    constructor() {\n        super();\n    }\n\n    outputPort: Port;\n    inputPort: Port;\n    options: EndpointOptions;\n    requestCount: number = 0;\n\n    getConnectableEndpoints() : Endpoint[]{\n        let connectableEndpoints :Endpoint[] = [];\n        for(let connection of this.outputPort.connections){\n            connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints().forEach(endpoint =>{\n                let duplicate = (connectableEndpoints.find(ep => ep.url === endpoint.url) != null)\n                if(!duplicate)\n                    connectableEndpoints.push(endpoint);\n            });        \n        }\n        return connectableEndpoints;\n    }\n\n    getTargetEndpoint(data: RequestData): Endpoint{\n        // Checking for 404 and 405\n        let hasEndpoint = false;\n        let notAllowed = false;\n        let targetEndpoint: Endpoint;\n        let targetUrl = data.header.endpoint.endpoint.url;\n\n        this.getEndpoints().filter(endpoint => \n            endpoint.url == targetUrl\n        ).forEach(endpoint => {\n            hasEndpoint = true;\n            if(endpoint.supportedMethods.indexOf(data.header.endpoint.method) == -1)\n                notAllowed = true;\n            else{\n                // Found wanted endpoint\n                notAllowed = false;\n                targetEndpoint = endpoint;\n                return;\n            }\n        })\n\n        if(!hasEndpoint){\n            this.fireShowStatusCode(HTTPStatus[\"Not Found\"])\n            return null;\n        }\n        if(notAllowed){\n            this.fireShowStatusCode(HTTPStatus[\"Method Not Allowed\"]);\n            return null;\n        }\n        return targetEndpoint;\n    }\n\n    /**\n     * Gets response to given request\n     * @param request request the response belongs to\n     */\n    getResponse(request: RequestData){\n        let response = new RequestData();\n        response.header = new RequestDataHeader(request.header.endpoint, request.header.protocol, request.header.stream);\n        response.origin = request.origin;\n        response.originID = this.originID;\n        response.requestId = UUID();\n        response.responseId = request.requestId;\n        return response;\n    }\n\n    getEndpoints(){\n        return this.options.endpoints;\n    }\n\n    getAvailableEndpoints(): Endpoint[]{\n        return this.getEndpoints();\n    }\n}\n\nexport class EndpointOptions extends Options{\n    endpoints: Endpoint[] = [];\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pages',\n  templateUrl: './pages.component.html',\n  styleUrls: ['./pages.component.scss']\n})\nexport class PagesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page\">\n    <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Output, EventEmitter } from '@angular/core';\n\nexport class TutorialSlide{\n\timage: string;\n\ttitle: string;\n\ttext: string;\n\n\tconstructor(image: string, title: string, text: string){\n\t\tthis.image = image;\n\t\tthis.title = title;\n\t\tthis.text = text;\n\t}\n}\n\n@Component({\n\tselector: 'tutorial-controls',\n\ttemplateUrl: './tutorial-controls.component.html',\n\tstyleUrls: ['./tutorial-controls.component.scss']\n})\nexport class TutorialControlsComponent implements OnInit {\n\n\t@Output() closeMenu = new EventEmitter();\n\t\n\tslides: TutorialSlide[] = [];\n\tisMinimized = false;\n\tcurrentSlideIndex = 0;\n\tcurrentSlide: TutorialSlide;\n  \t\n\tconstructor() { \n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial0.gif\", \"Introduction tutorial\", \"This quick tutorial will take you through the basics of this design tool.\"));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial1.gif\", \"Moving the board\", \"To move the board, you can use right or middle mouse button. To zoom in or out, use the mouse wheel.\"));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial2.gif\", \"Create components \", \"To create a component, simply drag & drop the component from the component menu.\"));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial3.gif\", \"Move components\", \"To move a component on the board, simply click on the component and hold, then move it with mouse.\"));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial4.gif\", \"Copy and paste components\", \"Copy and paste can be done by selecting component and using keyboard shortcuts, or by using top menu copy/paste buttons.\"));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial5.gif\", \"Remove components\", 'Removing components can be done by selecting component and pressing the [del] button, or by using top menu remove button.'));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial8.gif\", \"Select multiple components\", 'To select multiple components, use the left mouse button and select some components. You can then do any action you would do with a single component.'));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial6.gif\", \"Connecting components\", 'To connect components together, click and hold on a port of component, then drag the connection to the second component port and release.'));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial9.gif\", \"Connection line breaking\", 'You can change the shape of connection by hovering over it, and then clicking and dragging the dots.'));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial10.gif\", \"Connection titles\", 'You can add captions to connection that are displayed in the center of the connection.'));\n\t\tthis.slides.push(new TutorialSlide(\"gifs/tutorial7.gif\", \"Changing properties\", 'Properties of component can be altered by selecting the component, and accessing the \"Properties\" section in the options side menu.'));\n\t\tthis.currentSlide = this.slides[0];\n\t}\t\n\n\tngOnInit(): void {\n\t}\n\n  \tclose(){\n\t\tthis.closeMenu.emit();\n\t}\n\n\ttoggleMinimize(){\n\t\tthis.isMinimized = !this.isMinimized;\n\t}\n\n\tprevious(){\n\t\tthis.currentSlideIndex--;\n\t\tthis.currentSlide = this.slides[this.currentSlideIndex];\n\t}\n\n\tnext(){\n\t\tthis.currentSlideIndex++;\n\t\tthis.currentSlide = this.slides[this.currentSlideIndex];\n\t}\n}\n","<div class=\"window\" [class.minimized]=\"isMinimized\">\n    <div class=\"progress\">\n        <div class=\"progress-bar\" [style.width]=\"((currentSlideIndex+1)/slides.length)*100+'%'\">\n        </div>\n        <span class=\"progress-text\">{{currentSlideIndex+1+\"/\"+slides.length}}</span>\n    </div>\n    <div class=\"window-controls\">\n        <button class=\"close\" (click)=\"close()\">\n            <i class=\"fas fa-times\"></i>\n        </button>\n        <button class=\"min\" (click)=\"toggleMinimize()\">\n            <i *ngIf=\"!isMinimized\" class=\"fas fa-minus\"></i>\n            <i *ngIf=\"isMinimized\" class=\"fas fa-chevron-up\"></i>\n        </button>\n    </div>\n    <div class=\"content\">\n        <div class=\"image\">\n            <img src=\"./assets/{{currentSlide.image}}\">\n        </div>\n        <p class=\"title\">{{currentSlide.title}}</p>\n        <hr class=\"line\">\n        <p class=\"text\">\n            {{currentSlide.text}}\n        </p>\n    </div>\n    <div class=\"controls\">\n        <button class=\"prev\" *ngIf=\"currentSlideIndex > 0\" (click)=\"previous()\">Previous</button>\n        <button class=\"next\" *ngIf=\"currentSlideIndex < slides.length-1\" (click)=\"next()\">Next</button>\n        <button class=\"next\" *ngIf=\"currentSlideIndex == slides.length-1\" (click)=\"close()\">Close</button>\n    </div>\n</div>","import { Directive, EventEmitter, HostListener, Output, Renderer2 } from \"@angular/core\";\n\n@Directive({\n    selector: 'textarea[resize]'\n  })\n  export class ResizableTextAreaDirective {\n    @Output() resize = new EventEmitter();\n  \n    width: number;\n    height: number;\n  \n    mouseMoveListener: Function;\n  \n    @HostListener('mousedown', ['$event.target'])\n    onMouseDown(el) {\n      this.width = el.offsetWidth;\n      this.height = el.offsetHeight;\n      this.mouseMoveListener = this.renderer.listen('document', 'mousemove', () => {\n        if (this.width !== el.offsetWidth || this.height !== el.offsetHeight) {\n          this.resize.emit({ width: el.offsetWidth, height: el.offsetHeight });\n        }\n      });\n    }\n  \n    @HostListener('document:mouseup')\n    onMouseUp(el) {\n      this.ngOnDestroy();\n    }\n  \n    constructor(private renderer: Renderer2) {}\n  \n    ngOnDestroy() {\n      if (this.mouseMoveListener) {\n        this.mouseMoveListener();\n      }\n    }\n  }","import { Component, OnInit } from '@angular/core';\nimport { CDN } from 'src/models/CDN';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'cdn',\n\ttemplateUrl: './cdn.component.html',\n\tstyleUrls: ['./cdn.component.scss']\n})\nexport class CDNComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicCDN : CDN = new CDN();\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicCDN;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new CDN();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicCDN.options.X\"\n[style.top.px]=\"LogicCDN.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/cdn.svg\">\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <endpoint-select\n        [Model]=\"LogicCDN\"\n        [Type]=\"APIType.REST\"\n        [Multiple]=\"false\"\n        [HasActions]=\"false\"\n        [ModifiableMethods]=\"false\"\n        [AfterChange]=\"afterChange\"\n        ></endpoint-select>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { APIGateway } from 'src/models/APIGateway';\nimport { Endpoint } from 'src/models/Endpoint';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'apigateway',\n\ttemplateUrl: './apigateway.component.html',\n\tstyleUrls: ['./apigateway.component.scss']\n})\nexport class ApiGatewayComponent  extends OperatorComponent implements OnInit{\n\n\tpublic LogicApiGateway : APIGateway = new APIGateway();\n\n\tconnectableEndpoints: Endpoint[];\n\n\tpublic handleClick(event: MouseEvent){\n\t\tsuper.handleClick(event);\n\t\tthis.updateSelection();\n\t}\n\n\tupdateSelection(){\n\t\tthis.connectableEndpoints = this.LogicApiGateway.getConnectableEndpoints();\n\t\tlet endpoints = this.LogicApiGateway.getEndpoints();\n\t\tfor(let j = 0; j < endpoints.length; j++){\n\t\t\tlet endpoint = endpoints[j]\n\t\t\tfor(let i = 0; i < endpoint.actions.length; i++){\n\t\t\t\tlet action = endpoint.actions[i];\n\t\t\t\tlet currEdp = action.endpoint;\n\t\t\t\tlet currMth = action.method;\n\t\t\t\tendpoints[j].actions[i].endpoint = null;\n\t\t\t\tif(this.connectableEndpoints.length == 0){\n\t\t\t\t\tthis.connectableEndpoints = [];\n\t\t\t\t\tendpoint.actions = [];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(currEdp != null && currMth != null){\n\t\t\t\t\tfor(let e of this.connectableEndpoints){ // need this workaround to keep values in material select....\n\t\t\t\t\t\tif(e.url == currEdp.url)\n\t\t\t\t\t\t\tendpoints[j].actions[i].endpoint = e;\n\t\t\t\t\t}\n\t\t\t\t\tendpoint.actions[i].method = currMth;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tendpoint.actions.splice(i,1);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicApiGateway;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new APIGateway();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicApiGateway.options.X \"\n[style.top.px]=\"LogicApiGateway.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\"(mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/apigateway.svg\">\n    </div>\n</div>\n<div style=\"display:none\">\n    <div #options>\n        <!-- REST ENDPOINTS -->\n        <div class=\"endpoint-select-container\">\n            <endpoint-select\n                [Model]=\"LogicApiGateway\"\n                [Type]=\"APIType.REST\"\n                [Property]=\"'restEndpoints'\"\n                [Title]=\"'Endpoints (REST):'\"\n                [AfterChange]=\"afterChange\"\n                [HasStreamActions]=\"true\"\n                [ConnectableEndpoints]=\"connectableEndpoints\"\n                [ShowCounter]=\"true\"\n            ></endpoint-select>\n        </div>\n        <!-- REST ENDPOINTS -->\n\n        <!-- RPC ENDPOINTS -->\n        <div class=\"endpoint-select-container\">\n            <endpoint-select\n                [Model]=\"LogicApiGateway\"\n                [Type]=\"APIType.RPC\"\n                [Property]=\"'rpcEndpoints'\"\n                [Title]=\"'Endpoints (RPC):'\"\n                [AfterChange]=\"afterChange\"\n                [HasStreamActions]=\"true\"\n                [ConnectableEndpoints]=\"connectableEndpoints\"\n                [ShowCounter]=\"true\"\n            ></endpoint-select>\n        </div>\n        <!-- RPC ENDPOINTS -->\n\n        <!-- gRPC ENDPOINTS -->\n        <div class=\"endpoint-select-container\">\n            <endpoint-select\n                [Model]=\"LogicApiGateway\"\n                [Type]=\"APIType.gRPC\"\n                [Property]=\"'grpcEndpoints'\"\n                [Title]=\"'Endpoints (gRPC):'\"\n                [AfterChange]=\"afterChange\"\n                [HasStreamActions]=\"true\"\n                [ConnectableEndpoints]=\"connectableEndpoints\"\n                [ShowCounter]=\"true\"\n            ></endpoint-select>\n        </div>\n        <!-- gRPC ENDPOINTS -->\n\n        <!-- GraphQL ENDPOINTS -->\n        <div class=\"endpoint-select-container\">\n            <endpoint-select\n                [Model]=\"LogicApiGateway\"\n                [Type]=\"APIType.GraphQL\"\n                [Property]=\"'graphqlEndpoints'\"\n                [Title]=\"'Endpoints (GraphQL):'\"\n                [AfterChange]=\"afterChange\"\n                [HasStreamActions]=\"true\"\n                [ConnectableEndpoints]=\"connectableEndpoints\"\n                [ShowCounter]=\"true\"\n            ></endpoint-select>\n        </div>\n        <!-- GraphQL ENDPOINTS -->\n\n        <!-- WebSockets ENDPOINTS -->\n        <div class=\"endpoint-select-container\">\n            <endpoint-select\n                [Model]=\"LogicApiGateway\"\n                [Property]=\"'websocketsEndpoints'\"\n                [Type]=\"APIType.WebSockets\"\n                [Title]=\"'Endpoints (WebSockets):'\"\n                [AfterChange]=\"afterChange\"\n                [HasStreamActions]=\"true\"\n                [ConnectableEndpoints]=\"connectableEndpoints\"\n                [ShowCounter]=\"true\"\n            ></endpoint-select>\n        </div>\n        <!-- WebSockets ENDPOINTS -->\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export enum BalancingAlgorithm {\n    \"Round Robin\",\n    \"IP Hash\",\n    \"Least Connections\",\n    \"URL Hash\"\n}","import { gRPCMode } from \"./enums/gRPCMode\";\nimport { EndpointActionHTTPMethod, HTTPMethod } from \"./enums/HTTPMethod\";\nimport { Protocol } from \"./enums/Protocol\";\n\nexport class Endpoint{\n    url: string;\n    supportedMethods: HTTPMethod[] = [];\n    protocol: Protocol = Protocol.HTTP;\n    actions: EndpointAction[] = [];\n    grpcMode: gRPCMode = gRPCMode.Unary;\n\n    constructor(url: string, supportedMethods: HTTPMethod[] = []) {\n        this.url = url;\n        this.supportedMethods = supportedMethods;\n    }\n}\n\nexport class EndpointRef {\n    endpoint: Endpoint;\n    method: HTTPMethod = HTTPMethod.GET;\n}\n\nexport class EndpointAction {\n    endpoint: Endpoint;\n    method: EndpointActionHTTPMethod = EndpointActionHTTPMethod.Inherit;\n    asynchronous: boolean = false;\n}\n\nexport class DatabaseEndpoint extends Endpoint{\n    constructor(url: string){\n        super(url, [HTTPMethod.GET, HTTPMethod.POST, HTTPMethod.PUT, HTTPMethod.DELETE]);\n        this.actions = null;\n        this.grpcMode = gRPCMode.Unary;\n        this.protocol = Protocol.Database\n    }\n}","// Import the core angular services.\nimport { Component } from \"@angular/core\";\n \n// ----------------------------------------------------------------------------------- //\n// ----------------------------------------------------------------------------------- //\n \ntype EventTarget = Window | Document | HTMLElement;\n \ninterface EventConfig {\n\tname: string;\n\tisStop: boolean;\n\tisPrevent: boolean;\n\tisCapture: boolean;\n\tisSelf: boolean;\n\tisOnce: boolean;\n\tisPassive: boolean;\n}\n \n// I provide support for DOM event-modifiers that are inspired by Vue.js. These allow\n// for events to be qualified with the following suffixes:\n// --\n// - .stop\n// - .prevent\n// - .capture\n// - .self\n// - .once\n// - .passive\n// --\nexport class VueEventModifiersPlugin {\n \n\tprivate supportsPassive: boolean;\n \n\t// I initialize the event plug-in.\n\tconstructor() {\n \n\t\tthis.supportsPassive = this.detectPassiveSupport();\n \n\t}\n \n\t// ---\n\t// PUBLIC METHODS.\n\t// ---\n \n\t// I bind the given event handler to the given element. Returns a function that\n\t// tears-down the event binding.\n\tpublic addEventListener(\n\t\telement: HTMLElement,\n\t\thigherOrderEventName: string,\n\t\thandler: Function\n\t\t) : Function {\n \n\t\tvar eventConfig = this.parseHigherOrderEventName( higherOrderEventName );\n \n\t\treturn( this.setupEventBinding( element, eventConfig, handler ) );\n \n\t}\n \n \n\t// I bind the given event handler to the given global element selector. Returns a\n\t// function that tears-down the event binding.\n\tpublic addGlobalEventListener(\n\t\thigherOrderElement: string,\n\t\thigherOrderEventName: string,\n\t\thandler: Function\n\t\t) : Function {\n \n\t\tvar target = this.parseHigherOrderElement( higherOrderElement );\n\t\tvar eventConfig = this.parseHigherOrderEventName( higherOrderEventName );\n \n\t\treturn( this.setupEventBinding( target, eventConfig, handler ) );\n \n\t}\n \n \n\t// I determine if the given event name is supported by this plug-in. For each event\n\t// binding, the plug-ins are tested in the reverse order of the EVENT_MANAGER_PLUGINS\n\t// multi-collection. Angular will use the first plug-in that supports the event.\n\tpublic supports( eventName: string ) : boolean {\n \n\t\tvar eventPattern = /^[a-z]+(?:\\.(?:stop|prevent|capture|self|once|passive))+$/;\n \n\t\treturn( eventPattern.test( eventName ) );\n \n\t}\n \n\t// ---\n\t// PRIVATE METHODS.\n\t// ---\n \n\t// I determine if the current environment supports Passive event handlers.\n\tprivate detectPassiveSupport() : boolean {\n \n\t\tvar support = false;\n \n\t\t// This approach is more-or-less taken from the Mozilla Developer Network:\n\t\t// --\n\t\t// READ MORE: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n\t\ttry {\n \n\t\t\tvar handler = function(){};\n \n\t\t\tvar options: any = {\n\t\t\t\tget passive() {\n \n\t\t\t\t\treturn( support = true );\n \n\t\t\t\t}\n\t\t\t};\n \n\t\t\twindow.addEventListener( \"test\", handler, options );\n\t\t\twindow.removeEventListener( \"test\", handler, options );\n \n\t\t} catch( error ) {\n \n\t\t\t// ...\n \n\t\t}\n \n\t\treturn( support );\n \n\t}\n \n \n\t// I parse the \"higher order\" element selector into an actual browser DOM reference.\n\tprivate parseHigherOrderElement( selector: string ) : EventTarget {\n \n\t\tswitch( selector ) {\n\t\t\tcase \"window\":\n\t\t\t\treturn( window );\n\t\t\tbreak;\n\t\t\tcase \"document\":\n\t\t\t\treturn( document );\n\t\t\tbreak;\n\t\t\tcase \"body\":\n\t\t\t\treturn( document.body );\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow( new Error( `Element selector [${ selector }] not supported.` ) );\n\t\t\tbreak;\n\t\t}\n \n\t}\n \n \n\t// I parse the \"higher order\" event name into the event configuration that will be\n\t// used to bind the underlying event handler.\n\tprivate parseHigherOrderEventName( eventName: string ) : EventConfig {\n \n\t\tvar parts = eventName.split( \".\" );\n \n\t\tvar config = {\n\t\t\tname: <string>parts.shift(), // Telling TypeScript not to worry.\n\t\t\tisStop: false,\n\t\t\tisPrevent: false,\n\t\t\tisCapture: false,\n\t\t\tisSelf: false,\n\t\t\tisOnce: false,\n\t\t\tisPassive: false\n\t\t};\n \n\t\t// While this is different in Vue.js, we're not going to care about the order in\n\t\t// which the event modifiers are defined. Each modifier will just act as an\n\t\t// independent flag to be consumed when configuring the subsequent event-handler.\n\t\twhile ( parts.length ) {\n \n\t\t\tswitch ( parts.shift() ) {\n\t\t\t\tcase \"stop\":\n\t\t\t\t\tconfig.isStop = true;\n\t\t\t\tbreak;\n\t\t\t\tcase \"prevent\":\n\t\t\t\t\tconfig.isPrevent = true;\n\t\t\t\tbreak;\n\t\t\t\tcase \"capture\":\n\t\t\t\t\tconfig.isCapture = true;\n\t\t\t\tbreak;\n\t\t\t\tcase \"self\":\n\t\t\t\t\tconfig.isSelf = true;\n\t\t\t\tbreak;\n\t\t\t\tcase \"once\":\n\t\t\t\t\tconfig.isOnce = true;\n\t\t\t\tbreak;\n\t\t\t\tcase \"passive\":\n\t\t\t\t\tconfig.isPassive = true;\n\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow( new Error( `Event config [${ eventName }] not supported.` ) );\n\t\t\t\tbreak;\n\t\t\t}\n \n\t\t}\n \n\t\treturn( config );\n \n\t}\n \n \n\t// I bind the given event handler to the given event target using the given event\n\t// configuration. I can be used for both local and global targets. Returns a function\n\t// that tears-down the event binding.\n\tprivate setupEventBinding(\n\t\ttarget: EventTarget,\n\t\teventConfig: EventConfig,\n\t\thandler: Function\n\t\t) : Function {\n \n\t\tvar options: any = eventConfig.isCapture;\n\t\t// If the event requires a \"passive\" modifier, then we have to change the way\n\t\t// that we define the event-phase. Passive mode requires an EventListerOptions\n\t\t// object that is only supported in some browsers.\n\t\tif ( this.supportsPassive && eventConfig.isPassive ) {\n \n\t\t\toptions = {\n\t\t\t\tpassive: true,\n\t\t\t\tcapture: eventConfig.isCapture\n\t\t\t};\n \n\t\t}\n \n\t\t// NOTE: We are remaining inside the Angular Zone (if it is loaded).\n\t\taddProxyFunction();\n \n\t\treturn( removeProxyFunction );\n \n\t\t// -- Hoisted Functions -- //\n \n\t\tfunction addProxyFunction() {\n \n\t\t\ttarget.addEventListener( eventConfig.name, proxyFunction, options );\n \n\t\t}\n \n\t\tfunction removeProxyFunction() {\n \n\t\t\ttarget.removeEventListener( eventConfig.name, proxyFunction, options );\n \n\t\t}\n \n\t\tfunction proxyFunction( event: Event ) {\n \n\t\t\t// NOTE: If the target is not Self, the handler won't be called. But, a\n\t\t\t// change-digest will still be triggered. This is because we're not bothering\n\t\t\t// to bind the handler outside of the Angular Zone (since most cases will be\n\t\t\t// a one-to-one mapping of event-to-handler invocation).\n\t\t\tif ( eventConfig.isSelf && ( event.target !== target ) ) {\n \n\t\t\t\treturn;\n \n\t\t\t}\n \n\t\t\t// If the handler is only intended to be invoked once, let's unbind before\n\t\t\t// we call the underlying handler.\n\t\t\tif ( eventConfig.isOnce ) {\n \n\t\t\t\tremoveProxyFunction();\n \n\t\t\t}\n \n\t\t\tif ( eventConfig.isStop ) {\n \n\t\t\t\tevent.stopPropagation();\n \n\t\t\t}\n \n\t\t\tif ( eventConfig.isPrevent ) {\n \n\t\t\t\tevent.preventDefault();\n \n\t\t\t}\n \n\t\t\thandler( event );\n \n\t\t}\n \n\t}\n \n}","export enum ReplacementPolicy {\n    \"Least Recently Used\",\n    \"Least Frequently Used\",\n    \"First in First out\",\n    \"First in Last out\"\n}","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { UUID } from \"src/shared/ExtensionMethods\";\nimport { Connection } from \"./Connection\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { DatabaseEndpoint, Endpoint, EndpointRef } from \"./Endpoint\";\nimport { DatabaseType } from \"./enums/DatabaseType\";\nimport { Protocol } from \"./enums/Protocol\";\nimport { Port } from \"./Port\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\nimport { EventDispatcher, Handler } from \"./Shared/EventDispatcher\";\n\ninterface RemoveShardEvent{ }\n\nexport class Database extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    outputPort: Port\n    options: DatabaseOptions;\n    connectionTable: {[id:string]:Connection} = {};\n    color = \"#E94057\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this,false,true);      \n        this.outputPort = null;//new Port(this,true,true);      \n        this.options = new DatabaseOptions();  \n        this.options.title = \"Database\";\n        \n        this.options.endpoints = [\n            new DatabaseEndpoint(\"/database\")    \n        ]\n    }\n\n    async receiveData(request: RequestData, fromOutput = false) {\n        if(fromOutput) \n            return;\n        let targetEndpoint = this.getTargetEndpoint(request);\n        if(targetEndpoint == null)\n            return;\n\n        this.fireReceiveData(request);\n\n        if(this.options.isMasterShard){\n            let length = this.outputPort.connections.length;\n            if(length == 0)\n                this.options.isMasterShard = false;\n            else{\n                let shardRequest = new RequestData();\n                let conn = this.outputPort.connections[Math.round(Math.random() * (length-1))]; // Select random shard to send data to \n                let epRef = new EndpointRef();\n                epRef.method = request.header.endpoint.method;\n                epRef.endpoint = new DatabaseEndpoint(\"/shard\")\n\n                shardRequest.header = new RequestDataHeader(epRef, Protocol.HTTP);\n                shardRequest.origin = conn;\n                shardRequest.originID = this.originID;\n                shardRequest.requestId = UUID();\n                this.connectionTable[shardRequest.requestId] = shardRequest.origin;\n                await this.outputPort.sendData(shardRequest, conn);\n            }\n        }\n        this.connectionTable[request.requestId] = request.origin;\n        // Send response back\n        if(request.sendResponse)\n            await this.sendData(this.getResponse(request));\n    }\n\n    onConnectionUpdate(wasOutput: boolean = false){\n        if(wasOutput && this.outputPort != null && this.outputPort.connections.length == 0){\n            this.options.isMasterShard = false;\n            this.outputPort = null;\n            this.fireRemoveShard({});\n        }\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId]\n        if(targetConnection == null)\n            throw new Error(\"Target connection can not be null\");\n        this.connectionTable[response.responseId] = null; // reset request id\n        await this.inputPort.sendData(response, targetConnection);\n    }\n\n    canConnectTo(port: Port, connectingWithOutput: boolean){\n        if(!super.canConnectTo(port, connectingWithOutput))\n            return false;\n        // Output of database can connect only to database shard of the same type\n        if(!connectingWithOutput)\n            return true;\n        \n        if(port.parent instanceof Database && this.options.isMasterShard && port.parent.options.isShard && port.parent.options.type == this.options.type)\n            return true;\n        this.fireFailedConnect({message: \"Output of a Database can only be connected to database shard of same type.\"});\n        return false;\n    }\n\n    protected removeShardDispatcher = new EventDispatcher<RemoveShardEvent>();\n    public onRemoveShard(handler: Handler<RemoveShardEvent>) {\n        this.removeShardDispatcher.register(handler);\n    }\n    protected fireRemoveShard(event: RemoveShardEvent) { \n        this.removeShardDispatcher.fire(event);\n    }\n}\n\nexport class DatabaseOptions extends EndpointOptions{\n    type: DatabaseType;\n    isMasterShard: boolean;\n    isShard: boolean;\n}","export enum APIType {\n    REST, \n    GraphQL,\n    RPC,\n    gRPC,\n    WebSockets\n}","export type Handler<E> = (event: E) => void;\n\nexport class EventDispatcher<E> { \n    private handlers: Handler<E>[] = [];\n    fire(event: E) { \n        for (let h of this.handlers)\n            h(event);\n    }\n    register(handler: Handler<E>) { \n        this.handlers.push(handler);\n    }\n}","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { arrayEquals } from \"src/shared/ExtensionMethods\";\nimport { Endpoint, EndpointRef } from \"./Endpoint\";\nimport { gRPCMode } from \"./enums/gRPCMode\";\nimport { Protocol } from \"./enums/Protocol\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Options } from \"./Options\";\nimport { Port } from \"./Port\";\nimport { RequestData } from \"./RequestData\";\n\nexport class Client extends LogicComponent implements IDataOperator{\n\n    outputPort: Port;\n    options: ClientOptions;\n    isConnectedToEndpoint: boolean = false; // For streaming/websockets\n    connectedId: string;\n    color = \"#0EC35B\";\n\n    constructor() {\n        super();\n        this.outputPort = new Port(this, true, false);        \n        this.options = new ClientOptions();\n        this.options.title = \"Client\";\n    }\n\n    receiveData(data: RequestData): void {\n        this.fireReceiveData(data);\n        if(data.header.endpoint.endpoint.protocol == Protocol.WebSockets || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Bidirectional Streaming\"] || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Server Streaming\"]){\n            if(data.header.stream == true){\n                if(this.connectedId == null) \n                    return;\n                this.isConnectedToEndpoint = true;\n            }\n            else{\n                this.isConnectedToEndpoint = false;\n                this.connectedId = null;\n            }\n        }\n    }\n\n    async sendData(data: RequestData) {\n        this.updateEndpoint();\n        return await this.outputPort.sendData(data);\n    }\n\n    getAvailableEndpoints(): Endpoint[]\n    {\n        let availableEndpoints :Endpoint[] = [];\n        for(let connection of this.outputPort.connections){\n            connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints().forEach(endpoint =>{\n                let duplicate = (availableEndpoints.find(ep => ep.url === endpoint.url && arrayEquals(endpoint.supportedMethods, ep.supportedMethods)) != null)\n                if(!duplicate)\n                    availableEndpoints.push(endpoint);\n            });        \n        }\n        return availableEndpoints;\n    }\n\n    updateEndpoint(){\n        let availableEndpoints = this.getAvailableEndpoints();\n        if(this.options.endpointRef.endpoint == null){ // Set default endpoint if available\n            if(availableEndpoints.length == 0) \n                return;\n            this.options.endpointRef.endpoint = availableEndpoints[0];\n            this.options.endpointRef.method = availableEndpoints[0].supportedMethods[0];\n        }\n        else{\n            let isAvailable = false;\n            for(let endpoint of availableEndpoints){\n                if(this.options.endpointRef.endpoint === endpoint){\n                    isAvailable = true;\n                    break;\n                }\n            }\n            if(!isAvailable){ // If current endpoint is no longer available, replace it\n                if(availableEndpoints.length == 0) \n                    return;\n                this.options.endpointRef.endpoint = availableEndpoints[0];\n                this.options.endpointRef.method = availableEndpoints[0].supportedMethods[0];\n            }\n        }\n    }\n}\n\nexport class ClientOptions extends Options{\n    protocol: Protocol = Protocol.HTTP; // Is decided by endpoint, cannot be changed from client\n    endpointRef: EndpointRef = new EndpointRef();\n    outputRate: number = 4;\n}","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { PlacingService } from 'src/app/placing.service';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\nimport { Connection } from 'src/models/Connection';\nimport { Port } from 'src/models/Port';\nimport { ConnectionComponent } from '../connection/connection.component';\n\n@Component({\n\tselector: 'port',\n\ttemplateUrl: './port.component.html',\n\tstyleUrls: ['./port.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PortComponent implements OnInit {\n\t@Input() LogicParent: IDataOperator;\n\t@Input() IsOutput: boolean;\n\tpublic LogicPort: Port;\n\t@Input() IsReadOnly: boolean = false;\n\t@ViewChild('port') public port: ElementRef<HTMLDivElement>;\n\t@ViewChild('portImage') public portImage: ElementRef;\n\tconnectionComponents: ConnectionComponent[] = [];\n\tboard: HTMLElement;\n\tline: SVGPathElement;\n\tsvgCanvas: HTMLElement;\n\n\tlineStartX = 0;\n\tlineStartY = 0;\n\tlineCurrX = 0;\n\tlineCurrY = 0;\n\tlinePrevX = 0;\n\tlinePrevY = 0;\n\n\tconstructor(public placingService : PlacingService, private cdRef: ChangeDetectorRef) { \n\t\tthis.cdRef.detach();\n\t}\n\n\tngOnInit(): void {\n    \tthis.LogicPort = this.LogicParent.getPort(this.IsOutput);\n\t\tthis.board = document.getElementById(\"board\");\n\t\tthis.svgCanvas = document.getElementById(\"svg-canvas\");\n\t\tthis.LogicPort.onDropRequest(() => {\n\t\t\tlet dirX = -1 - Math.random();\n\t\t\tlet dirY = Math.random();\n\t\t\tlet x = this.port.nativeElement.offsetLeft + this.port.nativeElement.clientWidth / 2;\n\t\t\tlet y = this.port.nativeElement.offsetTop + this.port.nativeElement.clientHeight / 2;\n\t\t\tif(this.IsOutput)\n\t\t\t\tdirX *= -1;\n\t\t\tif(Math.random() > 0.5)\n\t\t\t\tdirY *= -1;\n\t\t\tlet data = document.createElementNS('http://www.w3.org/2000/svg','circle');\n\t\t\tdata.classList.add(\"dropped-data\");\n\t\t\tdata.setAttribute(\"r\",\"5\")\n\t\t\tthis.svgCanvas.appendChild(data);\n\t\t\tdata.style.transform = `translate(${x}px, ${y}px)`;\n\t\t\tsetTimeout(()=>{\n\t\t\t\tdata.style.transform = `translate(${x + dirX * 30}px, ${y + dirY * 30}px)`;\n\t\t\t\tdata.style.opacity = \"0\";\n\t\t\t}, 50);\n\t\t\tsetTimeout(()=>{\n\t\t\t\tdata.remove();\n\t\t\t}, 1000);\n\t\t});\n\t\tthis.cdRef.detectChanges();\n  \t}  \n\n\tremoveConnection(connection: ConnectionComponent){\n\t\tlet index = this.connectionComponents.findIndex(con => con === connection);\n\t\tif(index !== -1){\n\t\t\tthis.connectionComponents.splice(index, 1);\n\t\t}\n\t\tthis.cdRef.detectChanges();\n\t}\n\t\n\taddConnection(connection: ConnectionComponent){\n\t\tif(this.IsReadOnly && this.port != null)\n\t\t\tthis.port.nativeElement.style.display = \"block\";\n\t\tlet index = this.connectionComponents.findIndex(con => con === connection);\n\t\tif(index === -1)\n\t\t\tthis.connectionComponents.push(connection);\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tgetConnectionComponent(logicConnection: Connection){\n\t\treturn this.connectionComponents.find(\n\t\t\tconnection => connection.LogicConnection === logicConnection\n\t\t);\n\t}\n\n\tautoAttach(){\n\t\tif(this.placingService.isConnecting){\n\t\t\tthis.placingService.canMoveConnection = false;\n\t\t\tlet line = this.svgCanvas.children[0];\n\t\t\tlet style = line.getAttribute(\"d\");\n\t\t\tstyle = style.split(\"L\")[0] + `L${this.port.nativeElement.offsetLeft + this.port.nativeElement.clientWidth / 2} ${this.port.nativeElement.offsetTop + this.port.nativeElement.clientHeight / 2}`;\n\t\t\tline.setAttribute(\"d\",style);\n\t\t}\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tdetach(){\n\t\tthis.placingService.canMoveConnection = true;\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tpublic getPortComponent(){\n\t\treturn this;\n\t}\n\n\tpublic handleClick( event: Event ) : void {\n\t\tif(event instanceof MouseEvent){\n\t\t\tif(this.placingService.isConnecting)\n\t\t\t\tthis.placingService.stopConnecting();\n\t\t\telse{\n\t\t\t\tthis.placingService.startConnecting(this)\n\t\t\t\tthis.line = document.createElementNS('http://www.w3.org/2000/svg','path');\n\t\t\t\tthis.svgCanvas.appendChild(this.line);\n\t\t\t\tthis.lineCurrX = event.clientX;\n\t\t\t\tthis.lineCurrY = event.clientY;\n\t\t\t\tthis.linePrevX = event.clientX;\n\t\t\t\tthis.linePrevY = event.clientY;\n\n\t\t\t\tthis.lineCurrX = this.port.nativeElement.offsetLeft + this.port.nativeElement.clientWidth/2;\n\t\t\t\tthis.lineCurrY = this.port.nativeElement.offsetTop + this.port.nativeElement.clientHeight/2;\n\t\t\t\tthis.lineStartX = this.port.nativeElement.offsetLeft + this.port.nativeElement.clientWidth/2;\n\t\t\t\tthis.lineStartY = this.port.nativeElement.offsetTop + this.port.nativeElement.clientHeight/2;\n\n\t\t\t\tthis.line.setAttribute('d',`M${this.lineStartX} ${this.lineStartY} L${this.lineCurrX} ${this.lineCurrY}`);\n\t\t\t\tthis.line.style.stroke = \"#6059DF\";\n\t\t\t\tthis.line.style.strokeWidth = \"2\";\n\t\t\t\tthis.line.style.strokeLinecap = \"round\";\n\t\t\t\tthis.line.style.strokeDasharray = \"3\";\n\t\t\t\tthis.line.style.fill = \"none\";\n\n\t\t\t\tthis.board.onmousemove = (event) => {\n\t\t\t\t\tif(this.placingService.canMoveConnection){\n\t\t\t\t\t\tif(!this.placingService.isConnecting) \n\t\t\t\t\t\t\tthis.placingService.startConnecting(this);\n\t\t\t\t\t\tthis.lineCurrX = this.lineCurrX - (this.linePrevX - event.clientX) / this.placingService.boardScale;\n\t\t\t\t\t\tthis.lineCurrY = this.lineCurrY - (this.linePrevY - event.clientY) / this.placingService.boardScale;\n\t\t\t\t\t\tthis.line.setAttribute('d',`M${this.lineStartX} ${this.lineStartY} L${this.lineCurrX} ${this.lineCurrY}`);\n\t\t\t\t\t\tthis.linePrevX = event.clientX;\n\t\t\t\t\t\tthis.linePrevY = event.clientY;\n\t\t\t\t\t}\n\t\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(event instanceof TouchEvent){\n\t\t\tif(this.placingService.isConnecting)\n\t\t\t\tthis.placingService.stopConnecting();\n\t\t\telse{\n\t\t\t\tthis.placingService.startConnecting(this)\n\t\t\t\tthis.line = document.createElementNS('http://www.w3.org/2000/svg','path');\n\t\t\t\tthis.svgCanvas.appendChild(this.line);\n\t\t\t\tthis.lineCurrX = event.touches[0].clientX;\n\t\t\t\tthis.lineCurrY = event.touches[0].clientY;\n\t\t\t\tthis.linePrevX = event.touches[0].clientX;\n\t\t\t\tthis.linePrevY = event.touches[0].clientY;\n\n\t\t\t\tthis.lineCurrX = this.port.nativeElement.offsetLeft + this.port.nativeElement.clientWidth/2;\n\t\t\t\tthis.lineCurrY = this.port.nativeElement.offsetTop + this.port.nativeElement.clientHeight/2;\n\t\t\t\tthis.lineStartX = this.port.nativeElement.offsetLeft + this.port.nativeElement.clientWidth/2;\n\t\t\t\tthis.lineStartY = this.port.nativeElement.offsetTop + this.port.nativeElement.clientHeight/2;\n\n\t\t\t\tthis.line.setAttribute('d',`M${this.lineStartX} ${this.lineStartY} L${this.lineCurrX} ${this.lineCurrY}`);\n\t\t\t\tthis.line.style.stroke = \"#6059DF\";\n\t\t\t\tthis.line.style.strokeWidth = \"2\";\n\t\t\t\tthis.line.style.strokeLinecap = \"round\";\n\t\t\t\tthis.line.style.strokeDasharray = \"3\";\n\t\t\t\tthis.line.style.fill = \"none\";\n\t\t\t\tthis.board.ontouchmove = (event) => {\n\t\t\t\t\tif(this.placingService.canMoveConnection){\n\t\t\t\t\t\tif(!this.placingService.isConnecting) \n\t\t\t\t\t\t\tthis.placingService.startConnecting(this);\n\t\t\t\t\t\tthis.lineCurrX = this.lineCurrX - (this.linePrevX - event.touches[0].clientX) / this.placingService.boardScale;\n\t\t\t\t\t\tthis.lineCurrY = this.lineCurrY - (this.linePrevY - event.touches[0].clientY) / this.placingService.boardScale;\n\t\t\t\t\t\tthis.line.setAttribute('d',`M${this.lineStartX} ${this.lineStartY} L${this.lineCurrX} ${this.lineCurrY}`);\n\t\t\t\t\t\tthis.linePrevX = event.touches[0].clientX;\n\t\t\t\t\t\tthis.linePrevY = event.touches[0].clientY;\n\t\t\t\t\t}\n\t\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t\t}\n\t\t\t\tthis.board.ontouchend = () =>{\n\t\t\t\t\tthis.board.ontouchmove = null;\n\t\t\t\t\tthis.board.ontouchend = null;\n\t\t\t\t\tthis.svgCanvas.innerHTML = \"\";\n\t\t\t\t\tthis.placingService.stopConnecting();\n\t\t\t\t\tthis.cdRef.detectChanges();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.cdRef.detectChanges();\n\t}\n\t\n\tpublic handleMouseUp(e){\n\t\tif(this.placingService.isConnecting){\n\t\t\tif(this !== this.placingService.connectingPort){\n\t\t\t\tif(this.IsOutput){\n\t\t\t\t\tif(this.placingService.connectPorts(this,this.placingService.connectingPort))\n\t\t\t\t\t\tthis.placingService.componentChanged.emit();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(this.placingService.connectPorts(this.placingService.connectingPort, this))\n\t\t\t\t\t\tthis.placingService.componentChanged.emit();\n\t\t\t\t}\n\t\t\t}\t\n\t\t}\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tngAfterViewInit(){\n\t\tthis.portImage.nativeElement.style.borderColor = this.LogicParent.color;\n\t\tif(this.IsReadOnly && this.port != null)\n\t\t\tthis.port.nativeElement.style.display = \"none\";\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tdestroySelf = () => {}\n}\n","<div #port (mousedown)=\"handleClick($event)\"\n(mouseup)=\"handleMouseUp($event)\"\n(mouseover)=\"autoAttach()\" (mouseleave)=\"detach()\"\nclass=\"port\"\n>\n    <div #portImage class=\"port-image\" ></div>\n</div>","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { RequestData } from \"./RequestData\";\nimport { Port } from \"./Port\";\nimport { Endpoint } from \"./Endpoint\";\nimport { sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { HTTPMethod } from \"./enums/HTTPMethod\";\n\nexport class PubSub extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    outputPort: Port;\n    connectionTable: {[id:string]:Connection} = {};\n    options: PubSubOptions;\n    color = \"#FF7D35\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this, false, true);        \n        this.outputPort = new Port(this, true, true);        \n        this.options = new PubSubOptions();\n        this.options.title = \"Pub/Sub Model\";\n\n        this.options.endpoints = [\n            new Endpoint(\"post.postCreated\", [HTTPMethod.GET, HTTPMethod.POST, HTTPMethod.PUT, HTTPMethod.PATCH, HTTPMethod.DELETE])\n        ]\n    }\n\n    async receiveData(data: RequestData) {\n        if(data.requestId == \"\" || data.requestId == null )\n            throw new Error(\"requestId can not be null. Please specify property requestId of RequestData\");\n\n        this.fireReceiveData(data);\n\n        // Put data to queue \n        data.header.stream = false;\n        this.sendToConsumers(data);\n\n        // Return response to publisher\n        let response = new RequestData();\n        response.responseId = data.requestId;\n        response.requestId = UUID();\n        response.header = data.header;\n        response.origin = data.origin;\n        response.originID = this.originID;\n\n        // Send response back\n        if(data.sendResponse)\n            await this.inputPort.sendData(response, data.origin);\n    }\n\n    async sendToConsumers(message: RequestData){\n        this.sendData(message);\n    }\n\n    async sendData(data: RequestData){\n        data.originID = this.originID;\n        data.sendResponse = false;\n        let targetEndpoint = data.header.endpoint.endpoint.url;\n        let connections = this.outputPort.connections\n        .filter(connection => connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints()\n        .find(ep => ep.url == targetEndpoint) != null);\n        for(let connection of connections){\n            data.origin = connection;\n            this.outputPort.sendData(data,data.origin);\n        }\n    }\n}\n\nexport class PubSubOptions extends EndpointOptions{\n}\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: 'landing-page',\n\ttemplateUrl: './landing-page.component.html',\n\tstyleUrls: ['./landing-page.component.scss']\n})\nexport class LandingPageComponent implements OnInit {\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t\tdocument.getElementsByClassName(\"page\")[0].scrollTop = 0;\n\t}\n}\n","<main class=\"container\">\n    <h1>Maturitní práce 2023</h1>\n    <div class=\"header-info\">\n        <h2>Jan Pánek</h2>\n        <h3>P4</h3>\n    </div>\n    <a class=\"btn-main link-main\" routerLink=\"create\">Přejít do aplikace</a>\n    \n    <h4>Instalace backendu</h4>\n    <p><strong>Backend není potřeba, jediná část aplikace která ho využívá je generování kódu pro vnořování pomocí <em>iframe</em></strong></p>\n    <p>Pro backend je potřeba mít nainstalovaný composer a PHP (+ mít příkaz php v proměnných prostředí)</p>\n    <ul>\n        <li>Duplikovat soubor .env.example a přejmenovat na .env</li>\n        <li class=\"code\">$ php artisan key:gen</li>\n    </ul>\n    <p>Je nutné mít spuštěný MySQL databázový server</p>\n    <p>Poté údaje pro přístup do databáze vyplnit do souboru .env</p>\n    <ul>\n        <li class=\"code\">$ php artisan migrate</li>\n        <li class=\"code\">$ php artisan db:seed</li>\n    </ul>\n\n    <div style=\"text-align: center; margin: 30px 0;\">\n        <h4>Přiložený návrh systému</h4>\n        <p>V souborech se nachází soubor <strong>Navrh_steamovaci_platformy.json</strong>, který načte systém na kterém lze aplikaci otestovat</p>\n    </div>\n\n    <div style=\"text-align: center;\">\n        <h4>Ovládání aplikace</h4>\n        <p>Krátký návod jak aplikaci používat.</p>\n    </div>\n\n    <h4>Pohyb s deskou</h4>\n    <p>Pravým tlačítkem myši lze s deskou pohyboavat. Přiblížení a oddálení se provádí prostředním tlačítkem.</p>\n    <img src=\"./assets/gifs/tutorial1.gif\" alt=\"Tutorial 1\">\n\n    <h4>Vytváření uzlů</h4>\n    <p>Uzel vytvoříte přetáhnutím uzlu z menu na plochu.</p>\n    <img src=\"./assets/gifs/tutorial2.gif\" alt=\"Tutorial 2\">\n\n    <h4>Pohyb s uzly</h4>\n    <p>Uzel lze vybrat kliknutím levého tlačítka myši, následným držením lze s uzelm pohyboat.</p>\n    <img src=\"./assets/gifs/tutorial3.gif\" alt=\"Tutorial 3\">\n\n    <h4>Kopírování a vkládání uzlů</h4>\n    <p>Lze provádět pomocí horní lišty, nebo použitím zkratek CTRL+C/V.</p>\n    <img src=\"./assets/gifs/tutorial4.gif\" alt=\"Tutorial 4\">\n\n    <h4>Odstranění uzlů</h4>\n    <p>Uzel lze odstranit klávesou delete nebo tlačítkem v horní liště.</p>\n    <img src=\"./assets/gifs/tutorial5.gif\" alt=\"Tutorial 5\">\n\n    <h4>Vybrání více uzlů</h4>\n    <p>Levým tlačítkem lze vybrat všechny uzly v dané oblasti.</p>\n    <img src=\"./assets/gifs/tutorial8.gif\" alt=\"Tutorial 8\">\n\n    <h4>Připojování uzlů</h4>\n    <p>Uzly připojíte kliknutím na port daného uzlu. Vstupní port je nalevo, výstupní port napravo.</p>\n    <img src=\"./assets/gifs/tutorial6.gif\" alt=\"Tutorial 6\">\n\n    <h4>Zalamování spojových čar</h4>\n    <p>Přejetím myši přes spojové čáry umožní čáru veprostřed zalomit.</p>\n    <img src=\"./assets/gifs/tutorial9.gif\" alt=\"Tutorial 9\">\n\n    <h4>Nadpisy spojových čar</h4>\n    <p>Kliknutím na spojovou čáru lze přidat nadpis.</p>\n    <img src=\"./assets/gifs/tutorial10.gif\" alt=\"Tutorial 10\">\n\n    <h4>Změna nastavení uzlu</h4>\n    <p>Po vybrání uzlu se ukáže menu s nastavením. Každý uzel může mít jiné nastavení.</p>\n    <img src=\"./assets/gifs/tutorial7.gif\" alt=\"Tutorial 7\">\n\n    <h4>Simulace systému</h4>\n    <p>Simulaci lze provést pomocí uzlu <strong>Client</strong>, který má v menu s nastavením sekci <strong>Actions</strong> ve které lze posílat data na vybraný endpoint</p>\n    <img src=\"./assets/gifs/tutorial0.gif\" alt=\"Tutorial 0\">\n\n    <a class=\"btn-main link-main\" routerLink=\"create\">Přejít do aplikace</a>\n</main>","import { Component, OnInit } from '@angular/core';\nimport { Database, DatabaseOptions } from 'src/models/Database';\nimport { DatabaseEndpoint } from 'src/models/Endpoint';\nimport { Port } from 'src/models/Port';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'database',\n\ttemplateUrl: './database.component.html',\n\tstyleUrls: ['./database.component.scss']\n})\nexport class DatabaseComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicDatabase : Database = new Database();\n\tSHARDS_PER_SHRARD = 3;\n\n\tngAfterViewInit(): void {\n\t\tif(this.LogicDatabase.options.isMasterShard){\n\t\t\tthis.LogicDatabase.outputPort = new Port(this.LogicDatabase,true,true);\n\t\t}\n\t\tsuper.Init();\n\t\tthis.LogicDatabase.onRemoveShard(()=>{\n\t\t\tthis.outputPortRef.destroySelf()\n\t\t\tthis.outputPortRef = null;\n\t\t})\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicDatabase;\n\t}\n\n\tchangeDatabaseType(){\n\t\tif(this.LogicDatabase.outputPort == null)\t\n\t\t\treturn;\n\t\tfor(let conn of this.LogicDatabase.outputPort.connections){\n\t\t\tlet options = conn.getOtherPort(this.LogicDatabase.outputPort).parent.options;\n\t\t\tif(options instanceof  DatabaseOptions)\n\t\t\t\t(options as DatabaseOptions).type = this.LogicDatabase.options.type;\n\t\t}\n\t}\n\n\tcreateOutputPort(){\n\t\tthis.LogicDatabase.outputPort = new Port(this.LogicDatabase,true,true);\n\t\tthis.cdRef.detectChanges();\n\t\tthis.createPort(true);\n\t}\n\n\tshard(){\n\t\tthis.LogicDatabase.options.isMasterShard = true;\n\t\tthis.createOutputPort();\n\n\t\tlet dirX = 0;\n\t\tlet dirY = 0;\n\t\tlet initX = this.LogicDatabase.options.X;\n\t\tlet initY = this.LogicDatabase.options.Y;\n\t\tif(this.LogicDatabase.options.X <= 1920){ // Positioning shards\n\t\t\tdirY = this.LogicDatabase.options.Y <= 960 - this.SHARDS_PER_SHRARD * 80 ? 1 : -1;\n\t\t\tinitY = dirY > 0 ? Math.min(Math.max(this.LogicDatabase.options.Y-70,0), 960) : Math.min(Math.max(this.LogicDatabase.options.Y,0), 960);\n\t\t\tinitX += 120;\n\t\t}\n\t\telse if(this.LogicDatabase.options.X <= 1960 - this.SHARDS_PER_SHRARD * 80 && this.LogicDatabase.options.Y >= 60){\n\t\t\tdirX = 1;\n\t\t\tinitY = this.LogicDatabase.options.Y-40;\n\t\t}\n\t\telse{\n\t\t\tdirX = -1;\n\t\t\tinitY = this.LogicDatabase.options.Y + (this.LogicDatabase.options.Y <= 960-70 ? 70 : -70);\n\t\t}\n\t\tlet ep = new DatabaseEndpoint(\"/shard\");\n\t\tfor(let i = 0; i < this.SHARDS_PER_SHRARD; i++){\n\t\t\tlet comp = this.placingService.createComponent(DatabaseComponent, initX + dirX * 80 * i, initY + dirY * 70 * i, { type: this.LogicDatabase.options.type, isShard: true, title: `Shard ${i+1}`, endpoints: [ep] });\n\t\t\tcomp.onViewInit.push(() => {\n\t\t\t\tthis.placingService.connectPorts(this.getPortComponent(true), comp.getPortComponent(false));\n\t\t\t\tthis.placingService.pushComponent.emit(comp);\n\t\t\t});\n\t\t\tcomp.onAfterDestroySelf = () => {\n\t\t\t\tif(this.LogicDatabase.outputPort.connections.length == 0)\n\t\t\t\t\tthis.LogicDatabase.options.isMasterShard = false;\n\t\t\t}\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tthis.afterChange();\n\t\t\tthis.cdRef.detectChanges();\n\t\t}, 300);\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new Database();\n\t\treturn c.color;\n\t}\n}\n","<div\n#anchorRef\n[style.left.px]=\"LogicDatabase.options.X\"\n[style.top.px]=\"LogicDatabase.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/database.svg\">\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div class=\"options-type-container\">\n            <span class=\"property-name\">Type: <info-tooltip [Message]=\"'Changes the type of the database. This does not have any effect on the visualization.'\"></info-tooltip></span>\n            <div>\n                <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                    <mat-select (selectionChange)=\"changeDatabaseType(); afterChange()\" [disabled]=\"LogicDatabase.options.isShard\" [(ngModel)]=\"LogicDatabase.options.type\">\n                      <mat-option *ngFor=\"let type of DatabaseTypeKeys\" [value]=\"type\">{{DatabaseType[type]}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <endpoint-select\n        [Model]=\"LogicDatabase\"\n        [Type]=\"APIType.REST\"\n        [DatabaseEndpoints]=\"true\"\n        [Multiple]=\"false\"\n        [HasActions]=\"false\"\n        [ModifiableMethods]=\"false\"\n        [AfterChange]=\"afterChange\"\n        ></endpoint-select>\n    </div>\n    <div #actions>\n        <div class=\"options-actions\">\n            <div class=\"actions-container\">\n                <button [disabled]=\"LogicDatabase.options.isMasterShard || LogicDatabase.options.isShard\"\n                 (click)=\"shard()\">Shard Database</button>\n            </div>\n        </div>\n    </div>\n</div>","<div class=\"page\" *ngIf=\"showBoard\">\n    <board-ui\n        (newFile)=\"newFile()\"\n        (saveFile)=\"saveFile($event)\" \n        (loadFile)=\"loadFile($event)\"\n        (showSaved)=\"showSaved()\"\n        (save)=\"save()\" \n        (exportPng)=\"exportPng($event)\"\n        (exportSvg)=\"exportSvg($event)\"\n        (copyComponent)=\"copy()\"\n        (pasteComponent)=\"paste()\"\n        (selectAllComponents)=\"selectAll()\"\n        (cutComponent)=\"cut()\"\n        (delComponent)=\"deleteComponent()\"\n        (undo)=\"undo()\"\n        (redo)=\"redo()\"\n        (clearBoard)=\"clearBoard()\"\n        (fullscreen)=\"fullscreen()\"\n        (zoomIn)=\"zoomIn()\"\n        (zoomOut)=\"zoomOut()\"   \n        (changeScale)=\"handleScaleChange($event)\"\n        (resetView)=\"resetView()\"     \n        (onboardTutorial1)=\"openTutorialMenu()\" \n        [getComponents]=\"getComponents()\"\n        >\n    </board-ui>\n    <app-board (changeSystemName)=\"changeSystemName($event)\" *ngIf=\"!showEdit; else editTemplate\"></app-board>\n    <ng-template #editTemplate>\n        <app-board [loadedSave]=\"viewerSave\" (changeSystemName)=\"changeSystemName($event)\"></app-board>\n    </ng-template>\n    <app-componentmenu></app-componentmenu>\n    <app-optionsmenu></app-optionsmenu>\n    <div class=\"onboard-tutorial-container\">\n        <tutorial-controls *ngIf=\"isTutorialMenuOpen\" (closeMenu)=\"closeTutorialMenu()\"></tutorial-controls>\n    </div>\n</div>\n<div class=\"page\" *ngIf=\"showReadOnlyViewer\">\n    <app-board [loadedSave]=\"viewerSave\" [isReadOnly]=\"true\" [viewerEditLink]=\"viewerEditLink\"></app-board>\n</div>\n<div class=\"viewer-error\" *ngIf=\"showReadOnlyViewerError\">\n    <h5>System preview is not available</h5>\n    <p>The system is either corrupted or outdated.</p>\n</div>","import { ViewChild } from '@angular/core';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { download, downloadPng, downloadSvg } from 'src/shared/ExtensionMethods';\nimport { BoardComponent } from '../board/board.component';\nimport { PlacingService } from '../placing.service';\nimport { EmbedIFrameOptions, ExportPngOptions, ExportSvgOptions } from '../export.service';\nimport { BoardUIComponent } from '../board/boardUI/boardUI.component';\nimport { SavingService } from '../saving.service';\nimport { ViewingService } from '../viewing.service';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n\tselector: 'app-create',\n\ttemplateUrl: './create.component.html',\n\tstyleUrls: ['./create.component.scss'],\n})\nexport class CreateComponent implements OnInit {\n\t@Input() queryParams?: Params | null\n\n\tAPI_URL = \"http://127.0.0.1:8000\";\n\n\tisTutorialMenuOpen = false;\n\tshowOnboardIntro = false;\n\tshowReadOnlyViewer = false;\n\tshowReadOnlyViewerError = false;\n\tshowBoard = true;\n\tshowEdit = false;\n\n\tviewerSave: any;\n\tviewerEditLink: string;\n\n\t@ViewChild(BoardComponent) board:BoardComponent;\n\t@ViewChild(BoardUIComponent) ui:BoardUIComponent;\n\n  \tconstructor(private route: ActivatedRoute, private placingService: PlacingService, private savingService: SavingService, private viewingService: ViewingService, private titleService: Title) { }\n\n\tngOnInit(): void {\n\t\tthis.titleService.setTitle(\"Návrh systému\");\n\t\tlet seenIntroTutorial = localStorage.getItem(\"seenIntroTutorial\");\n\t\tthis.route.queryParams\n\t\t\t.subscribe(async params => {\n\t\t\t\tif(params.viewer){\n\t\t\t\t\tthis.showBoard = false;\n\t\t\t\t\ttry{\n\t\t\t\t\t\tthis.viewerEditLink = `http://localhost:4200/create?edit=${params.viewer}`;\n\t\t\t\t\t\tconst save = await this.getBoard(params.viewer);\n\t\t\t\t\t\tif(Array.isArray(save)){\n\t\t\t\t\t\t\tthis.viewerSave = this.savingService.getSaveFromOptimizedSave(save);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tthis.viewingService.setDarkMode(save.darkMode, false);\n\t\t\t\t\t\t\tthis.viewingService.setTitlesHidden(!save.showTitles, false);\n\t\t\t\t\t\t\tthis.viewerSave = this.savingService.getSaveFromOptimizedSave(save.comp);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.showReadOnlyViewer = true;\n\t\t\t\t\t}\n\t\t\t\t\tcatch{\n\t\t\t\t\t\tthis.showReadOnlyViewerError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(params.edit){\n\t\t\t\t\ttry{\n\t\t\t\t\t\tthis.showEdit = true;\n\t\t\t\t\t\tconst save = await this.getBoard(params.edit);\n\t\t\t\t\t\tif(Array.isArray(save)){\n\t\t\t\t\t\t\tthis.viewerSave = this.savingService.getSaveFromOptimizedSave(save);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tthis.viewingService.setDarkMode(save.darkMode, false);\n\t\t\t\t\t\t\tthis.viewingService.setTitlesHidden(!save.showTitles, false);\n\t\t\t\t\t\t\tthis.viewerSave = this.savingService.getSaveFromOptimizedSave(save.comp);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.showReadOnlyViewer = false;\n\t\t\t\t\t}\n\t\t\t\t\tcatch{\n\t\t\t\t\t\tthis.showReadOnlyViewerError = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.showOnboardIntro = params[\"showOnboardTutorial\"] == \"true\";\n\t\t\t}\n\t\t);\n\n\t\tif(seenIntroTutorial != \"true\" || this.showOnboardIntro){\n\t\t\tthis.openTutorialMenu();\n\t\t\tlocalStorage.setItem(\"seenIntroTutorial\", \"true\");\n\t\t}\n\t}\n\n\tasync getBoard(uuid: string): Promise<any>{\n\t\tconst response = await fetch(`${this.API_URL}/api/board/${uuid}`, {\n\t\t\tmethod: \"GET\",\n\t\t});\n\n\t\tconst body = await response.json();\n\n\t\tconst encoded = body.json_data;\n\n\t\tconst result = JSON.parse(atob(encoded));\n\n\t\treturn result;\n\t}\n\n\tgetComponents(){\n\t\treturn () => {\n\t\t\treturn this.board.allLogicComponents;\n\t\t};\n\t}\n\n\tnewFile(){\n\t\tthis.board.newFile();\n\t}\n\n\tsaveFile(name: string){\n\t\tif(this.board.allLogicComponents.length == 0){\n\t\t\tthis.placingService.showSnack(\"There is nothing to save...\");\n\t\t\treturn;\n\t\t}\n\t\tlet file = this.savingService.getBoardJson(this.board.allLogicComponents, name, this.board.currentBoardId);\n\t\tthis.save();\n\t\tdownload(`${name}.json`, file);\t\n\t}\n\n\tloadFile(json: string){\n\t\t// Pass the file to board component\n\t\tthis.board.loadFromJson(json);\n\t}\n\n\tshowSaved(){\n\t\tthis.board.openSavedBoards();\n\t}\n\n\tsave(){\n\t\tthis.board.save(true);\n\t}\n\n\tasync exportPng(options: ExportPngOptions){\n\t\tlet canvas = await this.board.getCurrentBoardCanvas(options);\n\t\tif(canvas == null){\n\t\t\tthis.placingService.showSnack(\"You can't export an empty board.\");\n\t\t\treturn;\n\t\t}\n\t\tdownloadPng(this.ui.name+\".png\", canvas.toDataURL('image/png', 1));\n\t}\n\n\tasync exportSvg(options: ExportSvgOptions){\n\t\tlet svg = await this.board.getCurrentBoardSvg(options);\n\t\tif(svg == null){\n\t\t\tthis.placingService.showSnack(\"You can't export an empty board.\");\n\t\t\treturn;\n\t\t}\n\t\tdownloadSvg(this.ui.name+\".svg\", svg);\n\t}\n\n\tcopy(){\n\t\tthis.board.copyItem();\n\t}\n\n\tpaste(){\n\t\tthis.board.pasteItem();\n\t}\n\n\tselectAll(){\n\t\tthis.board.selectAll();\n\t}\n\n\tcut(){\n\t\tthis.board.cutItem();\n\t}\n\n\tdeleteComponent(){\n\t\tthis.board.delete();\n\t}\n\n\tundo(){\n\t\tthis.board.undo();\n\t}\n\n\tredo(){\n\t\tthis.board.redo();\n\t}\n\n\tclearBoard(){\n\t\tthis.board.clearBoard(false);\n\t\tthis.board.componentChanged();\n\t}\n\n\tfullscreen(){\n\t\tdocument.body.requestFullscreen();\n\t}\n\n\tzoomIn(){\n\t\tthis.board.zoomIn();\n\t}\n\n\tzoomOut(){\n\t\tthis.board.zoomOut();\n\t}\n\n\tresetView(){\n\t\tthis.board.resetView();\n\t}\n\n\topenTutorialMenu(){\n\t\tthis.isTutorialMenuOpen = true;\n\t}\n\n\tcloseTutorialMenu(){\n\t\tthis.isTutorialMenuOpen = false;\n\t}\n\n\tchangeSystemName(name: string){\n\t\tif(this.ui == null){\n\t\t\tsetTimeout(() => {this.changeSystemName(name)}, 50);\n\t\t}\n\t\telse{\n\t\t\tthis.ui.changeName(name);\n\t\t}\n\t}\n\n\thandleScaleChange(scale: number){\n\t\tthis.placingService.boardScale = scale;\n\t\tthis.board.updateBoardTransform();\n\t}\n}\n","export enum gRPCMode{\n    \"Unary\",\n    \"Client Streaming\",\n    \"Server Streaming\",\n    \"Bidirectional Streaming\"\n}","import { Connection } from \"./Connection\";\nimport { EndpointRef } from \"./Endpoint\";\nimport { Protocol } from \"./enums/Protocol\";\n\nexport class RequestData{\n    header: RequestDataHeader;\n    origin: Connection;\n    originID: string;\n    requestId: string;\n    responseId: string;\n    sendResponse: boolean = true;\n}\n\nexport class RequestDataHeader {\n    endpoint: EndpointRef;\n    protocol: Protocol;\n    stream: boolean;\n\n    constructor(endpointRef: EndpointRef, protocol: Protocol, stream = false) {\n        this.endpoint = endpointRef;\n        this.protocol = protocol;\n        this.stream = stream;\n    }\n}","<div #board class=\"board infocus\" id=\"board\" oncontextmenu=\"return false;\"\n (mousedown.self)=\"handleMousedown( $event )\" (click.self)=\"handleSelfClick()\" (click)=\"handleClick()\"\n (touchstart.self)=\"handleMousedown($event); handleSelfClick()\" (pinchout)=\"zoomIn(8)\" (pinchin)=\"zoomOut(8)\">\n    <template #conn></template>\n    <svg class=\"svg-canvas\" id=\"svg-canvas\" >\n    </svg>\n    <div [style.transform]=\"'scale(' + 1/placingService.boardScale + ')'\" oncontextmenu=\"return false;\" class=\"context-menu\" *ngIf=\"showContextMenu\" [style.top.px]=\"contextMenuY\" [style.left.px]=\"contextMenuX\">\n        <div class=\"menu\">\n            <div class=\"item\" (click)=\"pasteItem(contextMenuX, contextMenuY); showContextMenu = false\">Paste here</div>\n            <hr class=\"line\">\n            <div class=\"item\" (click)=\"selectAll(); showContextMenu = false\">Select all</div>\n            <hr class=\"line\">\n            <div class=\"item\" (click)=\"zoomIn(); showContextMenu = false\">Zoom in</div>\n            <div class=\"item\" (click)=\"zoomOut(); showContextMenu = false\">Zoom out</div>\n            <hr class=\"line\">\n            <div class=\"item\" (click)=\"undo(); showContextMenu = false\">Undo</div>\n            <div class=\"item\" (click)=\"redo(); showContextMenu = false\">Redo</div>\n            <div class=\"item\" (click)=\"save(true); showContextMenu = false\">Save</div>\n            <hr class=\"line\">\n            <div class=\"item\" (click)=\"resetView(); showContextMenu = false\">Reset view</div>\n        </div>\n    </div>\n    <div [style.transform]=\"'scale(' + 1/placingService.boardScale + ')'\" oncontextmenu=\"return false;\" class=\"context-menu\" *ngIf=\"showComponentContextMenu\" [style.top.px]=\"contextMenuY\" [style.left.px]=\"contextMenuX\">\n        <div class=\"menu\">\n            <div class=\"item\" (click)=\"delete(); showComponentContextMenu = false\">Delete</div>\n            <hr class=\"line\">\n            <div class=\"item\" (click)=\"copyItem(); showComponentContextMenu = false\">Copy</div>\n            <div class=\"item\" (click)=\"cutItem(); showComponentContextMenu = false\">Cut</div>\n        </div>\n    </div>\n</div>\n<div class=\"backdrop-centralized loading\" *ngIf=\"isLoading\">\n    Loading...\n    <img src=\"./assets/logo.svg\">\n</div>\n<div *ngIf=\"!isReadOnly\">\n    <div class=\"autosave\" *ngIf=\"isAutosaving\">\n        <i class=\"far fa-save\"></i>\n    </div>\n    <div class=\"backdrop-centralized\" [style.display]=\"showSavedBoards ? 'flex' : 'none'\" (click.self)=\"closeSavedBoards()\">\n        <div class=\"saved-boards\">\n            <button class=\"close\" (click)=\"closeSavedBoards()\">×</button>\n            <div class=\"saved-boards-top\">\n                <h3 class=\"title\">Your saved systems</h3>\n                <span class=\"note\">Note that these systems are saved in your browser and aren't permanent!</span>\n            </div>\n            <div class=\"saved-boards-main-container\">\n                <div class=\"saved-boards-main\" #savedBoardsRef>\n                    <span *ngIf=\"savedBoards == null || savedBoards.length == 0\">You don't have any saved boards...</span>\n                </div>\n                <div class=\"saved-boards-side\">\n                    <span class=\"selected-title\">{{ selectedSavedBoard == null ? \"Select a board\" : selectedSavedBoard.title }}</span>\n                    <div class=\"selected-info\">\n                        <span *ngIf=\"selectedSavedBoard != null\"><span class=\"highlight\">{{ selectedSavedBoard.board.length }}</span> component{{ selectedSavedBoard.board.length == 1 ? \"\" : \"s\" }}</span>\n                    </div>\n                    <div class=\"selected-actions\">\n                        <button (click)=\"deleteSelectedSavedBoard()\" [disabled]=\"selectedSavedBoard == null\" class=\"delete\">Delete</button>\n                        <button (click)=\"loadSelectedSavedBoard()\" [disabled]=\"selectedSavedBoard == null\" class=\"load\">Load</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"saved-boards-popup\" [style.transform]=\"showSavedBoardsPopup ? 'translateX(0)' : 'translateX(calc(100% - 2.15em))' \">\n        <span class=\"hidden\">{{ savedBoards.length }}</span>\n        <div class=\"show\" >\n            <span class=\"text\">You have {{ savedBoards.length }} saved system<span *ngIf=\"savedBoards.length != 1\">s</span></span>\n            <button (click)=\"openSavedBoards()\">Show all</button>\n        </div>\n    </div>\n</div>\n<div class=\"read-only-controls\" *ngIf=\"isReadOnly\">\n    <div class=\"controls\">\n        <button *ngIf=\"!isAllClientsSendingData\" (click)=\"startAllClients()\" matTooltip=\"{{ 'Start animation' }}\"><i class=\"fas fa-play\"></i></button>\n        <button *ngIf=\"isAllClientsSendingData\" (click)=\"stopAllClients()\" matTooltip=\"{{ 'Stop animation' }}\"><i class=\"fas fa-stop\"></i></button>\n        <button (click)=\"zoomIn()\" matTooltip=\"{{ 'Zoom in' }}\"><i class=\"fas fa-search-plus\"></i></button>\n        <button (click)=\"zoomOut()\" matTooltip=\"{{ 'Zoom out' }}\"><i class=\"fas fa-search-minus\"></i></button>\n        <button (click)=\"resetView()\" matTooltip=\"{{ 'Reset view' }}\"><i class=\"fas fa-search\"></i></button>\n        <button (click)=\"toggleTitles()\" matTooltip=\"{{ 'Toggle titles' }}\"><i class=\"fas fa-heading\"></i></button>\n        <a target=\"_blank\" href=\"{{viewerEditLink}}\" matTooltip=\"{{ 'Edit board' }}\"><i class=\"fas fa-edit\"></i></a>\n    </div>\n</div>\n<p class=\"read-only-tip\" *ngIf=\"isReadOnly\" matTooltip=\"{{ 'You can also hover over individual Clients to send data' }}\">\n    ?\n</p>","import { AfterViewChecked, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild, ViewContainerRef } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\nimport { EndpointOperator } from 'src/models/EndpointOperator';\nimport { clone, sleep, UUID } from 'src/shared/ExtensionMethods';\nimport { ChangesService } from '../changes.service';\nimport { ExportPngOptions, ExportService, ExportSvgOptions } from '../export.service';\nimport { PlacingService } from '../placing.service';\nimport { SavingService } from '../saving.service';\nimport { SelectionService } from '../selection.service';\nimport { ViewingService } from '../viewing.service';\nimport { ApiComponent } from './components/api/api.component';\nimport { ApiGatewayComponent } from './components/apigateway/apigateway.component';\nimport { CacheComponent } from './components/cache/cache.component';\nimport { CDNComponent } from './components/cdn/cdn.component';\nimport { ClientComponent } from './components/client/client.component';\nimport { ClientclusterComponent } from './components/clientcluster/clientcluster.component';\nimport { CloudStorageComponent } from './components/cloudstorage/cloudstorage.component';\nimport { DatabaseComponent } from './components/database/database.component';\nimport { LoadbalancerComponent } from './components/loadbalancer/loadbalancer.component';\nimport { MessagequeueComponent } from './components/messagequeue/messagequeue.component';\nimport { ProxyComponent } from './components/proxy/proxy.component';\nimport { PubsubComponent } from './components/pubsub/pubsub.component';\nimport { OperatorComponent } from './components/Shared/OperatorComponent';\nimport { TextfieldComponent } from './components/textfield/textfield.component';\nimport { WebserverComponent } from './components/webserver/webserver.component';\n\nclass SavedBoard{\n\ttitle: string;\n\tboard: IDataOperator[];\n\tsave: any;\n\n\tconstructor(title: string, board: IDataOperator[], save: any) {\n\t\tthis.title = title;\n\t\tthis.board = board;\n\t\tthis.save = save;\n\t}\n}\n\n@Component({\n\tselector: 'app-board',\n\ttemplateUrl: './board.component.html',\n\tstyleUrls: ['./board.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BoardComponent implements AfterViewChecked  {\n\n\tboard : HTMLElement;\n\tposX = 0;\n\tposY = 0;\n\tboardMoved: boolean = false;\n\n\tisLoading = false;\n\tisAutosaving = false;\n\tcurrentBoardId: string = UUID();\n\tisAllClientsSendingData = false;\n\tcanToggleClientsSendingData = true;\n\tlastTouch: Touch;\n\n\t@Input() isReadOnly = false;\n\t@Input() loadedSave: any;\n\t@Input() viewerEditLink: string;\n\n\tAUTOSAVE_INTERVAL = 30;\n\t/**\n\t * Converting types of logic component to angular component\n\t */\n\tcomponentTypes = { \n\t\tClient: ClientComponent,\n\t\tClientCluster: ClientclusterComponent,\n\t\tAPI: ApiComponent,\n\t\tAPIGateway: ApiGatewayComponent,\n\t\tCache: CacheComponent,\n\t\tCloudStorage: CloudStorageComponent,\n\t\tDatabase: DatabaseComponent,\n\t\tLoadBalancer: LoadbalancerComponent,\n\t\tMessageQueue: MessagequeueComponent,\n\t\tPubSub: PubsubComponent,\n\t\tProxy: ProxyComponent,\n\t\tTextField: TextfieldComponent,\n\t\tWebServer: WebserverComponent,\n\t\tCDN: CDNComponent\n\t}\n\n\t@ViewChild(\"conn\", { read: ViewContainerRef }) conn;\n\t@ViewChild(\"savedBoardsRef\") savedBoardsRef: ElementRef;\n\n\t@Output() changeSystemName = new EventEmitter();\n\n\tallLogicComponents: IDataOperator[] = [];\n\tallComponents: OperatorComponent[] = [];\n\n\t/**\n\t * The Json representation of the board before change was made\n\t */\n\tbeforeState: any = \"\";\n\n\tshowSavedBoards: boolean;\n\tshowSavedBoardsPopup: boolean;\n\tsavedBoards: SavedBoard[] = [];\n\tselectedSavedBoard: SavedBoard;\n\n\tshowContextMenu: boolean = false;\n\tshowComponentContextMenu: boolean = false;\n\tcontextMenuX: number;\n\tcontextMenuY: number;\n\n\tconstructor(public placingService : PlacingService,\n\tprivate selectionService: SelectionService, \n\tprivate snackBar: MatSnackBar,\n\tprivate savingService: SavingService,\n\tprivate changeRef: ChangeDetectorRef,\n\tprivate changesService: ChangesService,\n\tprivate exportService: ExportService,\n\tprivate viewingService: ViewingService,\n\tprivate renderer: Renderer2) { }\n\t\n\tscroll(event){\n\t\tevent.preventDefault();\n\t\tif(event.deltaY < 0)\n\t\t\tthis.zoomIn();\n\t\telse\n\t\t\tthis.zoomOut();\n\t}\n\t\n\tngOnInit(): void {\n\t\tthis.board = document.getElementById(\"board\");\n\t\tthis.board.style.width = `${this.placingService.boardWidth}px`;\n\t\tthis.board.style.height = `${this.placingService.boardHeight}px`;\n\t\tthis.board.onwheel = (e) => {this.scroll(e)};\n\n\t\tthis.updateBoardTransform();\n\n\t\tthis.board.addEventListener(\"resize\", e => {\n\t\t\te.preventDefault();\n\t\t});\n\n\t\tif(!this.isReadOnly){ // These events will not be used in readonly board\n\t\t\tthis.selectionService.onStopSelecting.subscribe((e) => {\n\t\t\t\tfor(let component of this.allComponents){\n\t\t\t\t\tlet logicComponent = component.getLogicComponent();\n\n\t\t\t\t\tlet size = this.exportService.getComponentSize(logicComponent);\n\t\t\t\t\tlet pos = {top: logicComponent.options.Y, left: logicComponent.options.X};\n\t\t\t\t\tif(pos.top >= e.top && pos.left >= e.left && pos.left + size.width < e.left + e.width && pos.top + size.height < e.top + e.height){\n\t\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\t\tthis.selectionService.addSelection(component, true);\n\t\t\t\t\t\t}, 20);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.board.addEventListener(\"mouseup\",(e)=>{\n\t\t\t\tif(this.placingService.isCreating){\n\t\t\t\t\tlet component = this.placingService.createComponent(this.placingService.creatingItem, e.offsetX - 20, e.offsetY - 20, this.placingService.creatingItemOptions);\n\t\t\t\t\tthis.pushComponent(component);\n\t\t\t\t\tthis.placingService.stopCreating();\n\t\t\t\t\tthis.componentChanged();\n\t\t\t\t}\n\t\t\t});\n\t\t\twindow.addEventListener(\"touchstart\",(e) => {this.lastTouch = e.touches[0];});\n\t\t\twindow.addEventListener(\"touchmove\", (e) => {this.lastTouch = e.touches[0];});\n\t\t\n\t\t\twindow.addEventListener(\"touchend\",(e: any)=>{\n\t\t\t\tif(this.placingService.isCreating){\n\t\t\t\t\tlet posX = (this.posX - this.placingService.boardWidth * (this.placingService.boardScale - 1) / 2);\n\t\t\t\t\tlet posY = (this.posY - this.placingService.boardHeight * (this.placingService.boardScale - 1) / 2);\n\t\t\t\t\tvar x = Math.max(Math.min((this.lastTouch.pageX - posX) / this.placingService.boardScale - 20, this.placingService.boardWidth), 0);\n\t\t\t\t\tvar y =  Math.max(Math.min((this.lastTouch.pageY - posY) / this.placingService.boardScale - 80 / this.placingService.boardScale, this.placingService.boardWidth), 0);\n\t\t\t\t\tlet component = this.placingService.createComponent(this.placingService.creatingItem, x, y, this.placingService.creatingItemOptions);\n\t\t\t\t\tthis.pushComponent(component);\n\t\t\t\t\tthis.placingService.stopCreating();\n\t\t\t\t\tthis.componentChanged();\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t\tthis.placingService.componentChanged.subscribe(()=>{\n\t\t\t\t// Some component just got changed, change will be added for undo\n\t\t\t\tthis.componentChanged();\n\t\t\t})\n\t\t\tthis.placingService.pushComponent.subscribe((component: OperatorComponent)=>{\n\t\t\t\t// A component was created somewhere else and needs to be added to the state of the board\n\t\t\t\tthis.pushComponent(component);\n\t\t\t})\n\t\t\tthis.placingService.showComponentContextMenu.subscribe((e)=>{\n\t\t\t\t// Display a context menu on component\n\t\t\t\tthis.showComponentContextMenu = true;\n\t\t\t\tthis.showContextMenu = false;\n\t\t\t\tthis.contextMenuX = e.x;\n\t\t\t\tthis.contextMenuY = e.y;\n\t\t\t})\n\t\t\tsetInterval(()=>{\n\t\t\t\tif(this.allLogicComponents.length != 0){\n\t\t\t\t\tthis.save();\n\t\t\t\t}\n\t\t\t}, this.AUTOSAVE_INTERVAL * 1000);\n\t\t}\n\t}\n\n\tcopyItem(){\n\t\tlet selections = [];\n\t\tfor(let selection of this.selectionService.currentSelections){\n\t\t\tlet outputConnectionsList = []\n\t\t\tlet component = selection.getLogicComponent();\n\t\t\tlet outputPort = selection.getPortComponent(true);\n\t\t\tif(outputPort){\n\t\t\t\toutputConnectionsList = outputConnectionsList.concat(\n\t\t\t\t\toutputPort.LogicPort.connections.map(conn => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tfrom: outputPort.LogicParent.originID,\n\t\t\t\t\t\t\tto: conn.getOtherPort(outputPort.LogicPort).parent.originID,\n\t\t\t\t\t\t\tlineBreaks: conn.lineBreaks,\n\t\t\t\t\t\t\ttitle: conn.title\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} \n\t\t\tselections.push({ \n\t\t\t\tcomponent: selection.constructor, \n\t\t\t\tlogicComponent: selection.getLogicComponent(),\n\t\t\t\toptions: clone(component.options),\n\t\t\t\toutputConnectionsList: outputConnectionsList\n\t\t\t})\n\t\t}\n\t\tthis.placingService.copyItems(selections);\n\t}\n\n\tpasteItem(x: number = -1, y: number = -1){\n\t\tthis.selectionService.clearSelection();\n\t\tthis.selectionService.clearCurrentConnectionSelections();\n\t\tfor(let component of this.placingService.pasteItem(x,y)){\n\t\t\tthis.pushComponent(component);\n\t\t\tcomponent.onViewInit.push(()=>{\n\t\t\t\tthis.selectionService.addSelection(component, true);\n\t\t\t});\n\t\t}\n\t\tthis.componentChanged();\n\t}\n\n\tcutItem(){\n\t\tthis.copyItem();\n\t\tthis.delete();\n\t}\n\n\tselectAll(){\n\t\tfor(let component of this.allComponents){\n\t\t\tthis.selectionService.addSelection(component, true);\n\t\t}\n\t}\n\n\tngAfterViewChecked(): void { this.changeRef.detectChanges();}\n\t\n\tasync ngAfterViewInit(){\n\t\tthis.placingService.connectionRef = this.conn;\n\t\tthis.placingService.snackBar = this.snackBar;\n\t\tif(this.loadedSave){\n\t\t\tthis.loadFromSave(this.loadedSave);\n\t\t}\n\t\telse if(!this.isReadOnly){\n\t\t\tthis.loadLatestBoard();\n\t\t}\n\n\t\tif(!this.isReadOnly){\n\t\t\t// Loading saved boards\n\t\t\tlet savedBoardsJson = this.savingService.getSavedBoardsJson();\n\t\t\tif(savedBoardsJson == null)\n\t\t\t\treturn;\n\t\t\tlet savedBoards = JSON.parse(savedBoardsJson) as any[];\n\t\t\tif(savedBoards.length == 0)\n\t\t\t\treturn;\n\t\t\tfor(let board of savedBoards){ // Convert all boards to IDataOperator[]\n\t\t\t\tlet convertedBoard = this.savingService.getComponentsFromSave(board.components);\n\t\t\t\tif(convertedBoard)\n\t\t\t\t\tthis.savedBoards.push(new SavedBoard(board.name || \"Untitled System\", convertedBoard, board));\n\t\t\t}\n\t\t\tfor(let savedBoard of this.savedBoards){\n\t\t\t\tthis.displaySavedBoard(savedBoard);\n\t\t\t}\n\t\t\tthis.showSavedBoardsPopup = true;\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.showSavedBoardsPopup = false;\n\t\t\t}, 6500);\n\t\t}\n\t\telse{\n\t\t\tthis.resetView();\n\t\t}\n\t}\n\n\tasync displaySavedBoard(savedBoard: SavedBoard){\n\t\tlet divContainer = this.renderer.createElement('div');\n\t\tdivContainer.className = \"saved-board\";\n\t\tdivContainer.id = savedBoard.save.id;\n\n\t\tdivContainer.onclick = () => {\n\t\t\t// Display options\n\t\t\tif(this.selectedSavedBoard){\n\t\t\t\tdocument.getElementById(this.selectedSavedBoard.save.id).classList.remove(\"selected\")\n\t\t\t}\n\t\t\tthis.selectedSavedBoard = savedBoard;\n\t\t\tdocument.getElementById(this.selectedSavedBoard.save.id).classList.add(\"selected\")\n\t\t}\n\t\tdivContainer.ondblclick  = () => {\n\t\t\t// Load board\n\t\t\tthis.closeSavedBoards();\n\t\t\tthis.loadFromSave(savedBoard.save);\n\t\t}\n\t\tconst expOptions = new ExportPngOptions();\n\t\texpOptions.lightMode = !this.viewingService.isDarkMode();\n\t\tlet canvas = await this.exportService.getCanvas(savedBoard.board, expOptions);\n\t\tcanvas.style.width = \"100%\";\n\t\tcanvas.style.marginBottom = \"-5px\";\n\n\t\tlet title = this.renderer.createElement(\"span\");\n\t\ttitle.innerText = savedBoard.title;\n\t\ttitle.className = \"saved-board-title\";\n\n\t\tlet existing = document.getElementById(savedBoard.save.id);\n\t\tif(existing)\n\t\t\tthis.savedBoardsRef.nativeElement.removeChild(existing);\n\n\t\tthis.renderer.appendChild(divContainer, canvas);\n\t\tthis.renderer.appendChild(divContainer, title);\n\t\tthis.renderer.appendChild(this.savedBoardsRef.nativeElement, divContainer);\n\t}\n\n\topenSavedBoards(){\n\t\tthis.showSavedBoards = true;\n\t\tthis.showSavedBoardsPopup = false;\n\t\tlet savedBoard = this.savedBoards.find(board => board.save.id == this.currentBoardId);\n\t\tif(savedBoard)\n\t\t\tthis.displaySavedBoard(savedBoard);\n\t}\n\n\tcloseSavedBoards(){\n\t\tthis.showSavedBoards = false;\n\t}\n\n\tdeleteSelectedSavedBoard(){\n\t\tthis.savedBoardsRef.nativeElement.removeChild(document.getElementById(this.selectedSavedBoard.save.id));\n\n\t\tthis.savedBoards.splice(this.savedBoards.findIndex(board => board === this.selectedSavedBoard), 1);\n\t\tthis.selectedSavedBoard = null;\n\t\tthis.savingService.saveBoards(this.savedBoards.map(board => board.save));\n\t}\n\n\tloadSelectedSavedBoard(){\n\t\tthis.changesService.reset();\n\t\tif(this.allLogicComponents.length != 0)\n\t\t\tthis.saveCurrentBoardToAllBoards();\n\t\tthis.closeSavedBoards();\n\t\tthis.loadFromSave(this.selectedSavedBoard.save);\n\t}\n\n\tasync getCurrentBoardCanvas(options: ExportPngOptions){\n\t\treturn await this.exportService.getCanvas(this.allLogicComponents, options);\n\t}\n\n\tasync getCurrentBoardSvg(options: ExportSvgOptions){\n\t\treturn await this.exportService.getSvg(this.allLogicComponents, options);\n\t}\n\n\tloadLatestBoard(){\n\t\tlet latestBoardJson = this.savingService.getLatestBoardJson();\n\t\tif(latestBoardJson){\n\t\t\ttry{\n\t\t\t\tthis.loadFromJson(latestBoardJson, false);\n\t\t\t}\n\t\t\tcatch(e){\n\t\t\t\tconsole.log(e);\n\t\t\t\tthis.isLoading = false;\n\t\t\t}\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tthis.beforeState = this.getCurrentBoardJson();\n\t\t}, 1000);\n\t}\n\n\tpublic handleMousedown(e: Event) {\n\t\tif(e instanceof MouseEvent){\n\t\t\tif(e.button == 0 && !this.isReadOnly){\n\t\t\t\t// Start selecting\n\t\t\t\tthis.showContextMenu = false;\n\t\t\t\tthis.showComponentContextMenu = false;\n\t\t\t\tthis.selectionService.startSelecting(e, this.placingService.boardScale)\n\t\t\t}\n\t\t\telse if(this.isReadOnly || e.button == 1 || e.button == 2){\n\t\t\t\te.preventDefault();\n\t\t\t\tif(!this.placingService.canDrag()) \n\t\t\t\t\treturn;\n\t\t\t\tthis.board.classList.add(\"moving\")\n\t\t\t\tthis.board.addEventListener( \"mousemove\", this.handleMousemove );\n\t\t\t\twindow.addEventListener( \"mouseup\", this.handleMouseup );\n\t\t\t}\n\t\t}\n\t\telse if(e instanceof TouchEvent){\n\t\t\te.preventDefault();\n\t\t\tif(!this.placingService.canDrag()) \n\t\t\t\treturn;\n\t\t\tthis.lastTouchMoveX = e.touches[0].clientX;\n\t\t\tthis.lastTouchMoveY = e.touches[0].clientY;\n\t\t\tthis.board.classList.add(\"moving\")\n\t\t\tthis.board.addEventListener( \"touchmove\", this.handleMousemove );\n\t\t\twindow.addEventListener( \"touchend\", this.handleMouseup );\n\t\t}\n\t\t\n\t}\n\n\tlastTouchMoveX: number = 0;\n\tlastTouchMoveY: number = 0;\n\n\tpublic handleMousemove = ( e: Event ): void => {\n\t\tif(e instanceof MouseEvent){\n\t\t\tthis.boardMoved = true;\n\t\t\tthis.showContextMenu = false;\n\t\t\tthis.showComponentContextMenu = false;\n\t\t\tthis.posX += e.movementX;\n\t\t\tthis.posY += e.movementY;\n\t\t}\n\t\telse if(e instanceof TouchEvent){\n\t\t\tthis.boardMoved = true;\n\t\t\tthis.showContextMenu = false;\n\t\t\tthis.showComponentContextMenu = false;\n\t\t\tthis.posX += e.touches[0].clientX - this.lastTouchMoveX;\n\t\t\tthis.posY += e.touches[0].clientY - this.lastTouchMoveY;\n\t\t\tthis.lastTouchMoveX = e.touches[0].clientX;\n\t\t\tthis.lastTouchMoveY = e.touches[0].clientY;\n\t\t}\n\n\t\tthis.updateBoardTransform();\n\t}\n\n\tpublic handleMouseup = (e: Event) : void => {\n\t\tif(e instanceof MouseEvent){\n\t\t\tif(e.button === 2 && !this.boardMoved && !this.isReadOnly){\n\t\t\t\tthis.showContextMenu = true;\n\t\t\t\tthis.showComponentContextMenu = false;\n\t\t\t\tthis.contextMenuX = e.offsetX;\n\t\t\t\tthis.contextMenuY = e.offsetY;\n\t\t\t}\n\t\t\tthis.boardMoved = false;\n\t\t\tthis.board.classList.remove(\"moving\")\n\t\t\tthis.board.removeEventListener( \"mousemove\", this.handleMousemove );\n\t\t\twindow.removeEventListener( \"mouseup\", this.handleMouseup );\n\t\t}\n\t\telse if(e instanceof TouchEvent){\n\t\t\tthis.boardMoved = false;\n\t\t\tthis.board.classList.remove(\"moving\")\n\t\t\tthis.board.removeEventListener( \"touchmove\", this.handleMousemove );\n\t\t\twindow.removeEventListener( \"touchend\", this.handleMouseup );\n\t\t}\n\t\n\t}\n\n\tpublic updateBoardTransform(){\n\t\tthis.board.style.transform = `translateX(${this.posX}px) translateY(${this.posY}px) scale(${this.placingService.boardScale})`;\n\t}\n\n\tpublic handleClick = () : void => {\n\t\tif(this.placingService.isConnecting){\n\t\t\tthis.placingService.stopConnecting();\n\t\t\tthis.board.onmousemove = null;\n\t\t\tdocument.getElementsByClassName(\"svg-canvas\")[0].innerHTML = \"\";\n\t\t}\n\t}\n\n\tpublic handleSelfClick(){\n\t\tthis.selectionService.clearSelection();\n\t\tthis.selectionService.clearConnectionSelection();\n\t\tthis.selectionService.clearCurrentConnectionSelections();\n\t\tthis.selectionService.clearLineBreakSelection();\n\t}\n\n\tzoomOut(modifier: number = 1){\n\t\tthis.placingService.boardScale = Math.max(this.placingService.boardScale - (0.1 / modifier),0.1) ;\n\t\tthis.updateBoardTransform();\n\t}\n\n\tzoomIn(modifier: number = 1){\n\t\tthis.placingService.boardScale = Math.min(this.placingService.boardScale + (0.1 / modifier),2);\n\t\tthis.updateBoardTransform();\n\t}\n\n\ttoggleTitles(){\n\t\tthis.viewingService.setTitlesHidden(\n\t\t\t!this.viewingService.isTitlesHidden(), false\n\t\t);\n\t}\n\n\tresetView(){\n\t\tif(this.allLogicComponents.length == 0 || !this.isReadOnly){\n\t\t\tthis.posX = (window.innerWidth - this.placingService.boardWidth) / 2;\n\t\t\tthis.posY = (window.innerHeight - this.placingService.boardHeight) / 2;\n\t\t\tthis.placingService.boardScale = 1;\n\t\t}\n\t\telse{\n\t\t\tlet minX = Number.MAX_VALUE;\n\t\t\tlet minY = Number.MAX_VALUE;\n\t\t\tlet maxX = 0;\n\t\t\tlet maxY = 0;\n\n\t\t\tfor(let component of this.allLogicComponents){\n\t\t\t\tminX = Math.min(component.options.X, minX);\n\t\t\t\tminY = Math.min(component.options.Y, minY);\n\t\t\t\tlet {width, height} = this.exportService.getComponentSize(component);\n\t\t\t\tmaxX = Math.max(component.options.X + width, maxX);\n\t\t\t\tmaxY = Math.max(component.options.Y + height, maxY);\n\t\t\t}\n\t\t\t// Size of components\n\t\t\tlet width = maxX - minX + 80;\n\t\t\tlet height = maxY - minY + 30;\n\n\t\t\t// Adjust scale to fit size\n\t\t\tthis.placingService.boardScale = Math.max(Math.min(Math.round((window.innerWidth / width) / 0.1) * 0.1, 2), 0.3);\n\t\t\tthis.placingService.boardScale = Math.max(Math.min(Math.round((window.innerHeight / height) / 0.1) * 0.1, this.placingService.boardScale), 0.3);\n\n\t\t\tlet xFromCenter = (this.placingService.boardWidth / 2) - minX;\n\t\t\tlet yFromCenter = (this.placingService.boardHeight / 2) - minY;\n\t\t\t\n\t\t\tthis.posX = - minX + xFromCenter + (window.innerWidth - width * this.placingService.boardScale) / 2 + 20;\n\t\t\tthis.posY = - minY + yFromCenter + (window.innerHeight - height * this.placingService.boardScale) / 2 + 15;\n\t\t\t\n\t\t\t// Get the board in view\n\t\t\tfor(let i = 2; i > this.placingService.boardScale; i -= 0.1){\n\t\t\t\tthis.posX -= xFromCenter / 10;\n\t\t\t\tthis.posY -= yFromCenter / 10;\n\t\t\t}\n\t\t}\n\t\tthis.updateBoardTransform();\n\t}\n\n\t/**\n\t * Triggers every client in the board to send data automatically\n\t */\n\tasync startAllClients(){\n\t\tif(this.isAllClientsSendingData || !this.canToggleClientsSendingData)\n\t\t\treturn;\n\t\tthis.canToggleClientsSendingData = false;\n\t\tthis.isAllClientsSendingData = true;\n\t\tfor(let component of this.allComponents){\n\t\t\tif(component instanceof ClientComponent){\n\t\t\t\tif(component.canEstablishConnection){\n\t\t\t\t\tcomponent.establishConnection();\n\t\t\t\t}\n\t\t\t\tcomponent.toggleAutomaticSend();\n\t\t\t\tawait sleep(300); // Make some delay between\n\t\t\t}\n\t\t\telse if(component instanceof ClientclusterComponent){\n\t\t\t\tcomponent.LogicClientCluster.startSendingData();\n\t\t\t\tawait sleep(300); // Make some delay between\n\t\t\t}\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tthis.canToggleClientsSendingData = true;\n\t\t}, 400);\n\t}\n\n\tstopAllClients(){\n\t\tif(!this.isAllClientsSendingData || !this.canToggleClientsSendingData)\n\t\t\treturn;\n\t\tthis.canToggleClientsSendingData = false;\n\t\tthis.isAllClientsSendingData = false;\n\t\tfor(let component of this.allComponents){\n\t\t\tif(component instanceof ClientComponent){\n\t\t\t\tif(component.canEndConnection){\n\t\t\t\t\tcomponent.endConnection();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tcomponent.toggleAutomaticSend();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(component instanceof ClientclusterComponent){\n\t\t\t\tcomponent.LogicClientCluster.stopSendingData();\n\t\t\t}\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tthis.canToggleClientsSendingData = true;\n\t\t}, 400);\n\t}\n\n\tcomponentChanged(){\n\t\tthis.changesService.pushChange(this.beforeState);\n\t\tthis.beforeState = this.getCurrentBoardJson();\n\t}\n\n\tgetCurrentBoardJson(){\n\t\treturn this.savingService.getBoardJson(this.allLogicComponents, this.savingService.systemName, this.currentBoardId);\n\t}\n\n\tundo(){\n\t\tlet undoState = this.changesService.getUndo(this.getCurrentBoardJson());\n\t\tif(undoState)\n\t\t\tthis.loadFromJson(undoState, false);\n\t\tsetTimeout(()=>{\n\t\t\tthis.beforeState = this.getCurrentBoardJson();\n\t\t}, 400)\n\t}\n\n\tredo(){\n\t\tlet redoState = this.changesService.getRedo();\n\t\tif(redoState)\n\t\t\tthis.loadFromJson(redoState, false);\n\t\tsetTimeout(()=>{\n\t\t\tthis.beforeState = this.getCurrentBoardJson();\n\t\t}, 400)\n\t}\n\n\tdelete(){\n\t\tlet components = this.selectionService.currentSelections; \n\t\tfor(let component of components){ \n\t\t\tlet logicComponent = component.getLogicComponent();\n\t\t\tthis.allComponents.splice(this.allComponents.findIndex(comp => comp === component),1);\n\t\t\tthis.allLogicComponents.splice(this.allLogicComponents.findIndex(comp => comp.originID == logicComponent.originID),1);\n\t\t}\n\n\t\tif(this.selectionService.deleteSelection())\n\t\t\tthis.componentChanged();\n\t}\n\n\tnewFile(){\n\t\tif(this.allLogicComponents.length != 0)\n\t\t\tthis.saveCurrentBoardToAllBoards();\n\t\tthis.currentBoardId = UUID();\n\t\tthis.changeSystemName.emit(\"Untitled system\");\n\t\tthis.clearBoard(true);\n\t\tthis.resetView();\n\t\tthis.changesService.reset();\n\t}\n\n\tsave(showIcon = false){\n\t\tif(this.isReadOnly)\n\t\t\treturn;\n\t\tthis.savingService.save(this.allLogicComponents, this.currentBoardId);\n\t\tthis.saveCurrentBoardToAllBoards();\n\t\tif(showIcon){\n\t\t\tthis.isAutosaving = true;\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.isAutosaving = false;\n\t\t\t}, 1000)\n\t\t}\n\t}\n\n\tloadFromJson(json: string, showInfo = true){\n\t\ttry{\n\t\t\tlet file = JSON.parse(json);\n\t\t\tthis.loadFromSave(file);\n\t\t}\n\t\tcatch(e){\n\t\t\tconsole.log(e);\n\t\t\tif(showInfo)\n\t\t\t\tthis.placingService.showSnack(\"This file could not be loaded because it is corrupted or not supported.\")\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.isLoading = false;\n\t\t\t}, 100);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Loads the board from save object generated by saving service\n\t */\n\tloadFromSave(save: any, showInfo = true){\n\t\tthis.clearBoard();\n\t\tthis.isLoading = true;\n\t\tlet wasError = false;\n\t\tlet components: any[];\n\t\tcomponents = save;\n\t\tif(save.components)\n\t\t\tcomponents = save.components;\n\t\tif(components == null || components.length == 0){\n\t\t\tthis.isLoading = false;\n\t\t\treturn;\n\t\t}\n\t\tif(save.name)\n\t\t\tthis.changeSystemName.emit(save.name);\n\t\tif(save.id != null && save.id != \"undefined\")\n\t\t\tthis.currentBoardId = save.id;\n\t\telse\n\t\t\tthis.currentBoardId = UUID();\n\n\t\tlet connectionTable: any[] = [];\n\t\tlet outputPortsTable: any = {};\n\t\tlet index = 0;\n\t\tfor(let logicComponent of components){\n\t\t\tlet type = this.getComponentTypeFromName(logicComponent.type);\n\t\t\tif(type == null || logicComponent.options == null){\n\t\t\t\twasError = true;\n\t\t\t\tif(index == components.length - 1){\n\t\t\t\t\tthis.connectLoadedComponents(connectionTable, outputPortsTable);\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlet left = logicComponent.options.X;\n\t\t\tlet top = logicComponent.options.Y;\n\t\t\tlet component = this.placingService.createComponent(type as any, left, top, logicComponent.options, this.isReadOnly);\n\n\t\t\tthis.pushComponent(component);\n\t\t\tconst currentComponentIndex = index;\n\t\t\tcomponent.onViewInit.push(() => {\n\t\t\t\tif(component instanceof DatabaseComponent && component.getLogicComponent().options.isMasterShard){\n\t\t\t\t\tcomponent.createOutputPort()\n\t\t\t\t}\n\t\t\t\tlet outputPort = component.getPortComponent(true);\n\t\t\t\tlet inputPort = component.getPortComponent(false);\n\t\t\t\tif(outputPort){\n\t\t\t\t\toutputPortsTable[logicComponent.id] = outputPort;\n\t\t\t\t}\n\t\t\t\tif(inputPort){\n\t\t\t\t\tlet connection: any = {};\n\t\t\t\t\tconnection.port = inputPort;\n\t\t\t\t\tconnection.id = logicComponent.id;\n\t\t\t\t\tconnection.to = logicComponent.connections;\n\t\t\t\t\tconnectionTable.push(connection);\n\t\t\t\t}\n\t\t\t\tif(currentComponentIndex == components.length - 1){\n\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\tthis.connectLoadedComponents(connectionTable, outputPortsTable);\n\t\t\t\t\t}, 150);\n\t\t\t\t}\n\t\t\t});\n\t\t\tindex++;\n\t\t}\n\t\tif(wasError && showInfo)\n\t\t\tthis.placingService.showSnack(\"There were errors loading the file and some components couldn't be loaded.\")\n\t}\n\n\tsaveCurrentBoardToAllBoards(){\n\t\tlet boardSave = this.savingService.getBoardSave(this.allLogicComponents, this.savingService.systemName, this.currentBoardId);\n\t\tlet currentBoardIndex = this.savedBoards.findIndex(board => board.save.id == this.currentBoardId);\n\t\tlet savedBoard = new SavedBoard(boardSave.name, this.allLogicComponents, boardSave);\n\t\tif(currentBoardIndex != -1)\n\t\t\tthis.savedBoards.splice(currentBoardIndex, 1);\n\t\telse\n\t\t\tthis.displaySavedBoard(savedBoard);\n\t\tthis.savedBoards.push(savedBoard);\n\t\tthis.savingService.saveBoards(this.savedBoards.map(board => board.save));\n\t}\n\n\tconnectLoadedComponents(connectionTable: any[], outputPortsTable: any){\n\t\tfor(let connection of connectionTable){\n\t\t\tconnection.to.filter(con => con.isFromOutput == null || !con.isFromOutput).forEach(con => {\n\t\t\t\tthis.placingService.connectPorts(outputPortsTable[con.to], connection.port, this.isReadOnly, con.lineBreaks, con.title);\n\t\t\t});\n\t\t}\n\t\tsetTimeout(()=>{\n\t\t\tthis.isLoading = false;\n\t\t\tthis.save();\n\t\t\tthis.updateComponents();\n\t\t}, 100);\n\t}\n\n\tupdateComponents(){\n\t\tfor(let component of this.allComponents){\n\t\t\tif((component as any).updateSelection){\n\t\t\t\t(component as any).updateSelection();\n\t\t\t}\n\t\t}\n\t}\n\n\tclearBoard(clearLocalStorage = false){\n\t\tfor(let component of this.allComponents){\n\t\t\tthis.selectionService.currentSelections = [component]; \n\t\t\ttry{ // Deleting element while sending data could throw error\n\t\t\t\tthis.selectionService.deleteSelection();\n\t\t\t}\n\t\t\tcatch{}\n\t\t}\n\t\tif(clearLocalStorage)\n\t\t\tlocalStorage.setItem(this.savingService.LOCALSTORAGE_AUTOSAVE_KEY,\"\");\n\t\tthis.allComponents = [];\n\t\tthis.allLogicComponents = [];\n\t}\n\n\tgetComponentTypeFromName(name: string){\n\t\treturn this.componentTypes[name];\n\t}\n\n\tpushComponent(component: OperatorComponent){\n\t\tthis.allComponents.push(component);\n\t\tthis.allLogicComponents.push(component.getLogicComponent());\n\t}\n}","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { arrayEquals, getRateFromOutputRate, sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { Connection } from \"./Connection\";\nimport { Endpoint, EndpointRef } from \"./Endpoint\";\nimport { gRPCMode } from \"./enums/gRPCMode\";\nimport { Protocol } from \"./enums/Protocol\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Options } from \"./Options\";\nimport { Port } from \"./Port\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\n\nexport class ClientCluster extends LogicComponent implements IDataOperator{\n\n    outputPort: Port;\n    options: ClientClusterOptions;\n    streamingConnections: StreamingConnection[] = [];\n    isSendingData: boolean;\n    color = \"#2ebf91\";\n\n    constructor() {\n        super();\n        this.outputPort = new Port(this, true, true);        \n        this.options = new ClientClusterOptions();\n        this.options.title = \"Client Cluster\";\n    }\n\n    receiveData(data: RequestData): void {\n        this.fireReceiveData(data);\n        if(data.header.endpoint.endpoint.protocol == Protocol.WebSockets || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Bidirectional Streaming\"] || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Server Streaming\"]){\n            if(data.header.stream != true){ // Disconnect from stream\n                let streamConnection = this.streamingConnections.find(con => con.connectionId === data.responseId);\n                if(streamConnection != null)\n                    this.streamingConnections.splice(this.streamingConnections.findIndex(con => con.connectionId === data.responseId), 1);\n            }\n        }\n    }\n\n    /**\n     * Starts sending data to random available endpoints\n     */\n    startSendingData(){\n        this.isSendingData = true;    \n        this.sendNewRequest();\n    }\n\n    stopSendingData(){\n        for(let streamConnection of this.streamingConnections){\n            this.stopStream(streamConnection.connectionId);\n        }\n        this.streamingConnections = [];\n        this.isSendingData = false;\n    }\n\n    async sendNewRequest(){\n        await sleep( (1 / getRateFromOutputRate(this.options.outputRate)) * 1000 )\n        if(!this.isSendingData)\n            return;\n        this.sendNewRequest();\n        if(this.outputPort.connections.length == 0)\n            return;\n        let connection = this.outputPort.connections[Math.floor(Math.random() * this.outputPort.connections.length)];\n        let endpoints = connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n        if(endpoints.length == 0)\n            return;\n        let targetEndpoint = endpoints[Math.floor(Math.random() * endpoints.length)];\n        let request = new RequestData();\n        request.origin = connection;\n        request.originID = this.originID;\n        request.requestId = UUID();\n        let epRef = new EndpointRef();\n        epRef.endpoint = targetEndpoint;\n        epRef.method = targetEndpoint.supportedMethods[Math.floor(Math.random() * targetEndpoint.supportedMethods.length)];\n        request.header = new RequestDataHeader(epRef, targetEndpoint.protocol);\n        if(targetEndpoint.grpcMode != gRPCMode.Unary || targetEndpoint.protocol == Protocol.WebSockets){ \n            // Stream endpoint \n            let streamConnection = this.streamingConnections.find(con => con.endpoint === targetEndpoint);\n            if(streamConnection != null){ \n                // Already streaming to this connection -> end stream\n                this.stopStream(streamConnection.connectionId);\n                this.streamingConnections.splice(this.streamingConnections.findIndex(con => con.connectionId == streamConnection.connectionId), 1);\n            }\n            else{ \n                // Estabilish new stream to given connection \n                this.streamingConnections.push(new StreamingConnection(request.requestId, targetEndpoint, connection));\n                this.stream(request, request.requestId);\n            }\n        }\n        else{ \n            // Basic endpoint\n            this.sendData(request);\n        }\n    }\n\n    async sendData(data: RequestData) {\n        return await this.outputPort.sendData(data, data.origin);\n    }\n\n    getAvailableEndpoints(): Endpoint[] {\n        let availableEndpoints :Endpoint[] = [];\n        for(let connection of this.outputPort.connections){\n            connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints().forEach(endpoint =>{\n                let duplicate = (availableEndpoints.find(ep => ep.url === endpoint.url && arrayEquals(endpoint.supportedMethods, ep.supportedMethods)) != null)\n                if(!duplicate)\n                    availableEndpoints.push(endpoint);\n            });        \n        }\n        return availableEndpoints;\n    }\n\n    stopStream(connectionId){\n        let streamConnection = this.streamingConnections.find(con => con.connectionId == connectionId);\n        if(streamConnection == null || streamConnection.endpoint.grpcMode == gRPCMode.Unary && streamConnection.endpoint.protocol != Protocol.WebSockets)\n            return;\n        let data = new RequestData();\n        let epRef = new EndpointRef();\n        epRef.endpoint = streamConnection.endpoint;\n        epRef.method = epRef.endpoint.supportedMethods[Math.floor(Math.random() * epRef.endpoint.supportedMethods.length)];\n        data.header = new RequestDataHeader(epRef, epRef.endpoint.protocol, false);\n        data.requestId = connectionId;\n        data.origin = streamConnection.connection;\n        data.originID = this.originID;\n        this.sendData(data);\n    }\n\n    async stream(data: RequestData, connectionId: string){\n        let streamConnection = this.streamingConnections.find(con => con.connectionId == connectionId);\n        if(!this.isSendingData || streamConnection == null || streamConnection.endpoint.grpcMode == gRPCMode.Unary && streamConnection.endpoint.protocol != Protocol.WebSockets)\n            return;\n        data.requestId = connectionId;\n        data.origin = streamConnection.connection;\n        data.header.stream = true;\n        this.sendData(data);\n        await sleep(700);\n        await this.stream(data, connectionId);\n    }\n}\n\nexport class ClientClusterOptions extends Options{\n    outputRate: number = 5;\n}\n\nclass StreamingConnection {\n    connectionId: string ;\n\tendpoint: Endpoint ;\n\tconnection: Connection;\n\n    constructor(connectionId: string, endpoint: Endpoint, connection: Connection) {\n        this.connectionId = connectionId;\n        this.connection = connection;\n        this.endpoint = endpoint;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { API } from 'src/models/API';\nimport { Endpoint } from 'src/models/Endpoint';\nimport { APIType } from 'src/models/enums/APIType';\nimport { gRPCMode } from 'src/models/enums/gRPCMode';\nimport { HTTPMethod } from 'src/models/enums/HTTPMethod';\nimport { Protocol } from 'src/models/enums/Protocol';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'api',\n\ttemplateUrl: './api.component.html',\n\tstyleUrls: ['./api.component.scss']\n})\nexport class ApiComponent  extends OperatorComponent implements OnInit{\n\n\tpublic LogicApi: API = new API();\n\t\n\tconnectableEndpoints: Endpoint[] = [];\n\t\n\tpublic handleClick(event: MouseEvent){\n\t\tsuper.handleClick(event);\n\t\tthis.updateSelection();\n\t}\n\n\tupdateSelection(){\n\t\tthis.connectableEndpoints = this.LogicApi.getConnectableEndpoints();\n\t\tfor(let j = 0; j < this.LogicApi.options.endpoints.length; j++){\n\t\t\tlet endpoint = this.LogicApi.options.endpoints[j];\n\t\t\tfor(let i = 0; i < endpoint.actions.length; i++){\n\t\t\t\tlet action = endpoint.actions[i];\n\t\t\t\tlet currEdp = action.endpoint;\n\t\t\t\tlet currMth = action.method;\n\t\t\t\tthis.LogicApi.options.endpoints[j].actions[i].endpoint = null;\n\t\t\t\tif(this.connectableEndpoints.length == 0){\n\t\t\t\t\tthis.connectableEndpoints = [];\n\t\t\t\t\tendpoint.actions = [];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(currEdp != null && currMth != null){\n\t\t\t\t\tfor(let e of this.connectableEndpoints){ // need this workaround to keep values in material select....\n\t\t\t\t\t\tif(e.url == currEdp.url)\n\t\t\t\t\t\t\tthis.LogicApi.options.endpoints[j].actions[i].endpoint = e;\n\t\t\t\t\t}\n\t\t\t\t\tendpoint.actions[i].method = currMth;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tendpoint.actions.splice(i,1);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTypeChange(){\n\t\tlet type = this.LogicApi.options.type;\n\t\tlet endpoint: Endpoint;\n\t\tif(type == APIType.REST){\n\t\t\tendpoint = new Endpoint(\"api/posts\",[HTTPMethod.GET,HTTPMethod.POST,HTTPMethod.PUT,HTTPMethod.DELETE]);\n\t\t}\n\t\telse if(type == APIType.GraphQL){\n\t\t\tendpoint = new Endpoint(\"/graphql\",[HTTPMethod.GET,HTTPMethod.POST]);\n\t\t}\n\t\telse if(type == APIType.RPC){\n\t\t\tendpoint = new Endpoint(\"api/getPosts\",[HTTPMethod.GET]);\n\t\t}\n\t\telse if(type == APIType.gRPC){\n\t\t\tendpoint = new Endpoint(\"api/getPosts\",[HTTPMethod.GET]);\n\t\t\tendpoint.grpcMode = gRPCMode.Unary;\n\t\t}\n    \telse if(type == APIType.WebSockets){\n\t\t\tendpoint = new Endpoint(\"api/sendMessage\", [HTTPMethod.GET]);\n\t\t\tendpoint.protocol = Protocol.WebSockets;\n\t\t}\n\t\tthis.LogicApi.options.endpoints = [endpoint];\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicApi;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new API();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicApi.options.X \"\n[style.top.px]=\"LogicApi.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/api.svg\">\n    </div>\n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div>\n            <div class=\"options-type-container\">\n                <span class=\"property-name\">Type: <info-tooltip [Message]=\"'Changes the type of an API. This can change the behaviour of endpoints.'\"></info-tooltip></span>\n                <div>\n                    <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                        <mat-select (selectionChange)=\"handleTypeChange(); afterChange()\" [(ngModel)]=\"LogicApi.options.type\">\n                            <mat-option *ngFor=\"let type of APITypeKeys\" [value]=\"type\">{{APIType[type]}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <endpoint-select\n            [Model]=\"LogicApi\"\n            [Type]=\"LogicApi.options.type\"\n            [AfterChange]=\"afterChange\"\n            [ConnectableEndpoints]=\"connectableEndpoints\"\n            ></endpoint-select>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Cache } from \"src/models/Cache\";\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n    selector: 'cache',\n    templateUrl: './cache.component.html',\n    styleUrls: ['./cache.component.scss']\n})\nexport class CacheComponent extends OperatorComponent implements OnInit {\n    \n    public LogicCache : Cache = new Cache();\n\n    public getLogicComponent(){\n        return this.LogicCache;\n    }\n\n    static getColor(): string{\n\t\tlet c = new Cache();\n\t\treturn c.color;\n\t}\n}\n","<div\n#anchorRef\n[style.left.px]=\"LogicCache.options.X\"\n[style.top.px]=\"LogicCache.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/cache.svg\">\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div class=\"options-type-container\">\n            <span class=\"property-name\">Write Policy: <info-tooltip [Message]=\"'Changes the write policy of the cache. This changes behaviour of writes.'\"></info-tooltip></span>\n            <div>\n                <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                    <mat-select (selectionChange)=\"afterChange()\" [(ngModel)]=\"LogicCache.options.writePolicy\">\n                      <mat-option *ngFor=\"let type of WritePolicyKeys\" [value]=\"type\">{{WritePolicy[type]}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <div class=\"options-type-container\">\n            <span class=\"property-name\">Replacement Policy: <info-tooltip [Message]=\"'Changes the replacement policy of the cache. This does not have any effect on the visualization.'\"></info-tooltip></span>\n            <div>\n                <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                    <mat-select (selectionChange)=\"afterChange()\" [(ngModel)]=\"LogicCache.options.replacementPolicy\">\n                      <mat-option *ngFor=\"let type of ReplacementPolicyKeys\" [value]=\"type\">{{ReplacementPolicy[type]}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n    </div>\n</div>","<input *ngIf=\"!viewingService.isTitlesHidden()\" type=\"text\" class=\"component-title\" [(ngModel)]=\"Model.options.title\" spellcheck=\"false\">","import { ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { ExportService } from 'src/app/export.service';\nimport { ViewingService } from 'src/app/viewing.service';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\n\n@Component({\n\tselector: 'component-title',\n\ttemplateUrl: './title.component.html',\n\tstyleUrls: ['./title.component.scss'],\n})\nexport class TitleComponent implements OnInit {\n\n\t@Input() Model: IDataOperator\n\n\tconstructor(public viewingService: ViewingService, public exportService: ExportService, private cdRef: ChangeDetectorRef) { \n\t\tviewingService.ViewUpdated.subscribe(() => {\n\t\t\tthis.cdRef.detectChanges();\n\t\t})\n\t}\n\n\tngOnInit(): void { \n\t\tthis.cdRef.detectChanges();\n\t}\n}","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { SelectionService } from 'src/app/selection.service';\nimport { ViewingService } from 'src/app/viewing.service';\nimport { Connection, LineBreak } from 'src/models/Connection';\nimport { createRoundedPath, UUID } from 'src/shared/ExtensionMethods';\nimport { PortComponent } from '../port/port.component';\n\n@Component({\n\tselector: 'connection',\n\ttemplateUrl: './connection.component.html',\n\tstyleUrls: ['./connection.component.scss'],\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ConnectionComponent implements OnInit {\n  \n\tpublic portComponent1 : PortComponent;\n\tpublic portComponent2 : PortComponent;\n\t\n\tpublic LogicConnection : Connection;\n\n\tisReadOnly = false;\n\tline: string = \"\";\n\n\t@ViewChild(\"svg\") svg: ElementRef;\n\t@ViewChild(\"mainPath\") mainPath: ElementRef;\n\t@ViewChild(\"secondPath\") secondPath: ElementRef;\n\t@ViewChild(\"data\") data: ElementRef;\n\t@ViewChild(\"dataAnim\") dataAnim: ElementRef;\n\tconnectionID: string = UUID();\n\n\tlineCurrX: number = 0;\n\tlineCurrY: number = 0;\n\tlinePrevX: number = 0;\n\tlinePrevY: number = 0;\n\n\ttitlePopupX: number = 0;\n\ttitlePopupY: number = 0;\n\n\tconstructor(private cdRef: ChangeDetectorRef, public selectionService: SelectionService, private viewingService: ViewingService){\n\t\tcdRef.detach();\n\t}\n\n\tngOnInit(): void {\n\t\tthis.cdRef.detectChanges();\n\t\tthis.portComponent1.LogicPort.onRemoveConnection((conn) => {\n\t\t\tif(conn === this.LogicConnection){\n\t\t\t\tthis.destroyComponent();\n\t\t\t\tthis.portComponent1.removeConnection(this);\n\t\t\t}\n\t\t});\n\n\t\tthis.portComponent2.LogicPort.onRemoveConnection((conn) => {\n\t\t\tif(conn === this.LogicConnection){\n\t\t\t\tthis.destroyComponent();\n\t\t\t\tthis.portComponent2.removeConnection(this);\n\t\t\t}    \n\t\t});\n\n\t\tthis.LogicConnection.onSendData((port)=>{\n\t\t\tlet dataSvg = document.createElementNS('http://www.w3.org/2000/svg','circle');\n\t\t\tdataSvg.style.display = \"none\"\n\t\t\tthis.svg.nativeElement.appendChild(dataSvg);\n\t\t\tlet anim = document.createElementNS('http://www.w3.org/2000/svg','animateMotion');\n\t\t\tlet delay = Math.max(this.mainPath.nativeElement.getTotalLength(), 230);\n\n\t\t\tif(this.viewingService.isResponsesHidden() && port !== this.portComponent1.LogicPort){\n\t\t\t\tthis.LogicConnection.getSendDataDelay = () => {return delay}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tanim.setAttribute(\"attributeName\", \"cx\");\n\n\t\t\tanim.setAttribute(\"dur\", `${delay+20}ms`);\n\n\t\t\tanim.setAttribute(\"begin\", \"0\");\n\n\t\t\tanim.setAttribute(\"rotate\", \"auto\");\n\n\t\t\tanim.setAttribute(\"calcMode\", \"linear\");\n\n\t\t\tanim.setAttribute(\"rotate\", \"auto\");\n\n\t\t\tanim.setAttribute(\"path\", this.line);\n\n\t\t\tdataSvg.setAttribute(\"r\",\"5\")\n\t\t\tdataSvg.setAttribute(\"fill\",\"#31B78D\")\n\n\t\t\tif(port !== this.portComponent1.LogicPort){\n\t\t\t\tanim.setAttribute(\"keyPoints\", \"1;0\");\n\t\t\t\tanim.setAttribute(\"keyTimes\", \"0;1\");\n\t\t\t}\n\n\t\t\tdataSvg.appendChild(anim);\n\n\t\t\t(anim as any).beginElement();\n\t\t\tsetTimeout(() => {\n\t\t\t\tdataSvg.style.display = \"block\"\n\t\t\t}, 10)\n\t\t\tsetTimeout(()=>{\n\t\t\t\tdataSvg.remove();\n\t\t\t},delay)\n\n\t\t\tthis.LogicConnection.getSendDataDelay = () => {return delay}\n\t\t});\n\n\t\tthis.selectionService.onDeleteLineBreak.subscribe((e) => { \n\t\t\tthis.cdRef.markForCheck();\n\t\t\tthis.cdRef.detectChanges();\n\t\t\tconsole.log(\"changes\")\n\t\t});\n\t}\n\n\thandleClick(){\n\t\tthis.selectionService.setConnectionSelection(this);\n\t\tlet startX = this.LogicConnection.lineBreaks[0].x;\n\t\tlet startY = this.LogicConnection.lineBreaks[0].y;\n\t\tlet endX = this.LogicConnection.lineBreaks[this.LogicConnection.lineBreaks.length-1].x;\n\t\tlet endY = this.LogicConnection.lineBreaks[this.LogicConnection.lineBreaks.length-1].y;\n\t\tthis.titlePopupX = startX + (endX - startX) / 2 - 60;\n\t\tthis.titlePopupY = startY + (endY - startY) / 2 - 55;\n\t}\n\n\tngAfterViewInit(){\n\t\tthis.portComponent1.addConnection(this);\n\t\tthis.portComponent2.addConnection(this);\n\t\tif(this.LogicConnection.lineBreaks == null || this.LogicConnection.lineBreaks.length === 0){\n\t\t\tthis.LogicConnection.lineBreaks = [\n\t\t\t\tnew LineBreak((this.portComponent1.port.nativeElement.offsetLeft+this.portComponent1.port.nativeElement.clientWidth/2),(this.portComponent1.port.nativeElement.offsetTop+this.portComponent1.port.nativeElement.clientHeight/2)),\n\t\t\t\tnew LineBreak((this.portComponent2.port.nativeElement.offsetLeft+this.portComponent2.port.nativeElement.clientWidth/2),(this.portComponent2.port.nativeElement.offsetTop+this.portComponent2.port.nativeElement.clientHeight/2))\n\t\t\t]\n\t\t}\n\t}\n\n\tdestroySelf = () => {\n\t\tthis.LogicConnection.destroy();\n\t\tthis.destroyComponent();\n\t}\n\n\tdestroyComponent = () => {}\n\n\tngAfterViewChecked(){\n\t\tthis.cdRef.detectChanges();\n\t\tif(this.portComponent1.port && this.portComponent2.port){\n\t\t\tthis.LogicConnection.lineBreaks[0] = \n\t\t\t\tnew LineBreak((this.portComponent1.port.nativeElement.offsetLeft+this.portComponent1.port.nativeElement.clientWidth/2)+0.1,(this.portComponent1.port.nativeElement.offsetTop+this.portComponent1.port.nativeElement.clientHeight/2)+0.1),\n\t\t\tthis.LogicConnection.lineBreaks[this.LogicConnection.lineBreaks.length-1] =\n\t\t\t\tnew LineBreak((this.portComponent2.port.nativeElement.offsetLeft+this.portComponent2.port.nativeElement.clientWidth/2),(this.portComponent2.port.nativeElement.offsetTop+this.portComponent2.port.nativeElement.clientHeight/2))\n\t\t\tthis.line = createRoundedPath(this.LogicConnection.lineBreaks, 10, false);\n\t\t}\n\t}\n\n\tbreakLine(previous: LineBreak, next: LineBreak, event: Event){\n\t\tlet line = new LineBreak(\n\t\t\t(previous.x + next.x)/2,\n\t\t\t(previous.y + next.y)/2);\n\t\tlet index = this.LogicConnection.lineBreaks.findIndex(br => br.x === previous.x && br.y === previous.y);\n\t\tif(index == -1){\n\t\t\treturn;\n\t\t}\n\t\tthis.LogicConnection.lineBreaks.splice(index + 1, 0, line);\n\t\tthis.moveLine(line, event);\n\t}\n\n\tmoveLine(line: LineBreak, event: Event){\n\t\tif(this.selectionService.currentConnectionSelections.length === 0)\n\t\t\tthis.selectionService.setLineBreakSelection(line, this.LogicConnection.lineBreaks);\n\t\tlet index = this.LogicConnection.lineBreaks.findIndex(br => br.x === line.x && br.y === line.y);\n\t\tlet prev = this.LogicConnection.lineBreaks[index-1];\n\t\tlet next = this.LogicConnection.lineBreaks[index+1];\n\t\tlet board = document.getElementById(\"board\");\n\t\tthis.lineCurrX = line.x;\n\t\tthis.lineCurrY = line.y;\n\t\tthis.linePrevX = 0;\n\t\tthis.linePrevY = 0;\n\n\t\tif(event instanceof MouseEvent){\n\t\t\tthis.linePrevX = event.clientX;\n\t\t\tthis.linePrevY = event.clientY;\n\n\t\t\tboard.onmousemove = (e: MouseEvent) => {\n\t\t\t\tthis.lineCurrX = this.lineCurrX - (this.linePrevX - e.clientX) / this.portComponent1.placingService.boardScale;\n\t\t\t\tthis.lineCurrY = this.lineCurrY - (this.linePrevY - e.clientY) / this.portComponent1.placingService.boardScale;\n\t\n\t\t\t\tlet moveX = true;\n\t\t\t\tlet moveY = true;\n\t\n\t\t\t\tconst SNAP_ANGLE = 10;\n\t\n\t\t\t\tlet diffNextX = Math.abs(this.lineCurrX - next.x);\n\t\t\t\tlet diffNextY = Math.abs(this.lineCurrY - next.y);\n\t\t\t\tlet diffPrevX = Math.abs(this.lineCurrX - prev.x);\n\t\t\t\tlet diffPrevY = Math.abs(this.lineCurrY - prev.y);\n\t\t\t\tif(diffNextY < SNAP_ANGLE){\n\t\t\t\t\tline.y = next.y;\n\t\t\t\t\tmoveY = false\n\t\t\t\t}\n\t\t\t\telse if(diffNextX < SNAP_ANGLE){\n\t\t\t\t\tline.x = next.x;\n\t\t\t\t\tmoveX = false;\n\t\t\t\t}\n\t\t\t\tif(diffPrevY < SNAP_ANGLE){\n\t\t\t\t\tline.y = prev.y;\n\t\t\t\t\tmoveY = false;\n\t\t\t\t}\n\t\t\t\telse if(diffPrevX < SNAP_ANGLE){\n\t\t\t\t\tline.x = prev.x;\n\t\t\t\t\tmoveX = false;\n\t\t\t\t}\n\t\t\t\tif(moveX)\n\t\t\t\t\tline.x = this.lineCurrX;\n\t\t\t\tif(moveY)\n\t\t\t\t\tline.y = this.lineCurrY;\n\t\n\t\t\t\tthis.linePrevX = e.clientX;\n\t\t\t\tthis.linePrevY = e.clientY;\n\t\t\t}\n\t\t\twindow.onmouseup = () => {\n\t\t\t\tboard.onmousemove = null;\n\t\t\t\twindow.onmouseup = null;\n\t\t\t}\n\t\t}\n\t\telse if(event instanceof TouchEvent){\n\t\t\tthis.linePrevX = event.touches[0].clientX;\n\t\t\tthis.linePrevY = event.touches[0].clientY;\n\t\t\t\n\t\t\tboard.ontouchmove = (e: TouchEvent) => {\n\t\t\t\tthis.lineCurrX = this.lineCurrX - (this.linePrevX - e.touches[0].clientX) / this.portComponent1.placingService.boardScale;\n\t\t\t\tthis.lineCurrY = this.lineCurrY - (this.linePrevY - e.touches[0].clientY) / this.portComponent1.placingService.boardScale;\n\n\t\t\t\tlet moveX = true;\n\t\t\t\tlet moveY = true;\n\n\t\t\t\tconst SNAP_ANGLE = 10;\n\n\t\t\t\tlet diffNextX = Math.abs(this.lineCurrX - next.x);\n\t\t\t\tlet diffNextY = Math.abs(this.lineCurrY - next.y);\n\t\t\t\tlet diffPrevX = Math.abs(this.lineCurrX - prev.x);\n\t\t\t\tlet diffPrevY = Math.abs(this.lineCurrY - prev.y);\n\t\t\t\tif(diffNextY < SNAP_ANGLE){\n\t\t\t\t\tline.y = next.y;\n\t\t\t\t\tmoveY = false\n\t\t\t\t}\n\t\t\t\telse if(diffNextX < SNAP_ANGLE){\n\t\t\t\t\tline.x = next.x;\n\t\t\t\t\tmoveX = false;\n\t\t\t\t}\n\t\t\t\tif(diffPrevY < SNAP_ANGLE){\n\t\t\t\t\tline.y = prev.y;\n\t\t\t\t\tmoveY = false;\n\t\t\t\t}\n\t\t\t\telse if(diffPrevX < SNAP_ANGLE){\n\t\t\t\t\tline.x = prev.x;\n\t\t\t\t\tmoveX = false;\n\t\t\t\t}\n\t\t\t\tif(moveX)\n\t\t\t\t\tline.x = this.lineCurrX;\n\t\t\t\tif(moveY)\n\t\t\t\t\tline.y = this.lineCurrY;\n\n\t\t\t\tthis.linePrevX = e.touches[0].clientX;\n\t\t\t\tthis.linePrevY = e.touches[0].clientY;\n\t\t\t}\n\t\t\n\t\t\twindow.ontouchend = () => {\n\t\t\t\tboard.ontouchmove = null;\n\t\t\t\twindow.ontouchend = null;\n\t\t\t}\n\t\t}\n\t}\n}\n","<svg #svg *ngIf=\"portComponent1 && portComponent2 && portComponent1.port != null && portComponent2.port != null\" [class.read-only]=\"isReadOnly\">\n\t<linearGradient id=\"linear-{{connectionID}}\" x1=\"0\" y1=\"0\" x2=\"100%\" y2=\"0\">\n\t\t<stop offset=\"0%\"   *ngIf=\"portComponent1.LogicParent.options.X < portComponent2.LogicParent.options.X; else gradElse1\" [attr.stop-color]=\"portComponent1.LogicPort.parent.color\"/>\n\t\t<ng-template #gradElse1>\n\t\t\t<stop offset=\"0%\" [attr.stop-color]=\"portComponent2.LogicPort.parent.color\"/>\n\t\t</ng-template>\n\t\t<stop offset=\"100%\" *ngIf=\"portComponent1.LogicParent.options.X < portComponent2.LogicParent.options.X; else gradElse2\" [attr.stop-color]=\"portComponent2.LogicPort.parent.color\"/>\n\t\t<ng-template #gradElse2>\n\t\t\t<stop offset=\"100%\"  [attr.stop-color]=\"portComponent1.LogicPort.parent.color\"/>\n\t\t</ng-template>\n\t</linearGradient>\n\t<path id=\"conn-{{connectionID}}\" #mainPath class=\"main\" [attr.d]=\"line\" [attr.stroke]=\"'url(#linear-' + connectionID + ')'\"/>\n\t<text text-anchor=\"middle\" class=\"title\">\n\t\t<textPath startOffset=\"50%\" [attr.href]=\"'#conn-' + connectionID\">\n\t\t\t{{LogicConnection.title}}\n\t\t</textPath>\n\t</text>\n\t<g class=\"line-breaks-container\" [class.active]=\"LogicConnection.lineBreaks.includes(selectionService.currentLineBreakSelection)\">\n\t\t<path #secondPath class=\"interactive\"(click)=\"handleClick()\" [attr.d]=\"line\"/>\n\t\t<ng-container *ngFor=\"let break of LogicConnection.lineBreaks; index as i\">\n\t\t\t<circle class=\"break\" [class.is-current-selection]=\"selectionService.currentLineBreakSelection != null && selectionService.currentLineBreakSelection.x === break.x && selectionService.currentLineBreakSelection.y === break.y\" \n\t\t\t\tr=\"6\" *ngIf=\"i > 0 && i < LogicConnection.lineBreaks.length - 1\"\n\t\t\t\t[attr.cx]=\"break.x\" [attr.cy]=\"break.y\"\n\t\t\t\t(mousedown)=\"moveLine(break, $event)\" (touchstart)=\"moveLine(break, $event)\">\n\t\t\t</circle>\n\t\t\t<circle *ngIf=\"i < LogicConnection.lineBreaks.length - 1\" class=\"break-available\" r=\"4\"\n\t\t\t\t[attr.cx]=\"(break.x + LogicConnection.lineBreaks[i+1].x)/2\"\n\t\t\t\t[attr.cy]=\"(break.y + LogicConnection.lineBreaks[i+1].y)/2\"\n\t\t\t\t(mousedown)=\"breakLine(break, LogicConnection.lineBreaks[i+1], $event)\"\n\t\t\t\t(touchstart)=\"breakLine(break, LogicConnection.lineBreaks[i+1], $event)\">\n\t\t\t</circle>\t\t\n\t\t</ng-container>\n\t</g>\n</svg>\n<div *ngIf=\"selectionService.currentConnectionSelection === this\" [style.top.px]=\"titlePopupY\" [style.left.px]=\"titlePopupX\"class=\"title-popup\">\n\t<span>Title: </span>\n\t<input type=\"text\" [(ngModel)]=\"LogicConnection.title\"/>\n</div>\n","import { IDataOperator, ReceiveDataEvent } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { RequestData } from \"./RequestData\";\nimport { Port } from \"./Port\";\nimport { Endpoint, EndpointRef } from \"./Endpoint\";\nimport { sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { HTTPMethod } from \"./enums/HTTPMethod\";\nimport { EventDispatcher, Handler } from \"./Shared/EventDispatcher\";\n\nexport class MessageQueue extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    outputPort: Port;\n    connectionTable: {[id:string]:Connection} = {};\n    options: MessageQueueOptions;\n    roundRobinIndex = 0;\n    isSendingData = false;\n    fillColor = false;\n    color = \"#F2994A\";\n\n    messages: RequestData[] = []\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this, false, true);        \n        this.outputPort = new Port(this, true, true);        \n        this.options = new MessageQueueOptions();\n        this.options.title = \"Message Queue\";\n\n        this.options.endpoints = [\n            new Endpoint(\"MessageQueue\", [HTTPMethod.GET, HTTPMethod.POST, HTTPMethod.PUT, HTTPMethod.DELETE, HTTPMethod.PATCH])\n        ];\n    }\n\n    async receiveData(data: RequestData) {\n        if(data.requestId == \"\" || data.requestId == null )\n            throw new Error(\"requestId can not be null. Please specify property requestId of RequestData\");\n\n\n        // Put data to queue \n        data.header.stream = false;\n        this.messages.push(data);\n        if(!this.isSendingData)\n            this.sendToConsumer();\n\n        this.fireReceiveData(data);\n\n        // Return response to publisher\n        let response = new RequestData();\n        response.responseId = data.requestId;\n        response.requestId = UUID();\n        response.header = data.header;\n        response.origin = data.origin;\n        response.originID = this.originID;\n        // Send response back\n        if(data.sendResponse)\n            await this.inputPort.sendData(response, data.origin);\n    }\n\n    async sendToConsumer(){\n        if(this.messages.length == 0 || this.outputPort.connections.length == 0)\n            return;\n        this.isSendingData = true;\n        await sleep(400);\n\n        let message = this.messages.pop();\n        let epRef = new EndpointRef();\n        epRef.endpoint = new Endpoint(this.options.endpoints[0].url, [HTTPMethod.GET, HTTPMethod.POST, HTTPMethod.PUT, HTTPMethod.PATCH, HTTPMethod.DELETE]);\n        epRef.method = HTTPMethod.POST;\n        message.header.endpoint = epRef;\n        message.sendResponse = false;\n\n        this.sendData(message);\n        this.fireSendData({});\n    \n        if(this.messages.length == 0)\n            this.isSendingData = false;\n        else \n            this.sendToConsumer();\n    }\n\n    async sendData(data: RequestData){\n        data.originID = this.originID;\n        await this.roundRobin(data);\n    }\n\n    async roundRobin(data: RequestData){\n        let connections = this.outputPort.connections\n        .filter(conn => conn.getOtherPort(this.outputPort).parent.getAvailableEndpoints()\n        .find(ep => ep.url === this.options.endpoints[0].url) != null);\n        let nodesLength = connections.length;\n        if(nodesLength === 0){\n            this.messages.push(data);\n            return;\n        }\n        this.fireSendData({});\n        this.roundRobinIndex++;\n        if(this.roundRobinIndex >= nodesLength)\n            this.roundRobinIndex = 0;\n        data.origin = this.outputPort.connections[this.roundRobinIndex];\n        await this.outputPort.sendData(data,data.origin);\n    }\n\n    onConnectionUpdate(wasOutput: boolean = false){\n        this.sendToConsumer();\n    }\n\n    private sendDataDispatcher = new EventDispatcher<ReceiveDataEvent>();\n    public onSendData(handler: Handler<ReceiveDataEvent>) {\n        this.sendDataDispatcher.register(handler);\n    }\n    private fireSendData(event: ReceiveDataEvent) { \n        this.sendDataDispatcher.fire(event);\n    }\n}\n\nexport class MessageQueueOptions extends EndpointOptions{\n}\n\n","import { Renderer2, ViewChild } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { PlacingService } from 'src/app/placing.service';\nimport { SelectionService } from 'src/app/selection.service';\nimport { TextfieldComponent } from '../components/textfield/textfield.component';\n\n@Component({\n\tselector: 'app-optionsmenu',\n\ttemplateUrl: './optionsmenu.component.html',\n\tstyleUrls: ['./optionsmenu.component.scss'],\n})\nexport class OptionsmenuComponent implements OnInit {\n\n\tisActive:boolean;\n\n\topenGeneral: boolean = true;\n\topenProps: boolean = true;\n\topenActions: boolean = true;\n\n\thasActions: boolean = false;\n\n\tmultipleSelectionsTitle: string = \"Title\";\n\n\tmultipleSelectionsX: number;\n\tmultipleSelectionsY: number;\n\tmultipleSelectionsOldX: number;\n\tmultipleSelectionsOldY: number;\n\n\t@ViewChild(\"optionsWrapper\") optionsWrapper;\n\t@ViewChild(\"actionsWrapper\") actionsWrapper;\n\n\tconstructor(public selectionService: SelectionService, private renderer: Renderer2, private placingService: PlacingService) \n\t{\n\t\tselectionService.onChangeSelection( ()=>{\n\t\t\tthis.optionsWrapper.nativeElement.innerHTML = \"\";\n\t\t\tthis.actionsWrapper.nativeElement.innerHTML = \"\";\n\t\t\tthis.multipleSelectionsX = Number.MAX_VALUE;\n\t\t\tthis.multipleSelectionsY = Number.MAX_VALUE;\n\t\t\tif(this.selectionService.currentSelections.length == 0){\n\t\t\t\tthis.isActive = false;\n\t\t\t}\n\t\t\telse if(this.selectionService.currentSelections.length == 1){\n\t\t\t\tlet selection = this.selectionService.currentSelections[0];\n\t\t\t\tthis.isActive = true;\n\n\t\t\t\tlet optionsElement = selection.getOptionsElement();\n\t\t\t\tif(optionsElement)\n\t\t\t\t\tthis.renderer.appendChild(this.optionsWrapper.nativeElement,optionsElement.nativeElement);\n\n\t\t\t\tlet actionsElement = selection.getActionsElement();\n\t\t\t\tif(actionsElement){\n\t\t\t\t\tthis.hasActions = true;\n\t\t\t\t\tthis.renderer.appendChild(this.actionsWrapper.nativeElement,actionsElement.nativeElement);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tthis.hasActions = false;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.isActive = true;\n\t\t\t\tthis.multipleSelectionsTitle = this.selectionService.currentSelections[0].getLogicComponent().options.title;\n\t\t\t\tlet sameTitles = true;\n\t\t\t\tfor(let selection of this.selectionService.currentSelections){\n\t\t\t\t\tlet options = selection.getLogicComponent().options;\n\t\t\t\t\tif(options.X < this.multipleSelectionsX)\n\t\t\t\t\t\tthis.multipleSelectionsX = options.X;\n\t\t\t\t\tif(options.Y < this.multipleSelectionsY)\n\t\t\t\t\t\tthis.multipleSelectionsY = options.Y;\n\t\t\t\t\tif(options.title != this.multipleSelectionsTitle){\n\t\t\t\t\t\tsameTitles = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.multipleSelectionsOldX = this.multipleSelectionsX;\n\t\t\t\tthis.multipleSelectionsOldY = this.multipleSelectionsY;\n\t\t\t\tif(!sameTitles)\n\t\t\t\t\tthis.multipleSelectionsTitle = \"Title\";\n\t\t\t}\n\t\t});\n\t}\n\n\tisSelectionTextField(){\n\t\treturn this.selectionService.currentSelections.length == 1 && this.selectionService.currentSelections[0] instanceof TextfieldComponent;\n\t}\n\t\n\tngOnInit(): void {\n\t}\n\n\tupdateTitles(){\n\t\tfor(let selection of this.selectionService.currentSelections){\n\t\t\tselection.getLogicComponent().options.title = this.multipleSelectionsTitle;\n\t\t}\n\t}\n\n\tupdatePosition(x, y){\n\t\tif(this.selectionService.currentSelections.length == 1){\n\t\t\tx = parseInt(x);\n\t\t\ty = parseInt(y);\n\t\t\tif(x < 0 || x > this.placingService.boardWidth - 40 || y < 0 || y > this.placingService.boardHeight - 40){\n\t\t\t\tfor(let selection of this.selectionService.currentSelections){\n\t\t\t\t\tselection.setPosition(x,y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet realX = Math.max(Math.min(this.multipleSelectionsX, this.placingService.boardWidth - 40), 0);\n\t\t\tlet realY = Math.max(Math.min(this.multipleSelectionsY, this.placingService.boardHeight - 40), 0);\n\t\t\tfor(let selection of this.selectionService.currentSelections){\n\t\t\t\tselection.setPosition(\n\t\t\t\t\tselection.getLogicComponent().options.X + realX - this.multipleSelectionsOldX, \n\t\t\t\t\tselection.getLogicComponent().options.Y + realY - this.multipleSelectionsOldY\n\t\t\t\t); \n\t\t\t}\n\t\t\t\n\t\t\tthis.multipleSelectionsOldX = realX;\n\t\t\tthis.multipleSelectionsOldY = realY;\n\t\t}\n\t}\n}\n","<div class=\"options-menu-window\" [style.display]=\"isActive? 'block' : 'none' \">\n    <div class=\"main\">\n        <div class=\"section\" [class.active]=\"openGeneral\">\n            <div class=\"header\" (click)=\"openGeneral = !openGeneral\">\n                <span class=\"title\">General</span>\n                <span class=\"icon\" *ngIf=\"openGeneral; else closed\">\n                    <i class=\"fas fa-caret-up\"></i>\n                </span>\n                <ng-template #closed>\n                    <span class=\"icon\">\n                        <i class=\"fas fa-caret-down\"></i>\n                    </span>\n                </ng-template>\n            </div>\n            <div class=\"content\" *ngIf=\"isActive && selectionService.currentSelections.length == 1\">\n                <div *ngIf=\"!isSelectionTextField(); else textFieldTitle\">\n                    <span class=\"property-name\">Title:</span>\n                    <input type=\"text\" spellcheck=\"false\" [(ngModel)]=\"selectionService.currentSelections[0].getLogicComponent().options.title\">\n                </div>\n                <ng-template #textFieldTitle>\n                    <div *ngIf=\"isSelectionTextField()\">\n                        <div>\n                            <span class=\"property-name\">Content:</span>\n                            <textarea maxlength=\"250\" type=\"text\" spellcheck=\"false\" [(ngModel)]=\"selectionService.currentSelections[0].getLogicComponent().options.title\"></textarea>\n                        </div>\n                    </div>\n                </ng-template>\n                <div class=\"small\">\n                    <span class=\"property-name\">X:</span>\n                    <input #x (input)=\"updatePosition(x.value, y.value)\" step=\"10\" type=\"number\" min=\"0\" max=\"1960\" [(ngModel)]=\"selectionService.currentSelections[0].getLogicComponent().options.X\">\n                </div>\n                <div class=\"small\">\n                    <span class=\"property-name\">Y:</span>\n                    <input #y (input)=\"updatePosition(x.value, y.value)\" step=\"10\" type=\"number\" min=\"0\" max=\"960\" [(ngModel)]=\"selectionService.currentSelections[0].getLogicComponent().options.Y\">\n                </div>\n            </div>\n            <div class=\"content\" *ngIf=\"isActive && selectionService.currentSelections.length > 1\">\n                <div>\n                    <span class=\"property-name\">Title:</span>\n                    <input type=\"text\" spellcheck=\"false\" (input)=\"updateTitles()\" [(ngModel)]=\"multipleSelectionsTitle\">\n                </div>\n                <div class=\"small\">\n                    <span class=\"property-name\">X:</span>\n                    <input #x (input)=\"updatePosition(multipleSelectionsX, multipleSelectionsY)\" step=\"10\" type=\"number\" min=\"0\" max=\"1960\" [(ngModel)]=\"multipleSelectionsX\">\n                </div>\n                <div class=\"small\">\n                    <span class=\"property-name\">Y:</span>\n                    <input #y (input)=\"updatePosition(multipleSelectionsX, multipleSelectionsY)\" step=\"10\" type=\"number\" min=\"0\" max=\"960\" [(ngModel)]=\"multipleSelectionsY\">\n                </div>\n            </div>\n        </div>\n        <div class=\"section\" [style.display]=\"selectionService.currentSelections.length == 1 ? 'block' : 'none'\" [class.active]=\"openProps\">\n            <div class=\"header\" (click)=\"openProps = !openProps\">\n                <span class=\"title\">Properties</span>\n                <span class=\"icon\" *ngIf=\"openProps; else closed\">\n                    <i class=\"fas fa-caret-up\"></i>\n                </span>\n                <ng-template #closed>\n                    <span class=\"icon\">\n                        <i class=\"fas fa-caret-down\"></i>\n                    </span>\n                </ng-template>\n            </div>\n            <div class=\"content\">\n                <div #optionsWrapper >\n            \n                </div>\n            </div>\n        </div>\n        <div class=\"section\" [class.active]=\"openActions\" [style.display]=\"!hasActions || selectionService.currentSelections.length > 1 ? 'none' : 'block'\">\n            <div class=\"header\" (click)=\"openActions = !openActions\">\n                <span class=\"title\">Actions</span>\n                <span class=\"icon\" *ngIf=\"openActions; else closed\">\n                    <i class=\"fas fa-caret-up\"></i>\n                </span>\n                <ng-template #closed>\n                    <span class=\"icon\">\n                        <i class=\"fas fa-caret-down\"></i>\n                    </span>\n                </ng-template>\n            </div>\n            <div class=\"content\">\n                <div #actionsWrapper >\n                    \n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n","import { ChangeDetectorRef, Component, ComponentFactoryResolver, ElementRef, EventEmitter, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { PlacingService } from \"src/app/placing.service\";\nimport { SelectionService } from \"src/app/selection.service\";\nimport { ViewingService } from \"src/app/viewing.service\";\nimport { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { EndpointOperator } from \"src/models/EndpointOperator\";\nimport { APIType } from \"src/models/enums/APIType\";\nimport { BalancingAlgorithm } from \"src/models/enums/BalancingAlgorithm\";\nimport { DatabaseType } from \"src/models/enums/DatabaseType\";\nimport { gRPCMode } from \"src/models/enums/gRPCMode\";\nimport { EndpointActionHTTPMethod, HTTPMethod } from \"src/models/enums/HTTPMethod\";\nimport { HTTPStatus } from \"src/models/enums/HTTPStatus\";\nimport { LoadBalancerType } from \"src/models/enums/LoadBalancerType\";\nimport { Protocol } from \"src/models/enums/Protocol\";\nimport { ReplacementPolicy } from \"src/models/enums/ReplacementPolicy\";\nimport { WritePolicy } from \"src/models/enums/WritePolicy\";\nimport { Options } from \"src/models/Options\";\nimport { clone, getFormattedMethod } from \"src/shared/ExtensionMethods\";\nimport { PortComponent } from \"../port/port.component\";\nimport { TitleComponent } from \"./title/title.component\";\n\n@Component({\n\ttemplate: '',\n\tqueries: {\n\t\tanchorRef: new ViewChild( \"anchorRef\" ),\n\t\toptionsRef: new ViewChild( \"options\" ),\n\t\tactionsRef: new ViewChild(\"actions\"),\n\t},\n})\nexport abstract class OperatorComponent {\n\n\thasChanged = new EventEmitter();\n\tshowContextMenu = new EventEmitter();\n\n    board: HTMLElement;\n\tcomp: HTMLElement\n\n\tpublic HTTPMethod: typeof HTTPMethod = HTTPMethod;\n\tpublic HTTPMethodKeys = Object.values(HTTPMethod).filter(k => !isNaN(Number(k)));\n\tpublic EndpointActionHTTPMethod: typeof EndpointActionHTTPMethod = EndpointActionHTTPMethod;\n\tpublic EndpointActionHTTPMethodKeys = Object.values(EndpointActionHTTPMethod).filter(k => !isNaN(Number(k)));\n\tpublic Protocol: typeof Protocol = Protocol;\n\tpublic ProtocolKeys = Object.values(Protocol).filter(k => !isNaN(Number(k)));\n\tpublic APIType: typeof APIType = APIType;\n\tpublic APITypeKeys = Object.values(APIType).filter(k => !isNaN(Number(k)));\n\tpublic gRPCMode: typeof gRPCMode = gRPCMode;\n\tpublic gRPCModeKeys = Object.values(gRPCMode).filter(k => !isNaN(Number(k)));\n\tpublic LoadBalancerType: typeof LoadBalancerType = LoadBalancerType;\n\tpublic LoadBalancerTypeKeys = Object.values(LoadBalancerType).filter(k => !isNaN(Number(k)));\n\tpublic BalancingAlgorithm: typeof BalancingAlgorithm = BalancingAlgorithm;\n\tpublic BalancingAlgorithmKeys = Object.values(BalancingAlgorithm).filter(k => !isNaN(Number(k)));\n\tpublic DatabaseType: typeof DatabaseType = DatabaseType;\n\tpublic DatabaseTypeKeys = Object.values(DatabaseType).filter(k => !isNaN(Number(k)));\n\tpublic WritePolicy: typeof WritePolicy = WritePolicy;\n\tpublic WritePolicyKeys = Object.values(WritePolicy).filter(k => !isNaN(Number(k)));\n\tpublic ReplacementPolicy: typeof ReplacementPolicy = ReplacementPolicy;\n\tpublic ReplacementPolicyKeys = Object.values(ReplacementPolicy).filter(k => !isNaN(Number(k)));\n\n\t@ViewChild(\"conn\", { read: ViewContainerRef }) conn: ViewContainerRef;\n\n\tpublic anchorRef!: ElementRef;\n\n\tprivate LogicComponent: IDataOperator;\n\tpublic optionsRef: ElementRef;\n\tpublic actionsRef: ElementRef;\n\tpublic inputPortRef: PortComponent;\n\tpublic outputPortRef: PortComponent;\n\n\tprivate maxX = 0;\n\tprivate maxY = 0;\n\n\tpublic anchorRect: any;\n\n\tpublic isReadOnly = false;\n\n\tpublic beforeOptions: Options;\n\n    constructor(protected placingService: PlacingService, protected selectionService: SelectionService, protected resolver: ComponentFactoryResolver, public cdRef: ChangeDetectorRef, private viewingService: ViewingService) {\n\t\tthis.cdRef.detach();\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis.Init();\n  \t}\n\n\tngOnInit(){\n\t\tthis.cdRef.detectChanges();\n\t}\n\n  \tpublic handleMousedown(event: Event): void {\n\t\tif(this.placingService.isConnecting) \n\t\t\treturn;\n\t\tevent.preventDefault();\n\t\tthis.handleClick(event);\n\t\tthis.placingService.startPlacing();\n\n\t\tthis.anchorRect = this.anchorRef.nativeElement.getBoundingClientRect();\n\t\tthis.maxX = this.placingService.boardWidth;\n\t\tthis.maxY = this.placingService.boardHeight;\n\t\tif(event instanceof MouseEvent){\n\t\t\tif(event.button != 0){\n\t\t\t\tthis.placingService.stopPlacing();\n\t\t\t\tevent.preventDefault();\n\t\t\t\tif(event.button == 2){\n\t\t\t\t\tthis.selectionService.addSelection(this, false);\n\t\t\t\t\tthis.showContextMenu.emit(event);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tthis.selectionService.prevX = event.clientX;\n\t\t\tthis.selectionService.prevY = event.clientY;\n\t\n\t\t\tthis.board.addEventListener( \"mousemove\", this.handleMousemove );\n\t\t\twindow.addEventListener( \"mouseup\", this.handleMouseup );\n\t\t}\n\t\telse if(event instanceof TouchEvent){\n\n\t\t\tthis.selectionService.prevX = event.touches[0].clientX;\n\t\t\tthis.selectionService.prevY = event.touches[0].clientY;\n\t\n\t\t\tthis.board.addEventListener( \"touchmove\", this.handleMousemove );\n\t\t\twindow.addEventListener( \"touchend\", this.handleMouseup );\n\t\t}\n\t}\n\n  \tpublic handleMousemove = (event: Event): void => {\n\t\tthis.selectionService.moveComponents(event, this.placingService.boardScale);\n\t}\n\n\tprivate convertPosition(number){\n\t\treturn Math.round(number / 10) * 10;\n\t}\n\n\tpublic setPosition(x: number, y: number){\n\t\tthis.LogicComponent.options.X = Math.max(Math.min( this.maxX - this.anchorRect.width  / this.placingService.boardScale, this.convertPosition(x)), 0);\n\t\tthis.LogicComponent.options.Y = Math.max(Math.min( this.maxY - this.anchorRect.height / this.placingService.boardScale, this.convertPosition(y)), 0);\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tpublic handleMouseup = (): void => {\n\t\tthis.placingService.stopPlacing();\n\n\t\tthis.board.removeEventListener( \"mousemove\", this.handleMousemove );\n\t\twindow.removeEventListener( \"mouseup\", this.handleMouseup );\n\n\t\tif(this.beforeOptions.X !== this.LogicComponent.options.X || this.beforeOptions.Y !== this.LogicComponent.options.Y){\n\t\t\tthis.afterChange();\n\t\t}\t\t\n\t}\n\n\tpublic handleClick(event: Event){\n\t\tif(event instanceof MouseEvent || event instanceof TouchEvent)\n\t\t\tthis.selectionService.addSelection(this, event.ctrlKey);\n\t}\n\n\tpublic getLogicComponent(): IDataOperator{\n\t\treturn null;\n\t}\n\n\tpublic getPortComponent(getOutput = false){\n\t\tif(getOutput && this.outputPortRef != null)\n\t\t\treturn this.outputPortRef.getPortComponent();\n\t\telse if(!getOutput && this.inputPortRef != null)\n\t\t\treturn this.inputPortRef.getPortComponent();\n\t\treturn null;\n\t}\n\n\tpublic onViewInit = [];\n\n\t/**\n\t * \n\t * @returns options element, null if component doesn't have any options\n\t */\n\tpublic getOptionsElement(): ElementRef{\n\t\treturn this.optionsRef;\n\t}\n\n\t/**\n\t * \n\t * @returns actions element, null if component doesn't have any actions\n\t */\n\tpublic getActionsElement(): ElementRef{\n\t\treturn this.actionsRef;\n\t}\n\n\tdestroyComponent = () => {}\n\n\tchangeTitle(title: string){\n\t\tthis.LogicComponent.options.title = title;\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tshowStatusCode(code: HTTPStatus){\n\t\tlet span = document.createElement(\"span\");\n\t\tspan.classList.add(\"status-code-side\");\n\t\tlet type: string;\n\t\tif(code >= 0 && code < 1000){ // Classic status codes \n\t\t\tif(code >= 100 && code < 200)\n\t\t\t\ttype = \"info\";\n\t\t\telse if(code >= 200 && code < 300)\n\t\t\t\ttype = \"success\";\n\t\t\telse if(code >= 300 && code < 400)\n\t\t\t\ttype = \"warning\";\n\t\t\telse if(code >= 400 && code < 500)\n\t\t\t\ttype = \"error\";\n\t\t\telse\n\t\t\t\ttype = \"error\";\n\t\t\tspan.innerHTML = `<span class=\"code ${type}\">${code}</span><br/>${HTTPStatus[code]}`;\n\t\t}\n\t\telse if(code >= 1000 && code < 2000){ // Cache status codes\n\t\t\tif(code == 1200)\n\t\t\t\tspan.innerHTML = `<span class=\"code success\">HIT</span>`;\n\t\t\telse if(code == 1404)\n\t\t\t\tspan.innerHTML = `<span class=\"code error\">MISS</span>`;\n\t\t}\n\t\tthis.anchorRef.nativeElement.appendChild(span);\n\t\tsetTimeout(() => {\n\t\t\tthis.anchorRef.nativeElement.removeChild(span);\n\t\t\tthis.cdRef.detectChanges();\n\t\t}, 1500);\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tdestroySelf = () => {\n\t\tthis.LogicComponent.destroy();\n\t\tthis.destroyComponent();\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tsetReceiveDataAnimation(){\n\t\tif(this.viewingService.isPerformanceMode())\n\t\t\treturn;\n\t\tif(!this.comp.classList.contains(\"anim\")){\n\t\t\tthis.comp.classList.add(\"anim\");\n\t\t\tsetTimeout(()=>{\n\t\t\t\tthis.comp.classList.remove(\"anim\");\n\t\t\t},500);\n\t\t}\n\t}\n\n\tInit(generateTitle: boolean = true): void {\n\t\tthis.LogicComponent = this.getLogicComponent();\n\t\tthis.board = document.getElementById(\"board\");\n\t\tthis.comp = this.anchorRef.nativeElement;\n\t\tthis.comp.classList.add(\"component\");\n\t\tif(this.LogicComponent.fillColor){\n\t\t\tthis.comp.style.backgroundColor = this.LogicComponent.color;\n\t\t}\n\t\telse{\n\t\t\tthis.comp.classList.add(\"bordered\")\n\t\t\tArray.from(this.comp.getElementsByClassName(\"img\")).forEach(el => {\n\t\t\t\t(el as HTMLElement).style.backgroundColor = this.LogicComponent.color;\n\t\t\t});\n\t\t\tthis.comp.style.border = \"2px solid \" + this.LogicComponent.color;\n\t\t}\n\t\tif(this.isReadOnly)\n\t\t\tthis.comp.classList.add(\"read-only\")\n\n\t\tthis.anchorRect = this.anchorRef.nativeElement.getBoundingClientRect();\n\t\tthis.maxX = this.placingService.boardWidth;\n\t\tthis.maxY = this.placingService.boardHeight;\n\n\t\n\n\t\tthis.LogicComponent.onShowStatusCode((code:HTTPStatus)=>{\n\t\t\tthis.showStatusCode(code);\n\t\t});\n\n\t\tthis.LogicComponent.onReceiveData((data) => {\n\t\t\tthis.setReceiveDataAnimation();\n    \t});\n\n\t\tthis.LogicComponent.onFailedConnect((data) => {\n\t\t\tthis.placingService.showSnack(data.message);\n    \t});\n\n\t\tthis.beforeOptions = clone(this.LogicComponent.options);\n\n\t\tlet inputPort = this.LogicComponent[\"inputPort\"];\n\t\tlet outputPort = this.LogicComponent[\"outputPort\"];\n\n\t\tif(this.conn == null){\n\t\t\tthis.cdRef.detectChanges();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tif(generateTitle)\n\t\t\tthis.generateTitle();\n\n\n\t\tif(inputPort != null)\n\t\t\tthis.createPort(false);\n\t\tif(outputPort != null)\n\t\t\tthis.createPort(true);\n\t\tthis.onViewInit.forEach(e => e());\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tcreatePort(output = false){\n\t\tlet factory  = this.resolver.resolveComponentFactory(PortComponent);\n\t\tlet ref = this.conn.createComponent(factory);\n\n\t\tref.instance.IsOutput = output;\n\t\tref.instance.LogicParent = this.LogicComponent;\n\t\tref.instance.IsReadOnly = this.isReadOnly;\n\t\tref.instance.LogicPort = this.LogicComponent[output ? \"outputPort\" : \"inputPort\"];\n\n\t\tref.instance.destroySelf = () => {\n\t\t\tref.destroy();\n\t\t}\n\n\t\tref.location.nativeElement.classList.add(output ? \"right\" : \"left\");\n\n\t\tif(output)\n\t\t\tthis.outputPortRef = ref.instance;\n\t\telse\n\t\t\tthis.inputPortRef = ref.instance;\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tgenerateTitle(){\n\t\tlet factory  = this.resolver.resolveComponentFactory(TitleComponent);\n\t\tlet ref = this.conn.createComponent(factory);\n\t\t\n\t\tref.instance.Model = this.LogicComponent;\n\t\tthis.cdRef.detectChanges();\n\t}\n\n\tformatMethod(method: HTTPMethod, isDatabase: boolean){\n\t\treturn getFormattedMethod(method, isDatabase);\n\t}\n\n\tafterChange = () => {\n\t\tthis.hasChanged.emit();\n\t\tthis.beforeOptions = clone(this.LogicComponent.options);\n\t}\n\t\n\tstatic getColor(): string{\n\t\treturn \"#6059DF\";\n\t}\n}","import { Component } from '@angular/core';\nimport { ViewingService } from './viewing.service';\n\n@Component({\n\tselector: 'app-root',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \ttitle = 'PanekMP2023';\n\tconstructor(private viewingService: ViewingService){\n\t\tif(viewingService.isDarkMode())\n\t\t\tdocument.documentElement.classList.add(\"dark-mode\");\n\t}\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Endpoint } from 'src/models/Endpoint';\nimport { HTTPMethod } from 'src/models/enums/HTTPMethod';\nimport { PubSub } from 'src/models/PubSub';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'pubsub',\n\ttemplateUrl: './pubsub.component.html',\n  \tstyleUrls: ['./pubsub.component.scss']\n})\nexport class PubsubComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicPubSub : PubSub = new PubSub();\n\n\taddEndpoint(){\n\t\tthis.LogicPubSub.options.endpoints.push(new Endpoint(\"topic.topicCreated\", [HTTPMethod.GET, HTTPMethod.POST, HTTPMethod.PUT, HTTPMethod.PATCH, HTTPMethod.DELETE]));\n\t\tthis.afterChange();\n\t}\n\n\tremoveEndpoint(endpoint: Endpoint){\n\t\tlet idx = 0;\n\t\tfor(let ep of this.LogicPubSub.options.endpoints){\n\t\t\tif(ep === endpoint){\n\t\t\t\tthis.LogicPubSub.options.endpoints.splice(idx,1);\n\t\t\t\tthis.afterChange();\n\t\t\t\treturn;\n\t\t\t} \n\t\t\tidx++;\n\t\t}\t\n\t}\n\t\n\thandleEndpointUrlChange(endpoint){\n\t\tif(endpoint.url == null || endpoint.url.replace(/\\s/g,\"\") == \"\")\n\t\t\tendpoint.url = `topic`;\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicPubSub;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new PubSub();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicPubSub.options.X\"\n[style.top.px]=\"LogicPubSub.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/pubsub.svg\">\n    </div>   \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div class=\"options-container\">\n            <div class=\"options-endpoints-container\">\n                <div class=\"options-endpoints-top\">\n                    <span class=\"property-name\">Topics: <info-tooltip [Message]=\"'List of available topics the PubSub can publish data to.'\"></info-tooltip></span>\n                    <span class=\"button-icon\" (click)=\"addEndpoint()\"><i class=\"fas fa-plus\"></i></span>\n                </div>\n                <div class=\"options-endpoints\">\n                    <div class=\"options-endpoint\" *ngFor=\"let endpoint of this.LogicPubSub.options.endpoints\">\n                        <input (change)=\"afterChange()\" (blur)=\"handleEndpointUrlChange(endpoint)\" class=\"endpoint-url\" type=\"text\" spellcheck=\"false\" [(ngModel)]=\"endpoint.url\" placeholder=\"url\">\n                        <span class=\"button-icon remove-endpoint\" (click)=\"removeEndpoint(endpoint)\"><i class=\"fas fa-minus\"></i></span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","export enum HTTPStatus{\n    \"Switching Protocol\" = 101,\n    \"OK\" = 200,\n    \"Created\" = 201,\n    \"Bad Request\" = 400,\n    \"Not Found\" = 404,\n    \"Method Not Allowed\" = 405,\n    \"Too Many Requests\" = 429,\n    \"Internal Server Error\" = 500,\n    \"Service Unavailable\" = 503,\n    \"Cache Hit\" = 1200,\n    \"Cache Miss\" = 1404\n}","import { Injectable } from '@angular/core';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\nimport { API } from 'src/models/API';\nimport { APIGateway } from 'src/models/APIGateway';\nimport { Cache } from 'src/models/Cache';\nimport { Client } from 'src/models/Client';\nimport { ClientCluster } from 'src/models/ClientCluster';\nimport { CloudStorage } from 'src/models/CloudStorage';\nimport { Database } from 'src/models/Database';\nimport { LoadBalancer } from 'src/models/LoadBalancer';\nimport { MessageQueue } from 'src/models/MessageQueue';\nimport { Options } from 'src/models/Options';\nimport { Port } from 'src/models/Port';\nimport { Proxy } from 'src/models/Proxy';\nimport { PubSub } from 'src/models/PubSub';\nimport { TextField } from 'src/models/TextField';\nimport { WebServer } from 'src/models/WebServer';\nimport { CDN } from 'src/models/CDN';\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class SavingService {\n\n\tLOCALSTORAGE_AUTOSAVE_KEY = \"board_autosave\";\n\tLOCALSTORAGE_BOARDS_KEY = \"all_saved_boards\";\n\tsystemName: string = \"Untitled system\";\n\n\ttypes = {\n\t\tAPI,\n\t\tAPIGateway,\n\t\tClient,\n\t\tCache,\n\t\tCloudStorage,\n\t\tDatabase,\n\t\tLoadBalancer,\n\t\tMessageQueue,\n\t\tPubSub,\n\t\tWebServer,\n\t\tTextField,\n\t\tProxy,\n\t\tClientCluster,\n\t\tCDN\n\t}\n\n\t/**\n\t * Dictionary of names that are converted to 1-3 letter names\n\t */\n\t optimizedBoardNames = {\n\t\tt: \"type\",\n\t\ti: \"id\",\n\t\ttt: \"title\",\n\t\to: \"options\",\n\t\tp: \"protocol\",\n\t\tc: \"connections\",\n\t\tes: \"endpoints\",\n\t\te: \"endpoint\",\n\t\teR: \"endpointRef\",\n\t\tu: \"url\",\n\t\tsM: \"supportedMethods\",\n\t\tm: \"method\",\n\t\tas: \"actions\",\n\t\tgM: \"grpcMode\",\n\t\tiCn: \"isConsumer\",\n\t\tiSb: \"isSubscriber\",\n\t\trEp: \"restEndpoints\",\n\t\trpEp: \"rpcEndpoints\",\n\t\tgEp: \"graphqlEndpoints\",\n\t\tgpEp: \"grpcEndpoints\",\n\t\twEp: \"websocketsEndpoints\",\n\t\tag: \"algorithm\",\n\t\trPl: \"replacementPolicy\",\n\t\twPl: \"writePolicy\",\n\t\tw: \"width\",\n\t\th: \"height\",\n\t\tfS: \"fontSize\",\n\t\tiB: \"isBold\",\n\t\tiI: \"isItalic\",\n\t\tiMs: \"isMasterShard\",\n\t\tiS: \"isShard\",\n\t\tbg: \"backgroundColor\",\n\t\tco: \"color\",\n\t\ta: \"asynchronous\",\n\t\tpf: \"performance\",\n\t\toR: \"outputRate\"\n\t};\n\n\t/**\n\t * Dictionary of types that are converted to 1-3 letter names\n\t */\n\toptimizedComponentTypes = {\n\t\tA: \"API\",\n\t\tAG: \"APIGateway\",\n\t\tC: \"Client\",\n\t\tCC: \"ClientCluster\",\n\t\tCA: \"Cache\",\n\t\tCS: \"CloudStorage\",\n\t\tD: \"Database\",\n\t\tLB: \"LoadBalancer\",\n\t\tMQ: \"MessageQueue\",\n\t\tP: \"Proxy\",\n\t\tPS: \"PubSub\",\n\t\tTF: \"TextField\",\n\t\tWS: \"WebServer\",\n\t\tCD: \"CDN\"\n\t};\n\n\tconstructor() { }\n\n\tgetBoardSave(allLogicComponents: IDataOperator[], systemName: string, id: string){\n\t\tlet jsonReadyComponents = [];\n\t\tfor(let component of allLogicComponents){\n\t\t\ttry{ \n\t\t\t\tlet jsonReadyComponent: any = {};\n\t\t\t\tjsonReadyComponent.type = this.getComponentType(component);\n\t\t\t\tjsonReadyComponent.id = component.originID.slice(0, 6);\n\t\t\t\tjsonReadyComponent.options = this.cloneOptions(component.options);\n\t\t\t\tjsonReadyComponent.connections = [];\n\t\t\t\tlet inputPort = component.getPort(false);\n\t\t\t\tif(inputPort != null){ // Get all connections from inputPort to JSON ready form\n\t\t\t\t\tfor(let connection of inputPort.connections){\n\t\t\t\t\t\tlet jsonReadyConnection: any = {};\n\t\t\t\t\t\tjsonReadyConnection.from = jsonReadyComponent.id;\n\t\t\t\t\t\tlet connectedComponent = connection.getOtherPort(inputPort).parent;\n\t\t\t\t\t\tjsonReadyConnection.to = connectedComponent.originID.slice(0, 6);\n\t\t\t\t\t\tjsonReadyComponent.connections.push(jsonReadyConnection);\n\t\t\t\t\t\tif(connection.lineBreaks != null && connection.lineBreaks.length != 2)\n\t\t\t\t\t\t\tjsonReadyConnection.lineBreaks = connection.lineBreaks;\n\t\t\t\t\t\tif(connection.title)\n\t\t\t\t\t\t\tjsonReadyConnection.title = connection.title;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tjsonReadyComponents.push(jsonReadyComponent);\n\t\t\t}\n\t\t\tcatch(e){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\treturn \t{\n\t\t\tname: systemName, \n\t\t\tid: id || \"\",\n\t\t\tcomponents: jsonReadyComponents\n\t\t}\n\t}\n\n  \tgetBoardJson(allLogicComponents: IDataOperator[], systemName: string, id: string){\n\t\tlet jsonReadySave = this.getBoardSave(allLogicComponents, systemName, id);\n\t\treturn JSON.stringify(jsonReadySave);\n\t}\n\n\t/**\n\t * Takes in array of components that was made by getBoardSave method\n\t */\n\tgetComponentsFromSave(save: any[]): IDataOperator[]{\n\t\tlet components = [];\n\t\tlet outputsTable = {}\n\t\tlet connectionTable = []\n\t\tfor(let component of save){\n\t\t\tlet logicComponent: IDataOperator = new this.types[component.type];\n\n\t\t\tfor(let key of Object.keys(component.options)){\n\t\t\t\tlogicComponent.options[key] = component.options[key];\n\t\t\t}\n\t\t\tif(component instanceof Database && component.options.isMasterShard){\n\t\t\t\tcomponent.outputPort = new Port(component, true, true);\n\t\t\t}\n\t\t\tlet outputPort = logicComponent.getPort(true);\n\t\t\tlet inputPort = logicComponent.getPort(false);\n\t\t\tif(outputPort){\n\t\t\t\toutputsTable[component.id] = logicComponent;\n\t\t\t}\n\t\t\tif(inputPort){\n\t\t\t\tlet connection: any = {};\n\t\t\t\tconnection.component = logicComponent;\n\t\t\t\tconnection.id = logicComponent.originID;\n\t\t\t\tconnection.to = component.connections;\n\t\t\t\tconnectionTable.push(connection);\n\t\t\t}\n\t\t\tcomponents.push(logicComponent);\n\t\t}\n\t\tfor(let connection of connectionTable){\n\t\t\tconnection.to.filter(con => con.isFromOutput == null || !con.isFromOutput).forEach(con => {\n\t\t\t\tif(outputsTable[con.to]){\n\t\t\t\t\tlet logicConnection = connection.component.connectTo(outputsTable[con.to], false, true);\n\t\t\t\t\tlogicConnection.lineBreaks = con.lineBreaks;\n\t\t\t\t\tlogicConnection.title = con.title;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn components;\n\t}\n\n\tpublic getComponentType(component: any){ \n\t\treturn Object.keys(this.types).find(type => component instanceof this.types[type]) || \"Client\";\n\t}\n\n\tsave(allLogicComponents: IDataOperator[], id: string){\n\t\tlocalStorage.setItem(this.LOCALSTORAGE_AUTOSAVE_KEY, this.getBoardJson(allLogicComponents, this.systemName, id));\n\t}\n\n\tgetLatestBoardJson(){\n\t\treturn localStorage.getItem(this.LOCALSTORAGE_AUTOSAVE_KEY);\n\t}\n\n\tgetSavedBoardsJson(){\n\t\treturn localStorage.getItem(this.LOCALSTORAGE_BOARDS_KEY);\n\t}\n\n\tgetOptimizedBoard(allLogicComponents: IDataOperator[]){\n\t\tlet save = this.getBoardSave(allLogicComponents, \"\", \"\");\n\t\tif(save.id)\n\t\t\tdelete save.id; // Save ID is unnecessary\n\t\tfor(let component of save.components){\n\t\t\tcomponent.i = component.id.slice(0, 5);  // Slicing ID's to only 5 characters\n\t\t\tdelete component.id;\n\t\t\tcomponent.t = Object.keys(this.optimizedComponentTypes).find(\n\t\t\t\tkey => this.optimizedComponentTypes[key] == component.type\n\t\t\t); // Optimize type\n\t\t\tdelete component.type;\n\t\t\tlet optimizedConnections = []\n\t\t\tfor(let connection of component.connections){ \n\t\t\t\tlet con = [connection.from.slice(0, 5), connection.to.slice(0, 5),]\n\t\t\t\tif(connection.lineBreaks || connection.title)\n\t\t\t\t\tcon.push(connection.lineBreaks || []);\n\t\t\t\tif(connection.title)\n\t\t\t\t\tcon.push(connection.title);\n\t\t\t\toptimizedConnections.push(con);\n\t\t\t}\n\t\t\tif(optimizedConnections.length == 0)\n\t\t\t\tdelete component.connections\n\t\t\telse{\n\t\t\t\tcomponent.c = optimizedConnections;\n\t\t\t\tdelete component.connections;\n\t\t\t}\n\t\t\tcomponent.o = this.cloneOptionsOptimized(component.options);\n\t\t\tdelete component.options;\n\t\t}\n\t\tlet saveJson = save.components;\n\t\treturn saveJson;\n\t}\n\n\tgetOptimizedBoardJson(allLogicComponents: IDataOperator[]){\n\t\treturn JSON.stringify(this.getOptimizedBoard(allLogicComponents));\n\t}\n\n\t/**\n\t * Takes in optimized save string that was made by getOptimizedBoardSave method\n\t */\n\tgetSaveFromOptimizedSave(save: any){\n\t\tfor(let component of save){\n\t\t\tcomponent.type = this.optimizedComponentTypes[component.t]\n\t\t\tcomponent.options = this.getOptionsFromOptimized(component.o);\n\t\t\tcomponent.id = component.i;\n\t\t\tlet normalConnections = []\n\t\t\tif(component.c != null){\n\t\t\t\tfor(let connection of component.c){ \n\t\t\t\t\tlet normalConnection: any =\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfrom: connection[0],\n\t\t\t\t\t\t\tto: connection[1],\n\t\t\t\t\t\t}\n\t\t\t\t\tif(connection.length > 2)\n\t\t\t\t\t\tnormalConnection.lineBreaks = connection[2];\n\t\t\t\t\tif(connection.length > 3)\n\t\t\t\t\t\tnormalConnection.title = connection[3];\n\t\t\t\t\tnormalConnections.push(normalConnection);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcomponent.connections = normalConnections;\n\t\t\tdelete component.o;\n\t\t\tdelete component.i;\n\t\t\tdelete component.c;\n\t\t\tdelete component.t;\n\t\t}\n\t\treturn save;\n\t}\n\n\t/**\n\t * Saves array of save objects from getBoardSave method\n\t */\n\tsaveBoards(boards: any[]){\n\t\tlocalStorage.setItem(this.LOCALSTORAGE_BOARDS_KEY, JSON.stringify(boards));\n\t}\n\n\t\n\t/**\n\t * Returns new object that represents options of given component normalized for saving\n\t */\n\tprivate cloneOptions(options: Options): any {\n\t\tvar cloneObj = new (options.constructor as any);\n\t\tfor (var attribut in options) {\n\t\t\tif(options[attribut] != null && options[attribut].endpoint != null && options[attribut].method != null){\n\t\t\t\tcloneObj[attribut] = {\n\t\t\t\t\tendpoint: {url: options[attribut].endpoint.url, supportedMethods: options[attribut].endpoint.supportedMethods },\n\t\t\t\t\tmethod: options[attribut].method\n\t\t\t\t};\n\t\t\t\tif(options[attribut].asynchronous === true){\n\t\t\t\t\tcloneObj[attribut].asynchronous = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (typeof options[attribut] === \"object\" && options[attribut] != null)\n\t\t\t\tcloneObj[attribut] = this.cloneOptions(options[attribut]);\n\t\t\telse\n\t\t\t\tcloneObj[attribut] = options[attribut];\n\t\t}\n\t\treturn cloneObj;\n\t}\n\n\tcloneOptionsOptimized(options: any){\n\t\tvar cloneObj = new (options.constructor as any);\n\t\tfor (var attribut in options) {\n\t\t\tlet opt = Object.keys(this.optimizedBoardNames).find(\n\t\t\t\tkey => this.optimizedBoardNames[key] === attribut\n\t\t\t); // Optimize type\n\t\t\tif(opt){\n\t\t\t\tif (typeof options[attribut] === \"object\" && options[attribut] != null)\n\t\t\t\t\tcloneObj[opt] = this.cloneOptionsOptimized(options[attribut]);\n\t\t\t\telse\n\t\t\t\t\tcloneObj[opt] = options[attribut];\n\t\t\t\tdelete cloneObj[attribut];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (typeof options[attribut] === \"object\" && options[attribut] != null)\n\t\t\t\t\tcloneObj[attribut] = this.cloneOptionsOptimized(options[attribut]);\n\t\t\t\telse\n\t\t\t\t\tcloneObj[attribut] = options[attribut];\n\t\t\t}\n\t\t}\n\t\treturn cloneObj;\n\t}\n\n\tgetOptionsFromOptimized(options: any){\n\t\tlet cloneObj = new (options.constructor as any);\n\t\tfor (var attribut in options) {\n\t\t\tlet opt = this.optimizedBoardNames[attribut]\n\t\t\tif(opt){\n\t\t\t\tif (typeof options[attribut] === \"object\" && options[attribut] != null)\n\t\t\t\t\tcloneObj[opt] = this.getOptionsFromOptimized(options[attribut]);\n\t\t\t\telse\n\t\t\t\t\tcloneObj[opt] = options[attribut];\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif (typeof options[attribut] === \"object\" && options[attribut] != null)\n\t\t\t\t\tcloneObj[attribut] = this.getOptionsFromOptimized(options[attribut]);\n\t\t\t\telse\n\t\t\t\t\tcloneObj[attribut] = options[attribut];\n\t\t\t}\n\n\t\t}\n\t\treturn cloneObj;\n\t}\n}","import { IDataOperator, ReceiveDataEvent } from \"src/interfaces/IDataOperator\";\nimport { sleep } from \"src/shared/ExtensionMethods\";\nimport { Connection } from \"./Connection\";\nimport { RequestData } from \"./RequestData\";\nimport { EventDispatcher, Handler } from \"./Shared/EventDispatcher\";\n\ninterface RemoveConnectionEvent { }\n\nexport class Port{\n    connections: Connection[] = [];\n    parent: IDataOperator;\n    isOutput:boolean;\n    hasMultipleConnections:boolean;\n\n    /**\n     * \n     * @param parent: parent of port\n     */\n    constructor(parent: IDataOperator, isOutput: boolean = false, hasMultipleConnections: boolean = false) {\n        this.parent = parent;\n        this.isOutput = isOutput;\n        this.hasMultipleConnections = hasMultipleConnections;\n    }\n\n    /**\n     * sendData: sends data to connection property\n     */\n    public async sendData(data: RequestData, target: Connection = null) {\n        if(this.connections.length == 0) \n            return false;\n        if(this.hasMultipleConnections){\n            if(target == null)\n                await this.connections[0].sendData(data, this);\n            else{\n                let idx = this.connections.indexOf(target);\n                if(idx == -1) \n                    return false;\n                await this.connections[idx].sendData(data, this);\n            }\n        }\n        else{\n            if(this.connections.length > 0)\n                await this.connections[0].sendData(data, this);\n        }\n        return true;\n    }\n\n    /**\n     * receiveData: sends data received from connection to parent property\n     */\n    public async receiveData(data: RequestData, delay: number = 180) {\n        await sleep(delay);\n        await this.parent.receiveData(data,this.isOutput);\n    }\n\n    /**\n     * connectTo: connects this port to given port via Connection class\n     */\n    public connectTo(port: Port) : Connection {\n        if(!this.isConnectedTo(port)){\n            if(this.hasMultipleConnections){\n                let connection = new Connection(this, port);\n                this.connections.push(connection);\n                port.connectWith(connection);\n                this.parent.onConnectionUpdate(this.isOutput);\n                return connection;\n            }\n            else{\n                let connection = new Connection(this, port);\n                this.removeConnections(false);\n                this.connections  = [connection];\n                port.connectWith(connection); \n                this.parent.onConnectionUpdate(this.isOutput);\n                return connection;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * connectWith: connects this port to given connection\n     */\n    public connectWith(connection: Connection) {\n        if(this.hasMultipleConnections){\n            this.connections.push(connection);\n        }\n        else{\n            this.removeConnections(false);\n            this.connections = [connection];\n        }\n        this.parent.onConnectionUpdate(this.isOutput);\n    }\n\n    public removeConnection(connection: Connection, removeFromOther:boolean = false, triggerOnRemove:boolean = true){\n        let connectionIndex = 0;\n        let hasConnection = false;\n        for(let connected of this.connections){\n            if(connection === connected){\n                hasConnection=true;\n                break;\n            }\n            connectionIndex++;\n        }\n        if(hasConnection){\n            this.fireRemoveConnection(this.connections[connectionIndex]);\n            if(removeFromOther)this.connections[connectionIndex].getOtherPort(this).removeConnection(this.connections[connectionIndex]);\n            this.connections.splice(connectionIndex,1);\n        }\n        if(triggerOnRemove)\n            this.parent.onConnectionUpdate(this.isOutput);\n    }\n\n    public removeConnections(triggerOnRemove = true){\n        let removed = this.connections.length > 0;\n        while(this.connections.length > 0){\n            this.removeConnection(this.connections[0], true, false);\n        }\n        if(triggerOnRemove && removed)\n            this.parent.onConnectionUpdate(this.isOutput);\n    }\n\n    /**\n     * isConnectedTo: returns true if connected to given port via Connection\n     */\n    public isConnectedTo(port: Port) : boolean {\n        for(let connection of this.connections){\n            if(connection.getOtherPort(this) === port) \n                return true;\n        }\n        return false;\n    }\n\n    private removeConnectionDispatcher = new EventDispatcher<RemoveConnectionEvent>();\n    public onRemoveConnection(handler: Handler<RemoveConnectionEvent>) {\n        this.removeConnectionDispatcher.register(handler);\n    }\n    private fireRemoveConnection(event: RemoveConnectionEvent) { \n        this.removeConnectionDispatcher.fire(event);\n    }\n\n    protected dropRequestDispatcher = new EventDispatcher<ReceiveDataEvent>();\n    public onDropRequest(handler: Handler<ReceiveDataEvent>) {\n        this.dropRequestDispatcher.register(handler);\n    }\n    public fireDropRequest(event: ReceiveDataEvent) { \n        this.dropRequestDispatcher.fire(event);\n    }\n}","export enum WritePolicy {\n    \"Write-Through\",\n    \"Write-Back (Behind)\"\n}","export enum LoadBalancerType {\n    \"Layer 7\",\n    \"Layer 4\"\n}","import { Injectable } from '@angular/core';\n\nclass Change {\n\t/**\n\t * Json state of board\n\t */\n\tBoard: any;\n\n\tconstructor(Board: any) {\n\t\tthis.Board = Board;\n\t}\n}\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class ChangesService {\n\n\tprivate undoStack: Change[] = [];\n\tprivate redoStack: Change[] = [];\n\n  \tconstructor() { }\n\n\t/**\n\t * Push the state of the board to undo stack\n\t */\n\tpublic pushChange(state: string){\n\t\tif(state == null)\n\t\t\treturn;\n\t\tlet change = new Change(state);\n\t\tthis.undoStack.push(change);\n\t\tthis.redoStack = [];\n\t}\n\n\t/**\n\t * Returns the json state of board\n\t */\n\tpublic getUndo(currentState: string){\n\t\tlet change = this.undoStack.pop();\n\t\tif(change == null)\n\t\t\treturn null;\n\t\tthis.redoStack.push(new Change(currentState));\n\t\treturn change.Board;\n\t}\n\n\t/**\n\t * Returns the json state of board\n\t */\n\tpublic getRedo(): any{\n\t\tlet change = this.redoStack.pop();\n\t\tif(change == null)\n\t\t\treturn null;\n\t\treturn change.Board;\n\t}\n\n\t/**\n\t * Resets all changes \n\t */\n\tpublic reset(){\n\t\tthis.redoStack = [];\n\t\tthis.undoStack = [];\n\t}\n}\n","<header>\n    <nav class=\"nav\">\n        <ul class=\"nav-list\">\n            <li>\n                <input (input)=\"onNameChange()\" [(ngModel)]=\"name\" spellcheck=\"false\" autocomplete=\"off\" type=\"text\" class=\"navbar-name\" id=\"navbar-name\" />\n            </li>\n            <li>\n                <button mat-icon-button [matMenuTriggerFor]=\"fileMenu\" aria-label=\"File menu\">\n                    File\n                </button>\n                <mat-menu #fileMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"showConfirmDialog('Do you really want to create a new file?', newFileDialog )\">\n                        <span>New file</span>\n                    </button>\n                    <button mat-menu-item (click)=\"openSaveFile()\">\n                        <span>Save file</span>\n                    </button>\n                    <label class=\"file-form\" mat-menu-item class=\"custom-file-upload\">\n                        <input #file (input)=\"load(file)\" type=\"file\" accept=\".json\" style=\"position: absolute;width: 100%;height: 100%;opacity: 0;cursor: pointer;right: 0;z-index: 100;\">\n                        Load file\n                    </label>\n                    <button mat-menu-item (click)=\"showSaved.emit(name)\">\n                        <span>Show saved boards</span>\n                    </button>\n                    <hr class=\"line\">\n                    <button mat-menu-item (click)=\"save.emit(name)\">\n                        <span>Save</span>\n                    </button>\n                    <hr class=\"line\">\n                    <button mat-menu-item mat-icon-button [matMenuTriggerFor]=\"exportMenu\" aria-label=\"Export menu\">\n                        Export\n                    </button>\n                    <mat-menu #exportMenu=\"matMenu\">\n                        <button mat-menu-item (click)=\"openExportPngDialog()\">\n                            <span>Export as PNG</span>\n                        </button>\n                        <button mat-menu-item (click)=\"openExportSvgDialog()\">\n                            <span>Export as SVG</span>\n                        </button>\n                    </mat-menu>\n                    <button mat-menu-item mat-icon-button [matMenuTriggerFor]=\"embedMenu\" aria-label=\"Embed menu\">\n                        Embed\n                    </button>\n                    <mat-menu #embedMenu=\"matMenu\">\n                        <button mat-menu-item (click)=\"openEmbedIFrame()\">\n                            <span>Embed IFrame</span>\n                        </button>\n                    </mat-menu>\n                </mat-menu>\n            </li>\n            <li>\n                <button mat-icon-button [matMenuTriggerFor]=\"editMenu\" aria-label=\"Edit menu\">\n                    Edit\n                </button>\n                <mat-menu #editMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"copyComponent.emit()\">\n                        <span>Copy</span>\n                    </button>\n                    <button mat-menu-item (click)=\"pasteComponent.emit()\">\n                        <span>Paste</span>\n                    </button>\n                    <button mat-menu-item (click)=\"cutComponent.emit(); \">\n                        <span>Cut</span>\n                    </button>\n                    <button mat-menu-item (click)=\"delComponent.emit()\">\n                        <span>Delete</span>\n                    </button>\n                    <button mat-menu-item (click)=\"undo.emit()\">\n                        <span>Undo</span>\n                    </button>\n                    <button mat-menu-item (click)=\"redo.emit()\">\n                        <span>Redo</span>\n                    </button>\n                    <hr class=\"line\">\n                    <button mat-menu-item (click)=\"showConfirmDialog('Do you really want to clear the board?', clearBoardDialog)\">\n                        <span>Clear board</span>\n                    </button>\n                </mat-menu>\n            </li>\n            <li>\n                <button mat-icon-button [matMenuTriggerFor]=\"viewMenu\" aria-label=\"View menu\">\n                    View\n                </button>\n                <mat-menu #viewMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"viewingService.setDarkMode(!viewingService.isDarkMode())\">\n                        <span *ngIf=\"viewingService.isDarkMode(); else lightMode\">Light mode</span>\n                        <ng-template #lightMode>\n                            <span>Dark mode</span>\n                        </ng-template>\n                    </button>\n                    <button mat-menu-item (click)=\"fullscreen.emit()\">\n                        <span>Go fullscreen</span>\n                    </button>\n                    <button mat-menu-item (click)=\"zoomIn.emit()\">\n                        <span>Zoom in</span>\n                    </button>\n                    <button mat-menu-item (click)=\"zoomOut.emit()\">\n                        <span>Zoom out</span>\n                    </button>\n                    <hr class=\"line\">\n                    <button mat-menu-item (click)=\"toggleHelpersDisabled()\">\n                        <span *ngIf=\"isHelpersDisabled; else helpersEnabled\">Enable <i class=\"far fa-question-circle\"></i> helpers</span>\n                        <ng-template #helpersEnabled>\n                            <span>Disable <i class=\"far fa-question-circle\"></i> helpers</span>\n                        </ng-template>\n                    </button>\n                    <button mat-menu-item (click)=\"toggleTitlesHidden()\">\n                        <span *ngIf=\"isTitlesHidden; else titlesVisible\">Show titles</span>\n                        <ng-template #titlesVisible>\n                            <span>Hide titles</span>\n                        </ng-template>\n                    </button>\n                    <hr class=\"line\">\n                    <button mat-menu-item (click)=\"resetView.emit()\">\n                        <span>Reset view</span>\n                    </button>\n                </mat-menu>\n            </li>\n            <li>\n                <button mat-icon-button [matMenuTriggerFor]=\"helpMenu\" aria-label=\"Help menu\">\n                    Help\n                </button>\n                <mat-menu #helpMenu=\"matMenu\">\n                    <button mat-menu-item (click)=\"onboardTutorial1.emit()\">\n                        <span>Quick introduction tutorial</span>\n                    </button>\n                    <button mat-menu-item (click)=\"openKeyboardShortcuts()\">\n                        <span>Keyboard shortcuts</span>\n                    </button>\n                </mat-menu>\n            </li>\n        </ul>\n        <div class=\"nav-bonus\">\n            <mat-checkbox class=\"example-margin\" (change)=\"togglePerformanceModeEnabled()\" [(ngModel)]=\"isPerformanceModeEnabled\">Performance mode</mat-checkbox>\n            <mat-checkbox class=\"example-margin\" (change)=\"toggleHideResponses()\" [(ngModel)]=\"isResponsesHidden\">Hide responses</mat-checkbox>\n            <button (click)=\"fullscreen.emit()\" *ngIf=\"isMobile\">\n                Go fullscreen\n            </button>        \n        </div>\n    </nav>\n    <nav class=\"nav-second\">\n        <ul class=\"nav-list\">\n            <li>\n                <mat-form-field appearance=\"fill\" class=\"nav-select\">\n                    <mat-select (selectionChange)=\"handleScaleChange()\" [formControl]=\"scaleControl\">\n                      <mat-option *ngFor=\"let val of scaleSelectList\" [value]=\"val\">{{val*100}}%</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </li>\n            <li class=\"v-line\">\n                <span (click)=\"zoomIn.emit()\" class=\"icon\"><i class=\"fas fa-search-plus\"></i></span>\n            </li>\n            <li>\n                <span (click)=\"zoomOut.emit()\" class=\"icon\"><i class=\"fas fa-search-minus\"></i></span>\n            </li>\n            <li class=\"v-line\">\n                <span (click)=\"undo.emit()\" class=\"icon\"><i class=\"fas fa-undo-alt\"></i></span>\n            </li>\n            <li>\n                <span (click)=\"redo.emit()\" class=\"icon\"><i class=\"fas fa-redo\"></i></span>\n            </li>\n            <li class=\"v-line\">\n                <span (click)=\"copyComponent.emit()\" class=\"icon\"><i class=\"far fa-copy\"></i></span>\n            </li>\n            <li>\n                <span (click)=\"pasteComponent.emit()\" class=\"icon\"><i class=\"fas fa-paste\"></i></span>\n            </li>\n            <li class=\"v-line\">\n                <span (click)=\"delComponent.emit()\" class=\"icon\"><i class=\"fas fa-trash\"></i></span>\n            </li>\n        </ul>\n    </nav>\n</header>\n<div class=\"confirm-dialog-container\" (click.self)=\"closeDialog()\" [style.display]=\"confirmDialogOpen ? 'flex' : 'none'\">\n    <div class=\"confirm-dialog\">\n        <p class=\"title\">{{confirmDialogText}}</p>\n        <div class=\"buttons-bottom\">\n            <button class=\"btn-cancel\" (click)=\"closeDialog()\">No</button>\n            <button class=\"btn-confirm\" (click)=\"confirmDialog()\">Yes</button>\n        </div>\n    </div>\n</div>\n<div class=\"confirm-dialog-container\" (click.self)=\"closeKeyboardShortcuts()\" [style.display]=\"isKeyboardShortcutsOpen ? 'flex' : 'none'\">\n    <div class=\"keyboard-shortcuts-window\">\n        <span class=\"keyboard-shortcuts-title\">Keyboard shortcuts</span>\n        <ul class=\"shortcuts-list\">\n            <li><p class=\"highlight\">CTRL C</p> <p>Copy component</p></li>\n            <li><p class=\"highlight\">CTRL V</p> <p>Paste component</p></li>\n            <li><p class=\"highlight\">DEL</p>    <p>Delete component</p></li>\n            <li><p class=\"highlight\">CTRL +</p> <p>Zoom in on board</p></li>\n            <li><p class=\"highlight\">CTRL -</p> <p>Zoom out of board</p></li>\n            <li><p class=\"highlight\">CTRL Z</p> <p>Undo change</p></li>\n            <li><p class=\"highlight\">CTRL Y</p> <p>Redo change</p></li>\n        </ul> \n        <button class=\"close\" (click)=\"closeKeyboardShortcuts()\"><i class=\"fas fa-times\"></i></button>\n    </div>\n</div>\n<div class=\"confirm-dialog-container\" (click.self)=\"closeExportPngDialog()\" [style.display]=\"isExportPngDialogOpen ? 'flex' : 'none'\">\n    <div class=\"confirm-dialog export\">\n        <p class=\"title\">Export as PNG</p>\n        <label>\n            <span>Transparent background: </span>\n            <input type=\"checkbox\" [(ngModel)]=\"exportPngOptions.transparentBackground\">\n        </label>\n        <label>\n            <span>Capture only used area: </span>\n            <input type=\"checkbox\" [(ngModel)]=\"exportPngOptions.captureUsed\">\n        </label>\n        <label>\n            <span>Show component titles: </span>\n            <input type=\"checkbox\" [(ngModel)]=\"exportPngOptions.showTitles\">\n        </label>\n        <label>\n            <span>Light mode: </span>\n            <input type=\"checkbox\" [(ngModel)]=\"exportPngOptions.lightMode\">\n        </label>\n        <label>\n            <span>Light color titles: </span>\n            <input [disabled]=\"!exportPngOptions.transparentBackground || !exportPngOptions.showTitles\" type=\"checkbox\" [(ngModel)]=\"exportPngOptions.lightTitles\">\n        </label>\n        <div class=\"buttons-bottom\">\n            <button class=\"btn-cancel\" (click)=\"closeExportPngDialog()\">Cancel</button>\n            <button class=\"btn-preview\" (click)=\"openPreview()\">Preview</button>\n            <button class=\"btn-confirm\" (click)=\"exportAsPng()\">Download</button>\n        </div>\n    </div>\n</div>\n<div class=\"confirm-dialog-container\" (click.self)=\"closeExportSvgDialog()\" [style.display]=\"isExportSvgDialogOpen ? 'flex' : 'none'\">\n    <div class=\"confirm-dialog export\">\n        <p class=\"title\">Export as SVG</p>\n        <label>\n            <span>Show component titles: </span>\n            <input type=\"checkbox\" [(ngModel)]=\"exportSvgOptions.showTitles\">\n        </label>\n        <label>\n            <span>Light color titles: </span>\n            <input [disabled]=\"!exportSvgOptions.showTitles\" type=\"checkbox\" [(ngModel)]=\"exportSvgOptions.lightTitles\">\n        </label>\n        <div class=\"buttons-bottom\">\n            <button class=\"btn-cancel\" (click)=\"closeExportSvgDialog()\">Cancel</button>\n            <button class=\"btn-preview\" (click)=\"openPreview(false)\">Preview</button>\n            <button class=\"btn-confirm\" (click)=\"exportAsSvg()\">Download</button>\n        </div>\n    </div>\n</div>\n<div class=\"preview-container\" (click)=\"closePreview()\" [style.display]=\"isPreviewOpen ? 'flex' : 'none'\">\n    <div #preview class=\"preview\">\n        <!-- Content added dynamically -->\n    </div>\n</div>\n<div class=\"backdrop-centralized saving\" *ngIf=\"isSavingOpen\" (click.self)=\"isSavingOpen = false\">\n    <div class=\"saving-inner confirm-dialog\">\n        <div class=\"name\">\n            <label>File name</label>\n            <input spellcheck=\"false\" required [(ngModel)]=\"saveFileName\" placeholder=\"File name\">\n        </div>\n        <button class=\"close\" (click)=\"isSavingOpen = false\">×</button>\n        <div class=\"buttons-bottom\">\n            <button class=\"btn-cancel\" (click)=\"isSavingOpen = false\">Close</button>\n            <button class=\"btn-confirm\" (click)=\"saveFile.emit(saveFileName)\">Download</button>\n        </div>\n    </div>\n</div>\n<div class=\"backdrop-centralized embed\" *ngIf=\"isEmbedIFrameOpen\" (click.self)=\"closeEmbedIFrame()\">\n    <div class=\"confirm-dialog embed-inner\">\n        <h5>Embed as IFrame</h5>\n        <p>An IFrame HTML tag will be generated. Copy & paste it into your HTML template to display your system in read-only format.</p>\n        <label>\n            <span>Show component titles by default: </span>\n            <input (change)=\"changeEmbedIFrameOptions()\" type=\"checkbox\" [(ngModel)]=\"embedIFrameOptions.showTitles\">\n        </label>\n        <label>\n            <span>Dark mode: </span>\n            <input (change)=\"changeEmbedIFrameOptions()\" type=\"checkbox\" [(ngModel)]=\"embedIFrameOptions.darkMode\">\n        </label>\n        <textarea *ngIf=\"!showEmbedError; else iframeEmbedError\" id=\"embedIframeText\" readonly [textContent]=\"embedIFrameTemplate\"></textarea>\n        <ng-template #iframeEmbedError>\n            <p class=\"error\">You can only embed a system with 2 or more components!</p>\n        </ng-template>\n        <button style=\"margin-top: 16px;\" class=\"btn-preview\" (click)=\"generateEmbedIFrameUuid()\">Generate</button>\n        <div class=\"buttons-bottom\">\n            <button class=\"btn-preview\" (click)=\"previewEmbedIFrame()\">Preview</button>\n            <button class=\"btn-preview\" (click)=\"closeEmbedIFrame()\">Close</button>\n            <button [disabled]=\"showEmbedError\" class=\"btn-confirm\" (click)=\"copyEmbedIFrame()\">Copy</button>\n        </div>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { EmbedIFrameOptions, ExportPngOptions, ExportService, ExportSvgOptions } from 'src/app/export.service';\nimport { PlacingService } from 'src/app/placing.service';\nimport { SavingService } from 'src/app/saving.service';\nimport { ViewingService } from 'src/app/viewing.service';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\nimport { downloadPng, downloadSvg } from 'src/shared/ExtensionMethods';\n\n@Component({\n\tselector: 'board-ui',\n\ttemplateUrl: './boardUI.component.html',\n\tstyleUrls: ['./boardUI.component.scss']\n})\nexport class BoardUIComponent implements OnInit {\n\t\n\t// File section events\n\t@Output() newFile = new EventEmitter();\n\t@Output() saveFile = new EventEmitter<string>();\n\t@Output() loadFile = new EventEmitter();\n\t@Output() showSaved = new EventEmitter();\n\t@Output() save = new EventEmitter();\n\t@Output() exportPng = new EventEmitter();\n\t@Output() exportSvg = new EventEmitter();\n\t@Output() embedIFrame= new EventEmitter();\n\n\t// Edit section events\n\t@Output() copyComponent = new EventEmitter();\n\t@Output() pasteComponent = new EventEmitter();\n\t@Output() selectAllComponents = new EventEmitter();\n\t@Output() cutComponent = new EventEmitter();\n\t@Output() delComponent = new EventEmitter();\n\t@Output() undo = new EventEmitter();\n\t@Output() redo = new EventEmitter();\n\t@Output() clearBoard = new EventEmitter();\n\n\t// View section events\n\t@Output() fullscreen = new EventEmitter();\n\t@Output() zoomIn = new EventEmitter();\n\t@Output() zoomOut = new EventEmitter();\n\t@Output() changeScale = new EventEmitter<number>();\n\t@Output() resetView = new EventEmitter();\n\n\t// Help section events\n\t@Output() onboardTutorial1 = new EventEmitter();\n\n\t@Input() getComponents: () => IDataOperator[];\n\n\tAPI_URL = \"http://127.0.0.1:8000\";\n\n\tname = \"Untitled System\";\n\tsaveFileName = \"Untitled System\";\n\n\tconfirmDialogText = \"\";\n\tconfirmDialogOpen: boolean = false;\n\n\tisKeyboardShortcutsOpen: boolean = false;\n\tisExportPngDialogOpen: boolean = false;\n\tisExportSvgDialogOpen: boolean = false;\n\n\tisHelpersDisabled: boolean = false;\n\tisTitlesHidden: boolean = false;\n\tisPreviewOpen: boolean = false;\n\tisSavingOpen: boolean = false;\n\tisEmbedIFrameOpen: boolean = false;\n\tisPerformanceModeEnabled: boolean = false;\n\tisResponsesHidden: boolean = false;\n\n\tembedIFrameTemplate: string = \"\";\n\tshowEmbedError: boolean = false;\n\tembedIFrameOptions: EmbedIFrameOptions = new EmbedIFrameOptions();\n\tembedIFrameJson: any = undefined;\n\tembedIFrameBase64Encoded: any = undefined;\n\tembedIFrameUuid: string = \"\";\n\n\tcanUseShortcuts: boolean = true;\n\n\texportPngOptions: ExportPngOptions = new ExportPngOptions();\n\texportSvgOptions: ExportSvgOptions = new ExportSvgOptions();\n\texportPngPreview: HTMLCanvasElement;\n\texportSvgPreview: SVGElement;\n\n\tisMobile: boolean = false;\n\n\n\tscaleControl: FormControl = new FormControl();\n\tscaleSelectList = [0.1, 0.5, 1, 1.5, 2];\n\n\tconfirmDialogReturnFunction = () => {};\n\n\t@ViewChild(\"file\") fileInput;\n\t@ViewChild(\"preview\") preview;\n\n\t/**\n\t * Dictionary of keys with assigned function when pressed with ctrl key\n\t */\n\tcontrolShortcuts = { \n\t\t\"c\": (e: Event) => {\n\t\t\tthis.copyComponent.emit();\n\t\t},\n\t\t\"v\": (e: Event) => {\n\t\t\tthis.pasteComponent.emit();\n\t\t},\n\t\t\"a\": (e: Event) => {\n\t\t\te.preventDefault();\n\t\t\tthis.selectAllComponents.emit();\n\t\t},\n\t\t\"x\": (e: Event) => {\n\t\t\tthis.cutComponent.emit();\n\t\t},\n\t\t\"s\": (e: Event) => {\n\t\t\te.preventDefault();\n\t\t\tthis.save.emit(true);\n\t\t},\n\t\t\"z\": (e: Event) => {\n\t\t\te.preventDefault();\n\t\t\tthis.undo.emit();\n\t\t},\n\t\t\"y\": (e: Event) => {\n\t\t\te.preventDefault();\n\t\t\tthis.redo.emit();\n\t\t},\n\t\t\"+\": (e: Event) => {\n\t\t\te.preventDefault();\n\t\t\tthis.zoomIn.emit();\n\t\t},\n\t\t\"-\": (e: Event) => {\n\t\t\te.preventDefault();\n\t\t\tthis.zoomOut.emit();\n\t\t}\n\t}\n\n\tconstructor(private placingService: PlacingService, private savingService: SavingService, public viewingService: ViewingService, private exportService: ExportService) { \n\t\tthis.isHelpersDisabled = viewingService.isHelpersDisabled();\n\t\tthis.isTitlesHidden = viewingService.isTitlesHidden();\n\t\tthis.isPerformanceModeEnabled = viewingService.isPerformanceMode();\n\t\tthis.isResponsesHidden = viewingService.isResponsesHidden();\n\t}\n\n\tload(file){\n\t\tif(file.files.length == 0)\n\t\t\treturn;\n\t\tif(!this.isJson(file.files[0].name)){\n\t\t\tthis.placingService.showSnack(\"You need to upload .json file\");\n\t\t\treturn;\n\t\t}\n\t\tlet reader = new FileReader();\n\t    reader.onload = ((f) => {\n\t\t\treturn (e)=> { \n\t\t\t\tlet data = e.target.result; \n\t\t\t\tthis.loadFile.emit(data);\n\t\t\t}; \n\t\t})(file);\n\t\treader.readAsText(file.files[0]);\n\t\tthis.fileInput.nativeElement.value = null;\n\t\tthis.canUseShortcuts = true;\n\t}\n\n\tprivate isJson(name: string){\n\t\tif(name.length == 0)\n\t\t\treturn false;\n\t\treturn name.substring(name.length - 5, name.length).toLowerCase() === \".json\";\n\t}\n\n\tonNameChange(){\n\t\tthis.savingService.systemName = this.name;\n\t}\n\n\tchangeName(name){\n\t\tthis.name = name;\n\t\tthis.saveFileName = name;\n\t\tthis.savingService.systemName = name;\n\t}\n\n\tngOnInit(): void {\n\t\tthis.scaleControl.setValue(1);\n\t\tdocument.addEventListener(\"focusin\", () => {\n\t\t\tthis.canUseShortcuts = false;\n\t\t}); \n\t\tdocument.addEventListener(\"focusout\", () => {\n\t\t\tthis.canUseShortcuts = true;\n\t\t});\n\t\twindow.onkeydown = (e: KeyboardEvent)=>{\n\t\t\tif(!this.canUseShortcuts)\n\t\t\t\treturn;\n\t\t\tif(e.ctrlKey && this.controlShortcuts[e.key]){\n\t\t\t\tthis.controlShortcuts[e.key](e);\n\t\t\t}\n\t\t\tif(e.key === 'Delete')\n\t\t\t\tthis.delComponent.emit();\n\t\t}\n\t\tif(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)){\n\t\t\tthis.isMobile = true;\n\t\t}\n\t}\n\n\tshowConfirmDialog(text: string, returnFunction){\n\t\tthis.confirmDialogOpen = true;\n\t\tthis.confirmDialogText = text;\n\t\tthis.confirmDialogReturnFunction = returnFunction;\n\t}\n\n\tcloseDialog(){\n\t\tthis.confirmDialogOpen = false;\n\t}\n\n\tconfirmDialog(){\n\t\tthis.confirmDialogReturnFunction();\n\t\tthis.confirmDialogOpen = false;\n\t}\n\n\tnewFileDialog(){\n\t\tthis.newFile.emit();\n\t}\n\n\tasync openEmbedIFrame(){\n\t\tthis.isEmbedIFrameOpen = true;\n\t\tlet components = this.getComponents();\n\t\tif(components.length <= 1){\n\t\t\tthis.showEmbedError = true;\n\t\t\treturn;\n\t\t}\n\t\tthis.showEmbedError = false;\n\t\tthis.embedIFrameJson = this.savingService.getOptimizedBoard(components);\n\n\t\tlet obj: any = {comp: this.embedIFrameJson};\n\t\tobj.showTitles = this.embedIFrameOptions.showTitles;\n\t\tobj.darkMode = this.embedIFrameOptions.darkMode;\n\t\tthis.embedIFrameJson = JSON.stringify(obj);\n\t\tthis.embedIFrameBase64Encoded = btoa(this.embedIFrameJson);\n\n\t\t// this.embedIFrameJson = this.savingService.getOptimizedBoardJson(components);\n\t\t// let obj: any = {comp: JSON.parse(this.embedIFrameJson)};\n\t\t// obj.showTitles = this.embedIFrameOptions.showTitles;\n\t\t// obj.darkMode = this.embedIFrameOptions.darkMode;\n\t\t// this.embedIFrameJson = JSON.stringify(obj);\n\t\t// let base64Encoded = btoa(this.embedIFrameJson);\n\t\t// this.generateEmbedIFrameTemplate(base64Encoded);\n\t}\n\n\tasync sendBoardPost(boardSave){\n\t\tconsole.log(boardSave);\n\t\tconst response = await fetch(`${this.API_URL}/api/board`, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: boardSave,\n\t\t});\n\n\t\tconst uuid = await response.text();\n\n\t\treturn uuid;\n\t}\n\n\tasync generateEmbedIFrameUuid(){\n\t\tthis.embedIFrameUuid = await this.sendBoardPost(this.embedIFrameBase64Encoded);\n\t\tlet url = \"http://localhost:4200/create\"\n\t\tlet template = `<iframe frameborder=\"0\" style=\"width:100%;height:600px;\" src=\"${url}?viewer=${this.embedIFrameUuid}\">\\n</iframe>`\n\t\tthis.embedIFrameTemplate = template;\n\t}\n\n\tchangeEmbedIFrameOptions(){\n\t\tlet obj = JSON.parse(this.embedIFrameJson);\n\t\tobj.showTitles = this.embedIFrameOptions.showTitles;\n\t\tobj.darkMode = this.embedIFrameOptions.darkMode;\n\t\tthis.embedIFrameJson = JSON.stringify(obj);\n\t\tthis.embedIFrameBase64Encoded = btoa(this.embedIFrameJson);\n\t}\n\n\tpreviewEmbedIFrame(){\n\t\tvar win = window.open(\"\", \"Preview\");\n\t\twin.document.body.innerHTML = this.embedIFrameTemplate;\n\t}\n\n\tcloseEmbedIFrame(){\n\t\tthis.isEmbedIFrameOpen = false;\n\t\tthis.embedIFrameTemplate = \"\";\n\t}\n\n\tcopyEmbedIFrame(){\n\t\tvar copyText = document.getElementById(\"embedIframeText\") as any;\n\t\tcopyText.select();\n\t\tcopyText.setSelectionRange(0, 99999);\n\n\t\tdocument.execCommand(\"copy\");\n\n\t\talert(\"Copied to clipboard\");\n\t}\n\n\topenSaveFile(){\n\t\tthis.isSavingOpen = true;\n\t\tthis.saveFileName = this.name;\n\t}\n\n\tclearBoardDialog(){\n\t\tthis.clearBoard.emit();\n\t}\n\n\tasync exportAsPng(){\n\t\tlet components = this.getComponents()\n\t\tif(components == null || components.length == 0){\n\t\t\tthis.placingService.showSnack(\"You can't export an empty board.\");\n\t\t\treturn;\n\t\t}\n\t\tlet canvas = await this.exportService.getCanvas(components, this.exportPngOptions);\n\t\tdownloadPng(this.name+\".png\", canvas.toDataURL('image/png', 1));\n\t\tthis.closeExportPngDialog();\n\t}\n\n\tasync openExportPngDialog(){\n\t\tthis.isExportPngDialogOpen = true;\n\t}\n\n\tcloseExportPngDialog(){\n\t\tthis.isExportPngDialogOpen = false;\n\t}\n\n\tasync exportAsSvg(){\n\t\tlet svg = await this.exportService.getSvg(this.getComponents(), this.exportSvgOptions);\n\t\tif(svg == null){\n\t\t\tthis.placingService.showSnack(\"You can't export an empty board.\");\n\t\t\treturn;\n\t\t}\n\t\tdownloadSvg(this.name+\".svg\", svg);\n\t\tthis.closeExportSvgDialog();\n\t}\n\n\tasync openExportSvgDialog(){\n\t\tthis.isExportSvgDialogOpen = true;\n\t}\n\n\tcloseExportSvgDialog(){\n\t\tthis.isExportSvgDialogOpen = false;\n\t}\n\n\topenKeyboardShortcuts(){\n\t\tthis.isKeyboardShortcutsOpen = true;\n\t}\n\n\tcloseKeyboardShortcuts(){\n\t\tthis.isKeyboardShortcutsOpen = false;\n\t}\n\n\ttoggleHelpersDisabled(){\n\t\tthis.isHelpersDisabled = !this.isHelpersDisabled;\n\t\tthis.viewingService.setHelpersDisabled(this.isHelpersDisabled);\n\t}\n\n\ttoggleTitlesHidden(){\n\t\tthis.isTitlesHidden = !this.isTitlesHidden;\n\t\tthis.viewingService.setTitlesHidden(this.isTitlesHidden);\n\t}\n\n\ttogglePerformanceModeEnabled(){\n\t\tthis.viewingService.setPerformanceMode(this.isPerformanceModeEnabled);\n\t}\n\n\ttoggleHideResponses(){\n\t\tthis.viewingService.setResponsesHidden(this.isResponsesHidden);\n\t}\n\t\n\tasync openPreview(png: boolean = true){\n\t\tif(png){\n\t\t\tthis.exportPngPreview = await this.exportService.getCanvas(this.getComponents(), this.exportPngOptions);\n\t\t\tif(this.exportPngPreview == null)\n\t\t\t\treturn;\n\t\t\tthis.exportPngPreview.style.width = \"100%\";\n\t\t\tthis.exportPngPreview.style.marginBottom = \"-5px\";\n\t\t\tthis.preview.nativeElement.innerHTML = \"\";\n\t\t\tthis.preview.nativeElement.appendChild(this.exportPngPreview);\n\t\t}\n\t\telse{\n\t\t\tlet components = this.getComponents();\n\t\t\tthis.exportSvgPreview = await this.exportService.getSvg(components, this.exportSvgOptions);\n\t\t\tif(this.exportSvgPreview == null)\n\t\t\t\treturn;\n\t\t\tthis.exportSvgPreview.style.marginBottom = \"-5px\";\n\t\t\tthis.preview.nativeElement.innerHTML = \"\";\n\t\t\tthis.preview.nativeElement.appendChild(this.exportSvgPreview);\n\t\t}\n\t\tthis.isPreviewOpen = true;\n\t}\n\n\tclosePreview(){\n\t\tthis.isPreviewOpen = false;\n\t}\n\n\thandleScaleChange(){\n\t\tthis.changeScale.emit(this.scaleControl.value);\n\t}\n}\n","export enum DatabaseType{\n    SQL,\n    NoSQL\n}","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSliderModule } from \"@angular/material/slider\"\nimport { MatCheckboxModule } from \"@angular/material/checkbox\"\n\nimport { BrowserModule, EVENT_MANAGER_PLUGINS, HAMMER_LOADER } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DelayedHoverDirective } from \"../shared/DelayedHoverDirective\";\nimport { ResizableTextAreaDirective } from \"../shared/resizable-textarea\";\nimport { VueEventModifiersPlugin } from \"../shared/vue-event-modifiers.plugin\";\nimport { ColorPickerModule } from 'ngx-color-picker';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BoardComponent } from './board/board.component';\nimport { ComponentmenuComponent } from './board/componentmenu/componentmenu.component';\n\nimport { ApiComponent } from './board/components/api/api.component';\nimport { ApiGatewayComponent } from './board/components/apigateway/apigateway.component';\nimport { CacheComponent } from './board/components/cache/cache.component';\nimport { ClientComponent } from './board/components/client/client.component';\nimport { CloudStorageComponent } from './board/components/cloudstorage/cloudstorage.component';\nimport { ConnectionComponent } from './board/components/connection/connection.component';\nimport { DatabaseComponent } from './board/components/database/database.component';\nimport { LoadbalancerComponent } from './board/components/loadbalancer/loadbalancer.component';\nimport { MessagequeueComponent } from './board/components/messagequeue/messagequeue.component';\nimport { PortComponent } from './board/components/port/port.component';\nimport { PubsubComponent } from './board/components/pubsub/pubsub.component';\nimport { TitleComponent } from './board/components/Shared/title/title.component';\nimport { TextfieldComponent } from './board/components/textfield/textfield.component';\nimport { WebserverComponent } from './board/components/webserver/webserver.component';\nimport { ProxyComponent } from './board/components/proxy/proxy.component';\nimport { ClientclusterComponent } from './board/components/clientcluster/clientcluster.component';\nimport { CDNComponent } from './board/components/cdn/cdn.component';\n\nimport { BoardUIComponent } from './board/boardUI/boardUI.component';\nimport { OptionsmenuComponent } from './board/optionsmenu/optionsmenu.component';\nimport { TutorialControlsComponent } from './board/tutorials/tutorial-controls/tutorial-controls.component';\nimport { CreateComponent } from './create/create.component';\nimport { InfoTooltipComponent } from './info-tooltip/info-tooltip.component';\nimport { LandingPageComponent } from './pages/landing-page/landing-page.component';\nimport { PagesComponent } from './pages/pages.component';\nimport { EndpointSelectComponent } from './board/components/Shared/endpoint-select/endpoint-select.component';\nimport { SliderDescribedComponent } from './board/components/Shared/slider-described/slider-described.component';\n\nimport * as Hammer from 'hammerjs';\nimport {\nHammerModule, HammerGestureConfig, HAMMER_GESTURE_CONFIG} \nfrom '@angular/platform-browser';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BoardComponent,\n    BoardUIComponent,\n    ClientComponent,\n    ConnectionComponent,\n    PortComponent,\n    WebserverComponent,\n    LoadbalancerComponent,\n    ComponentmenuComponent,\n    DelayedHoverDirective,\n    OptionsmenuComponent,\n    ApiComponent,\n    ApiGatewayComponent,\n    TextfieldComponent,\n    ResizableTextAreaDirective,\n    DatabaseComponent,\n    CacheComponent,\n    MessagequeueComponent,\n    PubsubComponent,\n    CreateComponent,\n    PagesComponent,\n    TutorialControlsComponent,\n    LandingPageComponent,\n    InfoTooltipComponent,\n    TitleComponent,\n    CloudStorageComponent,\n    ProxyComponent,\n    ClientclusterComponent,\n    CDNComponent,\n    EndpointSelectComponent,\n    SliderDescribedComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MatSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule,\n    MatExpansionModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatTooltipModule,\n    MatSliderModule,\n    MatCheckboxModule,\n    ColorPickerModule,\n    HammerModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n\tproviders: [\n\t\t{\n\t\t\tprovide: EVENT_MANAGER_PLUGINS,\n\t\t\tuseClass: VueEventModifiersPlugin,\n\t\t\tmulti: true\n\t\t},\n    {\n      provide: HAMMER_GESTURE_CONFIG,\n      useClass: HammerGestureConfig,\n    },\n    {\n      provide: HAMMER_LOADER,\n      useValue: () => new Promise(() => {})\n    }\n\t],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Proxy } from 'src/models/Proxy';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'app-proxy',\n\ttemplateUrl: './proxy.component.html',\n\tstyleUrls: ['./proxy.component.scss']\n})\nexport class ProxyComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicProxy: Proxy = new Proxy();\n\n\tgetLogicComponent(){\n\t\treturn this.LogicProxy;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new Proxy();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicProxy.options.X\"\n[style.top.px]=\"LogicProxy.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <span class=\"img bg-proxy\"></span>\n    </div>  \n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { Endpoint, EndpointAction } from 'src/models/Endpoint';\nimport { EndpointOperator } from 'src/models/EndpointOperator';\nimport { APIType } from 'src/models/enums/APIType';\nimport { gRPCMode } from 'src/models/enums/gRPCMode';\nimport { EndpointActionHTTPMethod, HTTPMethod } from 'src/models/enums/HTTPMethod';\nimport { Protocol } from 'src/models/enums/Protocol';\nimport { getFormattedMethod } from 'src/shared/ExtensionMethods';\n\n@Component({\n\tselector: 'endpoint-select',\n\ttemplateUrl: './endpoint-select.component.html',\n\tstyleUrls: ['./endpoint-select.component.scss']\n})\nexport class EndpointSelectComponent implements OnInit {\n\n\t@Input() Model: EndpointOperator;\n\t@Input() Type: APIType = APIType.REST;\n\t@Input() Multiple: boolean = true;\n\t@Input() HasActions: boolean = true;\n\t@Input() HasStreamActions: boolean = false;\n\t@Input() ModifiableMethods: boolean = true;\n\t@Input() ConnectableEndpoints: Endpoint[] = [];\n\t@Input() DatabaseEndpoints: boolean = false;\n\t@Input() AfterChange;\n\t@Input() Title: string = \"Endpoints: \";\n\t@Input() ShowCounter: boolean = false;\n\t@Input() Property: string = \"endpoints\";\n\n\tpublic HTTPMethod: typeof HTTPMethod = HTTPMethod;\n\tpublic HTTPMethodKeys = Object.values(HTTPMethod).filter(k => !isNaN(Number(k)));\n\tpublic EndpointActionHTTPMethod: typeof EndpointActionHTTPMethod = EndpointActionHTTPMethod;\n\tpublic EndpointActionHTTPMethodKeys = Object.values(EndpointActionHTTPMethod).filter(k => !isNaN(Number(k)));\n\tpublic Protocol: typeof Protocol = Protocol;\n\tpublic ProtocolKeys = Object.values(Protocol).filter(k => !isNaN(Number(k)));\n\tpublic APIType: typeof APIType = APIType;\n\tpublic APITypeKeys = Object.values(APIType).filter(k => !isNaN(Number(k)));\n\tpublic gRPCMode: typeof gRPCMode = gRPCMode;\n\tpublic gRPCModeKeys = Object.values(gRPCMode).filter(k => !isNaN(Number(k)));\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\n\t}\n\n\tformatMethod(method: HTTPMethod, isDatabase: boolean){\n\t\treturn getFormattedMethod(method, isDatabase);\n\t}\n\n\thandleActionEndpointChange(endpoint: Endpoint, action: EndpointAction){\n\t\taction.method = endpoint.protocol != Protocol.WebSockets && action.endpoint.protocol != Protocol.WebSockets ? EndpointActionHTTPMethod.Inherit : EndpointActionHTTPMethod[HTTPMethod[action.endpoint.supportedMethods[0]]];\n\t}\n\n\thandleEndpointMethodChange(endpoint: Endpoint){\n\t\tif(endpoint.supportedMethods.length == 0)\n\t\t\tendpoint.supportedMethods = [HTTPMethod.GET];\n\t}\n\n\thandleEndpointUrlChange(endpoint){\n\t\tif(endpoint.url == null || endpoint.url.replace(/\\s/g,\"\") == \"\")\n\t\t\tendpoint.url = `/endpoint/v${Math.floor(10*Math.random())}`;\n\t}\n\n\taddAction(endpoint: Endpoint){\n\t\tendpoint.actions.push(new EndpointAction());\n\t\tthis.AfterChange();\n\t}\n\n\tremoveAction(endpoint: Endpoint, action: EndpointAction){\n\t\tlet idx = 0;\n\t\tfor(let act of endpoint.actions){\n\t\t\tif(act === action) {\n\t\t\t\tendpoint.actions.splice(idx,1);\n\t\t\t\tthis.AfterChange();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tidx++;\n\t\t}\n\t}\n\n\taddEndpoint(){\n\t\tlet type = this.Type;\n\t\tlet endpoint: Endpoint;\n\t\tif(type == APIType.REST){\n\t\t\tendpoint = new Endpoint(\"/endpoint\",[HTTPMethod.GET,HTTPMethod.POST,HTTPMethod.PUT,HTTPMethod.DELETE]);\n\t\t}\n\t\telse if(type == APIType.GraphQL){\n\t\t\tendpoint = new Endpoint(\"/endpoint\",[HTTPMethod.GET,HTTPMethod.POST]);\n\t\t}\n\t\telse if(type == APIType.RPC){\n\t\t\tendpoint = new Endpoint(\"/endpoint\",[HTTPMethod.GET]);\n\t\t}\n\t\telse if(type == APIType.gRPC){\n\t\t\tendpoint = new Endpoint(\"/endpoint\",[HTTPMethod.GET]);\n\t\t\tendpoint.grpcMode = gRPCMode.Unary;\n\t\t}\n\t\telse if(type == APIType.WebSockets){\n\t\t\tendpoint = new Endpoint(\"/endpoint\", [HTTPMethod.GET]);\n\t\t\tendpoint.protocol = Protocol.WebSockets;\n\t\t}\n\t\tthis.Model.options[this.Property].push(endpoint);\t\t\n\t\tthis.AfterChange();\n\t}\n\n\tremoveEndpoint(endpoint: Endpoint){\n\t\tlet idx = 0;\n\t\tfor(let ep of this.Model.options[this.Property]){\n\t\t\tif(ep === endpoint) {\n\t\t\t\tthis.Model.options[this.Property].splice(idx,1);\n\t\t\t\tthis.AfterChange();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tidx++;\n\t\t}\t\n\t}\n}\n","<div class=\"options-endpoints-container\">\n    <div class=\"options-endpoints-top\">\n        <span class=\"property-name\">{{Title}} <info-tooltip [Message]=\"'List of available endpoints. Click the dropdown to show allowed methods and actions.'\"></info-tooltip></span>\n        <div>\n            <span *ngIf=\"ShowCounter\">[{{this.Model.options[Property].length}}]</span>\n            <span *ngIf=\"Multiple\" class=\"button-icon\" (click)=\"addEndpoint()\"><i class=\"fas fa-plus\"></i></span>\n        </div>\n    </div>\n    <div class=\"options-endpoints\">\n        <div class=\"options-endpoint\" *ngFor=\"let endpoint of this.Model.options[Property]\">\n            <mat-expansion-panel>\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        <input (blur)=\"handleEndpointUrlChange(endpoint)\" (change)=\"AfterChange()\" class=\"endpoint-url\" type=\"text\" spellcheck=\"false\" [(ngModel)]=\"endpoint.url\" placeholder=\"url\">\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n                <div class=\"options-endpoint-menu-top\">\n                    <mat-form-field class=\"endpoint-method\" appearance=\"fill\">\n                        <mat-select *ngIf=\"Type == APIType.REST\" (selectionChange)=\"AfterChange()\" (closed)=\"handleEndpointMethodChange(endpoint)\" [disabled]=\"!ModifiableMethods\" [(ngModel)]=\"endpoint.supportedMethods\" multiple required>\n                            <mat-option *ngFor=\"let method of HTTPMethodKeys\" [value]=\"method\">{{ formatMethod(HTTPMethod[method], DatabaseEndpoints) }}</mat-option>\n                        </mat-select>\n                        <mat-select *ngIf=\"Type == APIType.GraphQL\" (selectionChange)=\"AfterChange()\" (closed)=\"handleEndpointMethodChange(endpoint)\" [disabled]=\"!ModifiableMethods\" [(ngModel)]=\"endpoint.supportedMethods\" multiple required>\n                            <mat-option [value]=\"HTTPMethod.GET\">GET</mat-option>\n                            <mat-option [value]=\"HTTPMethod.POST\">POST</mat-option>\n                        </mat-select>\n                        <mat-select *ngIf=\"Type == APIType.RPC || Type == APIType.gRPC\" (selectionChange)=\"AfterChange()\" (closed)=\"handleEndpointMethodChange(endpoint)\" [disabled]=\"!ModifiableMethods\" [(ngModel)]=\"endpoint.supportedMethods[0]\" required>\n                            <mat-option [value]=\"HTTPMethod.GET\">GET</mat-option>\n                            <mat-option [value]=\"HTTPMethod.POST\">POST</mat-option>\n                        </mat-select>\n                        <mat-select *ngIf=\"Type == APIType.WebSockets\" (selectionChange)=\"AfterChange()\" (closed)=\"handleEndpointMethodChange(endpoint)\" disabled [(ngModel)]=\"endpoint.supportedMethods[0]\">\n                            <mat-option [value]=\"HTTPMethod.GET\">GET</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                    <mat-form-field class=\"endpoint-grpcmode\" appearance=\"fill\" *ngIf=\"Type == APIType.gRPC\">\n                        <mat-select (selectionChange)=\"AfterChange()\" [disabled]=\"endpoint.protocol == Protocol.WebSockets\" [(ngModel)]=\"endpoint.grpcMode\" required>\n                            <mat-option *ngFor=\"let mode of gRPCModeKeys\" [value]=\"mode\">{{ gRPCMode[mode] }}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n                <div class=\"options-endpoint-actions-container\" *ngIf=\"HasActions && (HasStreamActions || endpoint.grpcMode == gRPCMode['Unary'] && endpoint.protocol !== Protocol.WebSockets)\">\n                    <div class=\"options-endpoint-action\">\n                        <span class=\"property-name action-endpoint\">Actions: <info-tooltip [Message]=\"'List of actions of the endpoint. Change the target endpoint and method used.'\"></info-tooltip></span>\n                        <span class=\"action-method\"></span>\n                        <span class=\"button-icon\" (click)=\"addAction(endpoint)\"><i class=\"fas fa-plus\"></i></span>\n                    </div>\n                    <div class=\"options-endpoint-actions\">\n                        <div class=\"options-endpoint-action\" *ngFor=\"let action of endpoint.actions\">\n                            <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                                <mat-select (selectionChange)=\"handleActionEndpointChange(endpoint, action); AfterChange()\" [(ngModel)]=\"action.endpoint\">\n                                    <mat-option \n                                    [disabled]=\"(((endpoint.grpcMode == gRPCMode.Unary || endpoint.grpcMode == gRPCMode['Client Streaming']) && (connendpoint.protocol == Protocol.WebSockets || connendpoint.grpcMode == gRPCMode['Server Streaming'] || connendpoint.grpcMode == gRPCMode['Bidirectional Streaming'])) || (endpoint.grpcMode == gRPCMode['Server Streaming'] && connendpoint.grpcMode == gRPCMode['Client Streaming'])) && !(Type == APIType.WebSockets && connendpoint.protocol == Protocol.WebSockets)\"\n                                    *ngFor=\"let connendpoint of ConnectableEndpoints\" [value]=\"connendpoint\">{{connendpoint.url}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <mat-form-field appearance=\"fill\" class=\"action-method\">\n                                <mat-select (selectionChange)=\"AfterChange()\" [(ngModel)]=\"action.method\" *ngIf=\"action.endpoint != null; else emptyMethod\">\n                                    <mat-option *ngIf=\"action.endpoint.protocol != Protocol.WebSockets && endpoint.protocol != Protocol.WebSockets\" [value]=\"EndpointActionHTTPMethod.Inherit\">Inherit</mat-option>\n                                    <mat-option *ngFor=\"let method of action.endpoint.supportedMethods\" [value]=\"EndpointActionHTTPMethod[HTTPMethod[method]]\">{{ formatMethod(HTTPMethod[method+''], action.endpoint.protocol == Protocol.Database) }}</mat-option>\n                                </mat-select>\n                                <ng-template #emptyMethod>\n                                    <mat-select disabled>\n                                        <mat-option></mat-option>\n                                    </mat-select>\n                                </ng-template>\n                            </mat-form-field>\n                            <span [class.disabled]=\"action.endpoint == null || action.endpoint.protocol === Protocol.WebSockets || action.endpoint.grpcMode !== gRPCMode.Unary\" (click)=\"action.asynchronous = !(action.asynchronous || false)\" \n                                [class.checked]=\"action.asynchronous === true\" class=\"async-check\"\n                                matTooltip=\"{{ 'Make action asynchronous' }}\">\n                                    A\n                            </span>\n                            <span class=\"button-icon\" (click)=\"removeAction(endpoint, action)\"><i class=\"fas fa-minus\"></i></span>\n                        </div>\n                    </div>\n                </div>\n            </mat-expansion-panel>\n            <span *ngIf=\"APIType.GraphQL && Multiple\" class=\"button-icon remove-endpoint\" (click)=\"removeEndpoint(endpoint)\"><i class=\"fas fa-minus\"></i></span>\n        </div>\n    </div>\n</div>","export enum HTTPMethod{\n    \"GET\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"PATCH\"\n}\n\nexport enum EndpointActionHTTPMethod{\n    \"Inherit\",\n    \"GET\",\n    \"POST\",\n    \"PUT\",\n    \"DELETE\",\n    \"PATCH\"\n}","import { Component, OnInit } from '@angular/core';\nimport { BalancingAlgorithm } from 'src/models/enums/BalancingAlgorithm';\nimport { LoadBalancerType } from 'src/models/enums/LoadBalancerType';\nimport { LoadBalancer } from 'src/models/LoadBalancer';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n  \tselector: 'loadbalancer',\n\ttemplateUrl: './loadbalancer.component.html',\n  \tstyleUrls: ['./loadbalancer.component.scss']\n})\nexport class LoadbalancerComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicLoadBalancer : LoadBalancer = new LoadBalancer();\n\t\n\thandleTypeChange(){\n\t\tif(this.LogicLoadBalancer.options.type == LoadBalancerType['Layer 4'] && \n\t\tthis.LogicLoadBalancer.options.algorithm == BalancingAlgorithm['URL Hash']){\n\t\t\tthis.LogicLoadBalancer.options.algorithm = BalancingAlgorithm['Round Robin'];\n\t\t}\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicLoadBalancer;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new LoadBalancer();\n\t\treturn c.color;\n\t}\n}\n","<div\n#anchorRef\n[style.left.px]=\"LogicLoadBalancer.options.X\"\n[style.top.px]=\"LogicLoadBalancer.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/loadbalancer.svg\">\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div class=\"options-container\">\n            <div>\n                <span class=\"property-name\">Type: <info-tooltip [Message]=\"'Changes the type of the load balancer. This can affect available balancing algorithms.'\"></info-tooltip></span>\n                <div>\n                    <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                        <mat-select (selectionChange)=\"handleTypeChange(); afterChange()\" [(ngModel)]=\"LogicLoadBalancer.options.type\">\n                          <mat-option *ngFor=\"let type of LoadBalancerTypeKeys\" [value]=\"type\">{{LoadBalancerType[type]}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n            <div>\n                <span class=\"property-name\">Balancing Algorithm: <info-tooltip [Message]=\"'Changes the balancing algorithm of the load balancer. This changes the data routing behaviour.'\"></info-tooltip></span>\n                <div>\n                    <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                        <mat-select (selectionChange)=\"afterChange()\" [(ngModel)]=\"LogicLoadBalancer.options.algorithm\">\n                          <mat-option [disabled]=\"algo == BalancingAlgorithm['URL Hash'] && LogicLoadBalancer.options.type == LoadBalancerType['Layer 4']\" *ngFor=\"let algo of BalancingAlgorithmKeys\" [value]=\"algo\">{{BalancingAlgorithm[algo]}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { IDataOperator, ReceiveDataEvent, ShowStatusCodeEvent, FailedConnectEvent } from \"src/interfaces/IDataOperator\";\nimport { UUID } from \"src/shared/ExtensionMethods\";\nimport { Connection } from \"./Connection\";\nimport { Port } from \"./Port\";\nimport { EventDispatcher, Handler } from \"./Shared/EventDispatcher\";\n\nexport class LogicComponent {\n\n    originID: string = UUID();\n    color: string = \"#6059DF\";\n    fillColor: boolean = true;\n\n    connectTo(operator: IDataOperator, connectingWithOutput:boolean) : Connection{\n        let otherPort = operator.getPort(!connectingWithOutput);\n        if(!operator.canConnectTo(this.getPort(connectingWithOutput), !connectingWithOutput) || !this.canConnectTo(otherPort, connectingWithOutput)) \n            return null;\n        return this.getPort(connectingWithOutput).connectTo(otherPort);\n    }\n\n    canConnectTo(port: Port, connectingWithOutput: boolean){\n        // Any component must connect with either IN to OUT or OUT to IN\n        if(connectingWithOutput){\n            let outputPort = this[\"outputPort\"];\n            if(outputPort != null) {\n                if(!port.isOutput)\n                    return true;\n            }\n        }\n        else{\n            let inputPort = this[\"inputPort\"];\n            if(inputPort != null) {\n                if(port.isOutput)\n                    return true;\n            }\n        }\n        this.fireFailedConnect({message: \"You can only connect input to output.\"});\n        return false;\n    }\n\n    getPort(outputPort: boolean = false): Port{\n        if(outputPort)\n            return this[\"outputPort\"];\n        return this[\"inputPort\"];\n    }\n\n    destroy(){\n        if(this[\"outputPort\"])\n            this[\"outputPort\"].removeConnections();\n        if(this[\"inputPort\"])\n            this[\"inputPort\"].removeConnections();\n    }\n\n    onConnectionUpdate(wasOutput: boolean = false){ }\n\n    protected receiveDataDispatcher = new EventDispatcher<ReceiveDataEvent>();\n    public onReceiveData(handler: Handler<ReceiveDataEvent>) {\n        this.receiveDataDispatcher.register(handler);\n    }\n    protected fireReceiveData(event: ReceiveDataEvent) { \n        this.receiveDataDispatcher.fire(event);\n    }\n\n    protected showStatusCodeDispatcher = new EventDispatcher<ShowStatusCodeEvent>();\n    public onShowStatusCode(handler: Handler<ShowStatusCodeEvent>) {\n        this.showStatusCodeDispatcher.register(handler);\n    }\n    protected fireShowStatusCode(event: ShowStatusCodeEvent) { \n        this.showStatusCodeDispatcher.fire(event);\n    }\n\n    protected failedConnectDispatcher = new EventDispatcher<FailedConnectEvent>();\n    public onFailedConnect(handler: Handler<FailedConnectEvent>) {\n        this.failedConnectDispatcher.register(handler);\n    }\n    protected fireFailedConnect(event: FailedConnectEvent) { \n        this.failedConnectDispatcher.fire(event);\n    }\n}","import { ComponentFactory, ComponentFactoryResolver, ComponentRef, EventEmitter, Injectable, Output, Type, ViewContainerRef } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\nimport { LineBreak } from 'src/models/Connection';\nimport { Options } from 'src/models/Options';\nimport { ConnectionComponent } from './board/components/connection/connection.component';\nimport { PortComponent } from './board/components/port/port.component';\nimport { OperatorComponent } from './board/components/Shared/OperatorComponent';\n\nclass CopiedItem {\n\tcomponent: any;\n\tlogicComponent: IDataOperator;\n\toptions: Options;\n\toutputConnectionsList: any[];\n}\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class PlacingService{\n\n\t@Output() componentChanged = new EventEmitter();\n\t@Output() showComponentContextMenu = new EventEmitter<any>();\n\t@Output() pushComponent = new EventEmitter<OperatorComponent>();\n\n\tisPlacing = false;\n\tisConnecting = false;\n\tcanMoveConnection = true;\n\tisCreating = false;\n\n\tboardWidth = 2000;\n\tboardHeight = 1000;\n\n\tconnectingPort : PortComponent;\n\tconnectionRef : ViewContainerRef;\n\tsnackBar: MatSnackBar;\n\n\tcanDrag = () => { \n\t\treturn !this.isPlacing && !this.isConnecting \n\t};\n\n\tboardScale = 1;\n\n\tcreatingItem: any;\n\tcreatingItemOptions: any;\n\n\tcopiedItems: CopiedItem[] = [];\n\n\tstartCreating(creatingItem: any, options: any){\n\t\tthis.isCreating = true;\n\t\tthis.creatingItem = creatingItem;\n\t\tthis.creatingItemOptions = options;\n\t}\n\n\tstopCreating(){\n\t\tthis.isCreating = false;\n\t\tthis.creatingItem = null;\n\t\tthis.creatingItemOptions = null;\n\t}\n\n\tstartPlacing(){\n\t\tthis.isPlacing = true;\n\t}\n\n\tstopPlacing(){\n\t\tthis.isPlacing = false;\n\t}\n\n\tstartConnecting(portComponent: PortComponent){\n\t\tlet board = document.getElementById(\"board\");\n\t\tboard.classList.remove(\"infocus\");\n\t\tthis.isConnecting = true;\n\t\tthis.connectingPort = portComponent;\n\t}\n\n\tstopConnecting(){\n\t\tlet board = document.getElementById(\"board\");\n\t\tboard.classList.add(\"infocus\");\n\t\tboard.onmousemove = null;\n\t\tboard.ontouchmove = null;\n\t\tthis.isConnecting = false;\n\t\tthis.connectingPort = null;\n\t}\n\n\tshowSnack(message: string){\n\t\tthis.snackBar.open(message,\"×\", {\n\t\t\tduration: message.length * 115,\n\t\t\thorizontalPosition: \"right\",\n\t\t});\n\t}\n\n\tcopyItems(items: CopiedItem[]){\n\t\tif(items.length == 0)\n\t\t\treturn;\n\t\tthis.copiedItems = items;\n\t}\n\n\tpasteItem(x: number = -1, y: number = -1){\n\t\tlet components = [];\n\t\tlet connectionsList = [];\n\t\tfor(let item of this.copiedItems){\n\t\t\tconnectionsList = connectionsList.concat(item.outputConnectionsList);\n\t\t}\n\n\t\tlet minX = Number.MAX_VALUE;\n\t\tlet minY = Number.MAX_VALUE;\n\t\tlet maxX = -1;\n\t\tlet maxY = -1;\n\n\t\tthis.copiedItems.forEach(item => {\n\t\t\tminX = Math.min(item.options.X, minX);\n\t\t\tminY = Math.min(item.options.Y, minY);\n\t\t\tmaxX = Math.max(item.options.X + 80, maxX);\n\t\t\tmaxY = Math.max(item.options.Y + 80, maxY);\n\t\t})\n\n\t\tlet width = maxX - minX;\n\t\tlet height = maxY - minY;\n\n\t\tlet pasteOriginX = Math.min(x < 0 ? maxX + 40 : x + width, this.boardWidth);\n\t\tlet pasteOriginY = Math.min(y < 0 ? maxY + 40 : y + height, this.boardHeight);\n\n\t\tfor(let item of this.copiedItems){\n\t\t\tlet options = item.options;\n\n\t\t\tlet pasteX = pasteOriginX - width + (options.X - minX)\n\t\t\tlet pasteY = pasteOriginY - height + (options.Y - minY)\n\t\n\t\t\tlet component = this.createComponent(item.component, pasteX, pasteY, options);\n\t\t\tconnectionsList = connectionsList.map(conn => {\n\t\t\t\tif(conn.from === item.logicComponent.originID){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfrom: component.getLogicComponent().originID,\n\t\t\t\t\t\tto: conn.to,\n\t\t\t\t\t\tlineBreaks: conn.lineBreaks,\n\t\t\t\t\t\ttitle: conn.title\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(conn.to === item.logicComponent.originID){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfrom: conn.from,\n\t\t\t\t\t\tto: component.getLogicComponent().originID,\n\t\t\t\t\t\tlineBreaks: conn.lineBreaks,\n\t\t\t\t\t\ttitle: conn.title\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn conn;\n\t\t\t})\n\t\t\tcomponents.push(component);\n\t\t}\n\t\tfor(let connection of connectionsList){\n\n\t\t\tlet comp1 = components.find(comp => comp.getLogicComponent().originID == connection.from);\n\t\t\tlet comp2 = components.find(comp => comp.getLogicComponent().originID == connection.to);\n\n\t\t\tif(comp1 && comp2){\n\t\t\t\tlet comp1Initiated = false;\n\t\t\t\tlet comp2Initiated = false;\n\t\t\t\tcomp1.onViewInit.push(()=> {\n\t\t\t\t\tcomp1Initiated = true;\n\t\t\t\t\tif(comp2Initiated){\n\t\t\t\t\t\tthis.connectPorts(comp1.getPortComponent(true), comp2.getPortComponent(false), \n\t\t\t\t\t\tfalse, connection.lineBreaks.map(br => {return {x: pasteOriginX - width + (br.x - minX),y: pasteOriginY - height + (br.y - minY) }}), connection.title);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tcomp2.onViewInit.push(()=> {\n\t\t\t\t\tcomp2Initiated = true;\n\t\t\t\t\tif(comp1Initiated){\n\t\t\t\t\t\tthis.connectPorts(comp1.getPortComponent(true), comp2.getPortComponent(false), \n\t\t\t\t\t\tfalse, connection.lineBreaks.map(br => {return {x: pasteOriginX - width + (br.x - minX),y: pasteOriginY - height + (br.y - minY) }}), connection.title);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\treturn components;\n\t}\n\n\tconnectPorts(portComponent1: PortComponent, portComponent2: PortComponent, isReadOnly: boolean = false, lineBreaks: LineBreak[] = [], title: string = \"\"){\n\t\tlet factory : ComponentFactory<ConnectionComponent> = this.resolver.resolveComponentFactory(ConnectionComponent);\n\t\tlet c : ComponentRef<ConnectionComponent>  = this.connectionRef.createComponent(factory);\n\n\t\tlet logicConn = portComponent1.LogicPort.parent.connectTo(portComponent2.LogicPort.parent, portComponent1.IsOutput);\n\t\tif(logicConn == null){\n\t\t\tc.destroy();\n\t\t\treturn false;\n\t\t}\n\t\tlogicConn.lineBreaks = lineBreaks;\n\t\tlogicConn.title = title;\n\t\tc.instance.LogicConnection = logicConn;\n\t\tc.instance.isReadOnly = isReadOnly;\n\n\t\tc.instance.destroyComponent = () => {\n\t\t\tc.destroy();\n\t\t}\n\n\t\tc.instance.portComponent1 = portComponent1;\n\t\tc.instance.portComponent2 = portComponent2;\n\n\t\treturn true\n\t}\n\n\tpublic createComponent<T>(component: Type<T>, left = 100, top = 100, options: any, isReadOnly: boolean = false) {\n\t\tif(component == null) \n\t\t\treturn;\n\t\tlet factory  = this.resolver.resolveComponentFactory(component);\n\t\tlet c : any = this.connectionRef.createComponent(factory);\n\t\tc.instance.isReadOnly = isReadOnly;\n\t\tlet comp = c.instance.getLogicComponent();\n\n\t\tc.instance.destroyComponent = () => {\n\t\t\tc.destroy();\n\t\t}\n\n\t\tif(options != null){\n\t\t\tfor(let key of Object.keys(options)){\n\t\t\t\tcomp.options[key] = options[key];\n\t\t\t}\n\t\t}\n\t\t\n\t\tc.instance.hasChanged.subscribe(()=>{\n\t\t\tthis.componentChanged.emit();\n\t\t})\n\t\tc.instance.showContextMenu.subscribe((e)=>{\n\t\t\tthis.showComponentContextMenu.emit({\n\t\t\t\tx: c.instance.getLogicComponent().options.X + e.offsetX,\n\t\t\t\ty: c.instance.getLogicComponent().options.Y + e.offsetY,\n\t\t\t});\n\t\t})\n\n\t\tcomp.options.X = left;\n\t\tcomp.options.Y = top;\n\n\t\treturn c.instance;\n\t}\n\n\tconstructor(private resolver: ComponentFactoryResolver) {\n\t}\n}\n","import { HTTPMethod } from \"src/models/enums/HTTPMethod\";\n\nexport function UUID() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n}\n\nexport function arrayEquals(a1,a2){\n  for(let a of a1){\n    if(a2.indexOf(a) == -1)return false;\n  }\n  for(let a of a2){\n    if(a1.indexOf(a) == -1)return false;\n  }\n  return true;\n}\n\nexport function sleep (time) {\n  return new Promise((resolve) => setTimeout(resolve, time));\n}\n\nlet formattedDbMethod ={\n  \"Inherit\": \"Inherit\",\n  \"GET\": \"SELECT\",\n  \"POST\": \"INSERT\",\n  \"PUT\": \"UPDATE\",\n  \"PATCH\": \"UPDATE\",\n  \"DELETE\": \"DELETE\"\n}\n\nexport function getFormattedMethod(method: HTTPMethod, isDatabase: boolean){\n  return isDatabase ? formattedDbMethod[method.toString()] : method.toString();\n}\n\nexport function download(filename, text) {\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n    \n    element.style.display = 'none';\n    document.body.appendChild(element);\n    \n    element.click();\n    \n    document.body.removeChild(element);\n}\n\nexport function downloadPng(filename, image) {\n  var element = document.createElement('a');\n  element.setAttribute('href', image);\n  element.setAttribute('download', filename);\n  \n  element.style.display = 'none';\n  document.body.appendChild(element);\n  \n  element.click();\n  \n  document.body.removeChild(element);\n}\n\nexport function downloadSvg(filename, svg) {\n\n  var serializer = new XMLSerializer();\n  var source = serializer.serializeToString(svg);\n  \n  //add name spaces.\n  if(!source.match(/^<svg[^>]+xmlns=\"http\\:\\/\\/www\\.w3\\.org\\/2000\\/svg\"/)){\n      source = source.replace(/^<svg/, '<svg xmlns=\"http://www.w3.org/2000/svg\"');\n  }\n  if(!source.match(/^<svg[^>]+\"http\\:\\/\\/www\\.w3\\.org\\/1999\\/xlink\"/)){\n      source = source.replace(/^<svg/, '<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\"');\n  }\n  \n  //add xml declaration\n  source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n  \n  //convert svg source to URI data scheme.\n  var url = \"data:image/svg+xml;charset=utf-8,\"+encodeURIComponent(source);\n  \n  var element = document.createElement('a');\n  element.setAttribute('href', url);\n  element.setAttribute('download', filename);\n  \n  element.style.display = 'none';\n  document.body.appendChild(element);\n  \n  element.click();\n  \n  document.body.removeChild(element);\n}\n\nexport function clone(object: any): any {\n  var cloneObj = new (object.constructor as any);\n  for (var attribut in object) {\n    if (typeof object[attribut] === \"object\" && object[attribut] != null)\n      cloneObj[attribut] = clone(object[attribut]);\n    else\n      cloneObj[attribut] = object[attribut];\n  }\n  return cloneObj;\n}\n\nexport function createRoundedPath(coords, radius, close) {\n  let path = \"\"\n  const length = coords.length + (close ? 1 : -1)\n  for (let i = 0; i < length; i++) {\n    const a = coords[i % coords.length]\n    const b = coords[(i + 1) % coords.length]\n    const t = Math.min(radius / Math.hypot(b.x - a.x, b.y - a.y), 0.5)\n\n    if (i > 0) path += `Q${a.x},${a.y} ${a.x * (1 - t) + b.x * t},${a.y * (1 - t) + b.y * t}`\n\n    if (!close && i == 0) path += `M${a.x},${a.y}`\n    else if (i == 0) path += `M${a.x * (1 - t) + b.x * t},${a.y * (1 - t) + b.y * t}`\n\n    if (!close && i == length - 1) path += `L${b.x},${b.y}`\n    else if (i < length - 1) path += `L${a.x * t + b.x * (1 - t)},${a.y * t + b.y * (1 - t)}`\n  }\n  if (close) path += \"Z\"\n  return path\n}\n\nexport function createRoundedCanvasPath(ctx: CanvasRenderingContext2D, coords, radius) {\n  const length = coords.length -1\n  ctx.beginPath();\n  for (let i = 0; i < length; i++) {\n    const a = coords[i % coords.length]\n    const b = coords[(i + 1) % coords.length]\n    const t = Math.min(radius / Math.hypot(b.x - a.x, b.y - a.y), 0.5)\n    if (i > 0) {\n      ctx.quadraticCurveTo(a.x, a.y, a.x * (1 - t) + b.x * t, a.y * (1 - t) + b.y * t);\n    }\n    if (i == 0) {\n      ctx.moveTo(a.x, a.y);\n    }\n    if (i == length - 1) {\n      ctx.lineTo(b.x, b.y);\n      ctx.stroke()\n    }\n  }\n  ctx.closePath()\n}\n\n\n(function()\n{\n/* Usefull function */\nfunction dist2D(x1,y1,x2,y2)\n{\tvar dx = x2-x1;\n\tvar dy = y2-y1;\n\treturn Math.sqrt(dx*dx+dy*dy);\n};\n\n/* Add new properties on CanvasRenderingContext2D */\n(CanvasRenderingContext2D.prototype as any).textOverflow = \"\";\n(CanvasRenderingContext2D.prototype as any).textJustify = false;\n(CanvasRenderingContext2D.prototype as any).textStrokeMin = 0;\n\nvar state = [];\nvar save = CanvasRenderingContext2D.prototype.save;\nCanvasRenderingContext2D.prototype.save = function()\n{\tstate.push(\n\t\t{\ttextOverflow: this.textOverflow, \n\t\t\ttextJustify: this.textJustify, \n\t\t\ttextStrokeMin: this.textStrokeMin, \n\t\t});\n\tsave.call(this);\n};\n\nvar restore = CanvasRenderingContext2D.prototype.restore;\nCanvasRenderingContext2D.prototype.restore = function()\n{\trestore.call(this);\n\tvar s = state.pop();\n\tthis.textOverflow = s.textOverflow;\n\tthis.textJustify = s.textJustify;\n\tthis.textStrokeMin = s.textStrokeMin;\n};\n\n/* textPath function */\n\n(CanvasRenderingContext2D.prototype as any).textPath = function (text, path)\n{\t// Helper to get a point on the path, starting at dl \n\t// (return x, y and the angle on the path)\n\tvar di, dpos=0;\n\tvar pos=2;\n\tfunction pointAt(dl)\n\t{\tif (!di || dpos+di<dl)\n\t\t{ for (; pos<path.length; )\n\t\t\t{\tdi = dist2D(path[pos-2],path[pos-1], path[pos],path[pos+1]);\n\t\t\t\tif (dpos+di>dl) break;\n\t\t\t\tpos += 2;\n\t\t\t\tif (pos>=path.length) break;\n\t\t\t\tdpos += di;\n\t\t\t}\n\t\t}\n   \n\t\tvar x, y, dt = dl-dpos;\n\t\tif (pos>=path.length) \n\t\t{\tpos = path.length-2;\n\t\t}\n\n\t\tif (!dt) \n\t\t{\tx = path[pos-2];\n\t\t\ty = path[pos-1];\n\t\t}\n\t\telse\n\t\t{\tx = path[pos-2]+ (path[pos]-path[pos-2])*dt/di;\n\t\t\ty = path[pos-1]+ (path[pos+1]-path[pos-1])*dt/di;\n\t\t}\n\t\treturn [x, y, Math.atan2(path[pos+1]-path[pos-1], path[pos]-path[pos-2])];\n\t}\n\n\tvar letterPadding = this.measureText(\" \").width *0.25;\n  \n\t// Calculate length\n\tvar d = 0;\n\tfor (var i=2; i<path.length; i+=2)\n\t{\td += dist2D(path[i-2],path[i-1],path[i],path[i+1])\n\t}\n\tif (d < this.minWidth) return;\n\tvar nbspace = text.split(\" \").length -1;\n\n\t// Remove char for overflow\n\tif (this.textOverflow != \"visible\")\n\t{\tif (d < this.measureText(text).width + (text.length-1 + nbspace) * letterPadding)\n\t\t{\tvar overflow = (this.textOverflow==\"ellipsis\") ? '\\u2026' : this.textOverflow||\"\";\n\t\t\tvar dt = overflow.length-1;\n\t\t\tdo\n\t\t\t{\tif (text[text.length-1]===\" \") nbspace--;\n\t\t\t\ttext = text.slice(0,-1);\n\t\t\t} while (text && d < this.measureText(text+overflow).width + (text.length + dt + nbspace) * letterPadding)\n\t\t\ttext += overflow;\n\t\t}\n\t}\n\n\t// Calculate start point\n\tvar start = 0;\n\tswitch (this.textJustify || this.textAlign)\n\t{\tcase true: // justify\n\t\tcase \"center\":\n\t\tcase \"end\":\n\t\tcase \"right\":\n\t\t{\t// Justify\n\t\t\tif (this.textJustify) \n\t\t\t{\tstart = 0;\n\t\t\t\tletterPadding = (d - this.measureText(text).width) / (text.length-1 + nbspace);\n\t\t\t}\n\t\t\t// Text align\n\t\t\telse\n\t\t\t{\tstart = d - this.measureText(text).width - (text.length + nbspace) * letterPadding;\n\t\t\t\tif (this.textAlign == \"center\") start /= 2;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\t// left\n\t\tdefault: break;\n\t}\n  \n\t// Do rendering\n\tfor (var t=0; t<text.length; t++)\n\t{\tvar letter = text[t];\n\t\tvar wl = this.measureText(letter).width;\n    \n\t\tvar p = pointAt(start+wl/2);\n\n\t\tthis.save();\n\t\tthis.textAlign = \"center\";\n\t\tthis.translate(p[0], p[1]);\n\t\tthis.rotate(p[2]);\n\t\tif (this.lineWidth>0.1) this.strokeText(letter,0,0);\n\t\tthis.fillText(letter,0,0);\n\t\tthis.restore();\n\t\tstart += wl+letterPadding*(letter==\" \"?2:1);\n\t}\n  \n};\n\n})();\n\nexport function getRateFromOutputRate(outputRate){\n\tlet minRate = 0.75;\n\tlet maxRate = 2.5;\n\tlet maxOutputRate = 10;\n\tlet diff = maxRate - minRate;\n\treturn minRate + (outputRate / maxOutputRate) * diff;\n}\n","import * as objectHash from 'object-hash';\nimport { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { Endpoint } from \"./Endpoint\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Options } from \"./Options\";\nimport { Port } from \"./Port\";\nimport { RequestData } from \"./RequestData\";\n\nexport class Proxy extends LogicComponent implements IDataOperator{\n    inputPort: Port;\n    outputPort: Port;\n    connectionTable: {[id:string]:Connection} = {};\n    streamConnectionTable: { [id:string]:Connection } = {};\n    options: ProxyOptions;\n    fillColor = false;\n    color = \"#283c86\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this, false, true);        \n        this.outputPort = new Port(this, true, true);        \n        this.options = new ProxyOptions();\n        this.options.title = \"Proxy\";\n    }\n\n    async receiveData(data: RequestData, fromOutput:boolean) {\n        if(fromOutput){\n            let targetConnection = this.connectionTable[data.responseId];\n            if(targetConnection == null)\n                throw new Error(\"Connection doesn't exist (response to unknown request)\");\n            if(data.header.stream != true) {\n                this.connectionTable[data.responseId] = null;  // reset request id\n                this.streamConnectionTable[data.responseId] = null;\n            }\n            this.fireReceiveData(data);\n            let result = await this.inputPort.sendData(data,targetConnection);\n            if(!result && data.header.stream){\n                data.header.stream = false;\n                data.requestId = data.responseId;\n                data.responseId = null;\n                let res = this.outputPort.sendData(data,data.origin);\n                if(res){\n                    this.connectionTable[data.responseId] = null;\n                    this.streamConnectionTable[data.responseId] = null;\n                }\n            }\n        }\n        else{\n            if(data.requestId == null )\n                throw new Error(\"requestId can not be null.\");\n\n            this.fireReceiveData(data);\n\n            if(this.streamConnectionTable[data.requestId] != null){\n                data.origin = this.streamConnectionTable[data.requestId];\n                data.originID = this.originID;\n                await this.outputPort.sendData(data,this.streamConnectionTable[data.requestId]);\n                return;\n            }\n\n            this.connectionTable[data.requestId] = data.origin;\n\n            // Find connection that has given endpoint\n            let targetEndpoint = null;\n            let targetConnection = null;\n            for(let connection of this.outputPort.connections){\n                targetEndpoint = connection.getOtherPort(this.outputPort).parent\n                    .getAvailableEndpoints().find(ep => ep.url === data.header.endpoint.endpoint.url);\n                if(targetEndpoint){\n                    targetConnection = connection;\n                    break;\n                }\n            }\n            if(targetEndpoint == null){\n                this.fireShowStatusCode(404);\n                return;\n            }\n            data.origin = targetConnection;\n            data.originID = this.originID;\n            this.streamConnectionTable[data.requestId] = data.origin;\n            await this.outputPort.sendData(data,data.origin);\n        }\n    }\n\n    /**\n     * \n     * Proxy can't send data on its own\n     */\n    sendData(request: RequestData): void {}\n\n    getAvailableEndpoints(): Endpoint[]{\n       let connectableEndpoints :Endpoint[] = [];\n        for(let connection of this.outputPort.connections){\n            connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints().forEach(endpoint =>{\n                let duplicate = (connectableEndpoints.find(ep => ep.url === endpoint.url) != null)\n                if(!duplicate)\n                    connectableEndpoints.push(endpoint);\n            });        \n        }\n        return connectableEndpoints;\n    }\n}\n\nexport class ProxyOptions extends Options{\n}\n\n","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { arrayEquals, sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { Connection } from \"./Connection\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { Endpoint, EndpointRef } from \"./Endpoint\";\nimport { APIType } from \"./enums/APIType\";\nimport { gRPCMode } from \"./enums/gRPCMode\";\nimport { EndpointActionHTTPMethod, HTTPMethod } from \"./enums/HTTPMethod\";\nimport { Protocol } from \"./enums/Protocol\";\nimport { Port } from \"./Port\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\n\nexport class API extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    connectionTable: { [id:string]: Connection } = {};\n    options: APIOptions;\n    color: string = \"#4CA1AF\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this, false, true);        \n        this.outputPort = new Port(this, true, true);       \n        this.options = new APIOptions(); \n        this.options.title = \"API\";\n        let initialEndpoint = new Endpoint(\"api/posts\", [HTTPMethod.GET,HTTPMethod.POST,HTTPMethod.PUT,HTTPMethod.DELETE,])\n        initialEndpoint.protocol = Protocol.HTTP;\n        this.options.endpoints = [\n            initialEndpoint\n        ];\n    }\n\n    async receiveData(data: RequestData, fromOutput:boolean) {\n        if(fromOutput){\n            // API received data from action \n            let targetConnection = this.connectionTable[data.responseId]\n            this.fireReceiveData(data);\n            if(targetConnection == null) \n                return;\n            this.connectionTable[data.responseId] = null; // reset request id\n        }\n        else{\n            // Null check\n            if(data.requestId == \"\" || data.requestId == null) \n                throw new Error(\"Request ID can not be null\");\n            if(data.header.endpoint == null) \n                throw new Error(\"Endpoint can not be null\")\n\n            let targetEndpoint = this.getTargetEndpoint(data);\n            if(targetEndpoint == null)\n                return;\n\n            this.fireReceiveData(data);\n\n\n            if(this.connectionTable[data.requestId] != null){ // Check if the api is already streaming to this connection\n                // Client sent data to stream\n                if(data.header.stream == false && targetEndpoint.grpcMode != gRPCMode.Unary || targetEndpoint.protocol == Protocol.WebSockets) {// Client wants to end stream\n                    this.connectionTable[data.requestId] = null;\n                    return;\n                }\n            }\n            else{\n                this.connectionTable[data.requestId] = data.origin; // Save connection to request package\n                if(data.header.stream){\n                    if(targetEndpoint.grpcMode != gRPCMode.Unary || targetEndpoint.protocol == Protocol.WebSockets){\n                        // Client wants to start stream\n                        /*\n                        This streaming process feels kinda clunky, it will be commented for now\n                        this.stream(this.getResponse(data), targetEndpoint);\n                        */\n                        return;\n                    }\n                }\n            }\n          \n            // Send data to every action\n            for(let action of targetEndpoint.actions){\n                // Get connection to given action endpoint\n                let targetConnection: Connection;\n\n                for(let connection of this.outputPort.connections){\n                    let endpoints = connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n                    if(action.endpoint != null && endpoints.find(endpoint => endpoint.url == action.endpoint.url && arrayEquals(endpoint.supportedMethods,action.endpoint.supportedMethods)) != null ){\n                        targetConnection = connection;\n                        break;\n                    }\n                }\n                if(targetConnection == null)\n                    continue;\n                // Create new data package\n                let request = new RequestData();\n                let endpointRef = new EndpointRef();\n                endpointRef.endpoint = action.endpoint;\n                endpointRef.method = EndpointActionHTTPMethod[action.method] == \"Inherit\" ? data.header.endpoint.method : HTTPMethod[EndpointActionHTTPMethod[action.method]]\n                request.header = new RequestDataHeader(endpointRef,action.endpoint.protocol);\n\n                request.origin = targetConnection;\n                request.originID = this.originID;\n                request.requestId = UUID();\n\n                if(action.asynchronous){\n                    this.outputPort.sendData(request, targetConnection);\n                }\n                else{\n                    await this.outputPort.sendData(request, targetConnection);\n                    this.connectionTable[request.requestId] = request.origin;\n                }\n            }\n\n            // Send response back to client\n            if(data.sendResponse)\n                await this.sendData(this.getResponse(data));\n        }\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId] || response.origin;\n        if(targetConnection == null)\n            throw new Error(\"target connection is null\");\n        if(response.header.stream != true) // reset request id\n            this.connectionTable[response.responseId] = null; \n        let res = await this.inputPort.sendData(response, targetConnection);\n        if(!res && response.header.stream) // End the stream if sending data didn't success\n            this.connectionTable[response.responseId] = null;\n    }\n\n    async stream(data: RequestData, streamingEndpoint: Endpoint){\n        await sleep(700);\n        if(this.connectionTable[data.responseId] == null ||(\n            streamingEndpoint.grpcMode != gRPCMode[\"Server Streaming\"] &&\n            streamingEndpoint.grpcMode != gRPCMode[\"Bidirectional Streaming\"] && \n            streamingEndpoint.protocol != Protocol.WebSockets) ||\n            this.options.endpoints.indexOf(streamingEndpoint) == -1) return;\n        await this.sendData(data);\n        await this.stream(data, streamingEndpoint);\n    }\n}\n\nexport class APIOptions extends EndpointOptions{\n    type: APIType = APIType.REST;\n}","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\nimport { Options } from \"./Options\";\nimport { Port } from \"./Port\";\nimport { UUID } from \"src/shared/ExtensionMethods\";\nimport { Endpoint } from \"./Endpoint\";\nimport { HTTPMethod } from \"./enums/HTTPMethod\";\nimport { HTTPStatus } from \"./enums/HTTPStatus\";\nimport { ReplacementPolicy } from \"./enums/ReplacementPolicy\";\nimport { WritePolicy } from \"./enums/WritePolicy\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Database } from \"./Database\";\n\nexport class Cache extends LogicComponent implements IDataOperator{\n\n    inputPort: Port;\n    outputPort: Port\n    options: CacheOptions;\n    connectionTable: { [id:string]: Connection } = {};\n    color = \"#b21f1f\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this,false,true);      \n        this.outputPort = new Port(this,true,false);      \n        this.options = new CacheOptions();  \n        this.options.title = \"Cache\";\n    }\n\n    async receiveData(request: RequestData, fromOutput = false) {\n        if(fromOutput){\n            let targetConnection = this.connectionTable[request.responseId]\n            if(targetConnection == null) return; \n            await this.sendData(request);\n        }\n        else{\n            this.fireReceiveData(request);\n            if(request.header.endpoint == null) return;\n            this.connectionTable[request.requestId] = request.origin;\n            if(request.header.endpoint.method == HTTPMethod.GET && request.sendResponse){ // Client wants to write\n                let cacheHit = Math.random() > 0.43 ? true : false; // Random chance of cache hit\n                if(cacheHit){\n                    let response = new RequestData();\n                    response.responseId = request.requestId;\n                    response.requestId = UUID();\n                    response.origin = request.origin;\n                    response.originID = this.originID;\n                    response.header = new RequestDataHeader(request.header.endpoint, request.header.protocol);\n                    this.fireShowStatusCode(HTTPStatus[\"Cache Hit\"])\n                    await this.sendData(response);\n                    return;\n                }\n                this.fireShowStatusCode(HTTPStatus[\"Cache Miss\"])\n            }\n\n            if(this.outputPort.connections.length == 0) \n                return;\n\n            switch(this.options.writePolicy){\n                case WritePolicy[\"Write-Through\"]:\n                    await this.writeThrough(request);\n                    break;\n                case WritePolicy[\"Write-Back (Behind)\"]:\n                    await this.writeBack(request);\n                    break;\n                default:\n                    await this.writeThrough(request);\n                    break;            \n            }\n        }\n    }\n\n    async writeThrough(data: RequestData){\n        // write to cache, then database, if both succeeded, return success\n        data.origin = this.outputPort.connections[0];\n        data.originID = this.originID;\n        // Write to cache\n\n        // Send to DB\n        await this.outputPort.sendData(data);\n    }\n\n\n    async writeBack(data: RequestData){\n        // write to cache, send success, write asynchronously to database\n        data.origin = this.outputPort.connections[0];\n        data.originID = this.originID;\n        // Write to cache\n\n        // Send to DB\n        if(data.header.endpoint.method == HTTPMethod.GET)\n            await this.outputPort.sendData(data);\n        else{\n            this.outputPort.sendData(data);\n            data.responseId = data.requestId;\n            data.requestId = UUID();\n            if(data.sendResponse)\n                await this.sendData(data);\n        }\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId]\n        if(targetConnection == null)\n            throw new Error(\"Target connection can not be null\");\n        this.connectionTable[response.responseId] = null; // reset request id\n        await this.inputPort.sendData(response, targetConnection);\n    }\n\n    canConnectTo(port: Port, connectingWithOutput: boolean){\n        if(!super.canConnectTo(port, connectingWithOutput))\n            return false;\n        // Output of cache can connect only to database\n        if(!connectingWithOutput)\n            return true;\n        if(port.parent instanceof Database)\n            return true;\n        this.fireFailedConnect({message: \"Output of Cache can only be connected to Database.\"});\n        return false;\n    }\n\n    getAvailableEndpoints(): Endpoint[]\n    {\n        if(this.outputPort.connections.length > 0)\n            return this.outputPort.connections[0].getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n        return [];\n    }\n}\n\nexport class CacheOptions extends Options {\n    replacementPolicy: ReplacementPolicy = ReplacementPolicy[\"Least Frequently Used\"];\n    writePolicy: WritePolicy = WritePolicy[\"Write-Through\"];\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { IDataOperator } from 'src/interfaces/IDataOperator';\n\n@Component({\n\tselector: 'slider-described',\n\ttemplateUrl: './slider-described.component.html',\n\tstyleUrls: ['./slider-described.component.scss']\n})\nexport class SliderDescribedComponent implements OnInit {\n\n\tconstructor() { }\n\n\t@Input() Model: IDataOperator;\n\t@Input() Title: string = \"Performance: \";\n\t@Input() Property: string = \"performance\";\n\t@Input() AfterChange;\n\t@Input() Tooltip: string = \"Changes the throughput of the component.\"\n\n\tngOnInit(): void {\n\t}\n}\n","<div>\n    <span class=\"property-name endpoint-title\">{{Title}} <info-tooltip [Message]=\"Tooltip\"></info-tooltip></span>\n    <div>\n        <mat-slider\n            thumbLabel\n            [(ngModel)]=\"Model.options[Property]\"\n            tickInterval=\"1\"\n            step=\"1\"\n            min=\"1\"\n            max=\"10\"\n            (change)=\"AfterChange()\"\n            aria-label=\"units\"></mat-slider>\n        <div class=\"mat-slider-description\" \n        [class.low]=\"Model.options[Property] < 4\" \n        [class.medium]=\"Model.options[Property] < 8 && Model.options[Property] >= 4\" \n        [class.high]=\"Model.options[Property] >= 8\">\n            <span>Low</span>\n            <span>Medium</span>\n            <span>High</span>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ClientCluster } from 'src/models/ClientCluster';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'clientcluster',\n\ttemplateUrl: './clientcluster.component.html',\n\tstyleUrls: ['./clientcluster.component.scss']\n})\nexport class ClientclusterComponent extends OperatorComponent implements OnInit {\n\n\tLogicClientCluster: ClientCluster = new ClientCluster();\n\n\tngAfterViewInit(): void {\n\t\tthis.Init(true);\n  \t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicClientCluster;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new ClientCluster();\n\t\treturn c.color;\n\t}\n}\n","<div\n#anchorRef\n[class.side-menu]=\"isReadOnly\"\n[style.left.px]=\"LogicClientCluster.options.X \"\n[style.top.px]=\"LogicClientCluster.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <img src=\"./assets/clientcluster.svg\">\n    </div>    \n</div>\n<div *ngIf=\"isReadOnly\" \n[style.left.px]=\"LogicClientCluster.options.X \"\n[style.top.px]=\"LogicClientCluster.options.Y\" class=\"read-only-controls\">\n    <button *ngIf=\"!LogicClientCluster.isSendingData\" (click)=\"LogicClientCluster.startSendingData(); cdRef.detectChanges()\">\n        <img src=\"./assets/send.svg\">\n    </button>\n    <button *ngIf=\"LogicClientCluster.isSendingData\" (click)=\"LogicClientCluster.stopSendingData(); cdRef.detectChanges()\">\n        <img src=\"./assets/send.svg\" style=\"transform: rotateY(180deg);\">\n    </button>\n</div>\n<div style=\"display:none\">\n    <div #options>\n        <slider-described class=\"mt\"\n        [Model]=\"LogicClientCluster\"\n        [Title]=\"'Output rate'\"\n        [Property]=\"'outputRate'\"\n        [AfterChange]=\"afterChange\"\n        [Tooltip]=\"'Change the speed at which data is sent.'\"\n        ></slider-described>\n    </div>\n    <div #actions>\n        <div class=\"options-actions\">\n            <div class=\"actions-container\">\n                <button *ngIf=\"!LogicClientCluster.isSendingData\"\n                 (click)=\"LogicClientCluster.startSendingData()\">Start sending data</button>\n                <button *ngIf=\"LogicClientCluster.isSendingData\"\n                 (click)=\"LogicClientCluster.stopSendingData()\">Stop sending data</button>\n            </div>\n        </div>\n    </div>\n</div>","import * as objectHash from 'object-hash';\nimport { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { Endpoint } from \"./Endpoint\";\nimport { BalancingAlgorithm } from \"./enums/BalancingAlgorithm\";\nimport { LoadBalancerType } from \"./enums/LoadBalancerType\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Options } from \"./Options\";\nimport { Port } from \"./Port\";\nimport { RequestData } from \"./RequestData\";\n\nexport class LoadBalancer extends LogicComponent implements IDataOperator{\n    inputPort: Port;\n    outputPort: Port;\n    connectionTable: {[id:string]:Connection} = {};\n    streamConnectionTable: { [id:string]:Connection } = {};\n    options: LoadBalancerOptions;\n    color = \"#021B79\";\n\n    roundRobinIndex = -1;\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this, false, true);        \n        this.outputPort = new Port(this, true, true);        \n        this.options = new LoadBalancerOptions();\n        this.options.title = \"Load Balancer\";\n    }\n\n    async receiveData(data: RequestData, fromOutput:boolean) {\n        if(fromOutput){\n            let targetConnection = this.connectionTable[data.responseId];\n            if(targetConnection == null)\n                throw new Error(\"Connection doesn't exist (response to unknown request)\");\n            if(data.header.stream != true) {\n                this.connectionTable[data.responseId] = null;  // reset request id\n                this.streamConnectionTable[data.responseId] = null;\n            }\n            this.fireReceiveData(data);\n            let result = await this.inputPort.sendData(data,targetConnection);\n            if(!result && data.header.stream){\n                data.header.stream = false;\n                data.requestId = data.responseId;\n                data.responseId = null;\n                let res = this.outputPort.sendData(data,data.origin);\n                if(res){\n                    this.connectionTable[data.responseId] = null;\n                    this.streamConnectionTable[data.responseId] = null;\n                }\n            }\n        }\n        else{\n            if(data.requestId == null )\n                throw new Error(\"requestId can not be null. Please specify property requestId of RequestData\");\n\n            this.fireReceiveData(data);\n\n            if(this.streamConnectionTable[data.requestId] != null){\n                data.origin = this.streamConnectionTable[data.requestId];\n                data.originID = this.originID;\n                await this.outputPort.sendData(data,this.streamConnectionTable[data.requestId]);\n                return;\n            }\n\n            this.connectionTable[data.requestId] = data.origin;\n\n            switch(this.options.algorithm){\n                case BalancingAlgorithm[\"Round Robin\"]:\n                    await this.roundRobin(data);\n                    break;\n                case BalancingAlgorithm[\"IP Hash\"]:\n                    await this.ipHash(data);\n                    break;\n                case BalancingAlgorithm[\"Least Connections\"]:\n                    await this.leastConnections(data);\n                    break;\n                case BalancingAlgorithm[\"URL Hash\"]:\n                    await this.urlHash(data);\n                    break;   \n                default:\n                    await this.roundRobin(data);\n                    break;            \n            }\n        }\n    }\n\n    async roundRobin(data: RequestData){\n        let nodesLength = this.outputPort.connections.length;\n        this.roundRobinIndex++;\n        if(this.roundRobinIndex >= nodesLength){\n            this.roundRobinIndex = 0;\n        }\n        data.origin = this.outputPort.connections[this.roundRobinIndex];\n        data.originID = this.originID;\n        this.streamConnectionTable[data.requestId] = data.origin;\n        await this.outputPort.sendData(data,data.origin);\n    }\n\n    async ipHash(data: RequestData){\n        let hash = objectHash({id:data.originID}).substr(0,2);\n        let hashInt = parseInt(hash,16);\n        let length = this.outputPort.connections.length;\n        let connectionIndex = hashInt % length;\n        data.origin = this.outputPort.connections[connectionIndex];\n        data.originID = this.originID;\n        this.streamConnectionTable[data.requestId] = data.origin;\n        await this.outputPort.sendData(data, this.outputPort.connections[connectionIndex]);\n    }\n\n    async leastConnections(data: RequestData){\n        let allConnections: Connection[] = [];\n        let keys = Object.keys(this.streamConnectionTable);\n        for(let i = keys.length-1; i >= 0; i--){\n            let conn = keys[i];\n            if(this.streamConnectionTable[conn] == null) \n                break;\n            allConnections.push(this.streamConnectionTable[conn]);\n        }\n        let least = this.outputPort.connections[0];\n        let leastNum = Number.MAX_VALUE;\n        for(let conn of this.outputPort.connections){\n            let length = allConnections.filter(x => x==conn).length;\n            if(length < leastNum){\n                least = conn;\n                leastNum = length;\n            }\n        }\n        data.origin = least;\n        data.originID = this.originID;\n        this.streamConnectionTable[data.requestId] = data.origin;\n        await this.outputPort.sendData(data, least);\n    }\n\n    async urlHash(data: RequestData){\n        let url: string;\n        if(data.header.endpoint.endpoint == null) \n            url = \"/\";\n        else \n            url = data.header.endpoint.endpoint.url;\n        let hash = objectHash({id:url}).substr(0,2);\n        let hashInt = parseInt(hash,16);\n        let length = this.outputPort.connections.length;\n        let connectionIndex = hashInt % length;\n        data.origin = this.outputPort.connections[connectionIndex];\n        data.originID = this.originID;\n        this.streamConnectionTable[data.requestId] = data.origin;\n        await this.outputPort.sendData(data, this.outputPort.connections[connectionIndex]);\n    }\n\n    /**\n     * \n     * This method currently does nothing for LoadBalancer\n     */\n    sendData(request: RequestData): void {}\n\n    getAvailableEndpoints(): Endpoint[]{\n       let connectableEndpoints :Endpoint[] = [];\n        for(let connection of this.outputPort.connections){\n            connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints().forEach(endpoint =>{\n                let duplicate = (connectableEndpoints.find(ep => ep.url === endpoint.url) != null)\n                if(!duplicate)\n                    connectableEndpoints.push(endpoint);\n            });        \n        }\n        return connectableEndpoints;\n    }\n}\n\nexport class LoadBalancerOptions extends Options{\n    type: LoadBalancerType = LoadBalancerType[\"Layer 7\"];\n    algorithm: BalancingAlgorithm = BalancingAlgorithm[\"Round Robin\"];\n}\n\n","import { EventEmitter, Injectable, Output } from '@angular/core';\nimport { LineBreak } from 'src/models/Connection';\nimport { EventDispatcher, Handler } from 'src/models/Shared/EventDispatcher';\nimport { ConnectionComponent } from './board/components/connection/connection.component';\nimport { OperatorComponent } from './board/components/Shared/OperatorComponent';\n\nclass StopSelectingEvent {\n\ttop: number;\n\tleft: number;\n\twidth: number;\n\theight: number;\n}\n\ninterface ChangeSelectionEvent {}\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class SelectionService {\n\t@Output() onStopSelecting = new EventEmitter<StopSelectingEvent>();\n\t@Output() onDeleteLineBreak = new EventEmitter();\n\n\tprevX: number;\n\tprevY: number;\n\n\tcurrentConnectionSelection: ConnectionComponent;\n\tcurrentLineBreakSelection: LineBreak;\n\tcurrentLineBreakList: LineBreak[];\n\tcurrentConnectionSelections: ConnectionComponent[] = [];\n\tcurrentSelections: OperatorComponent[] = [];\n\n\tselectionRect: HTMLDivElement;\n\n\tselectionStartX: number;\n\tselectionStartY: number;\n\n\tselectionClientX: number;\n\tselectionClientY: number;\n\n\tselectionPrevX: number;\n\tselectionPrevY: number;\n\n\tselectionWidth = 0;\n\tselectionHeight = 0;\n\n\tselectionScale: number = 1;\n\n\taddSelection(selection: OperatorComponent, multiple: boolean = false){\n\t\tif(this.currentSelections.indexOf(selection) == -1){ // Add to current selections\n\t\t\tif(multiple){ // Add to current multiple selections\n\t\t\t\tselection.anchorRef.nativeElement.classList.add(\"is-current-selection\")\n\t\t\t\tselection.cdRef.reattach();\n\t\t\t\tthis.currentSelections.push(selection);\n\t\t\t\t// Look if the component is connected to already selected component\n\t\t\t\tlet selectionOutputPort = selection.getLogicComponent().getPort(true);\n\t\t\t\tlet selectionInputPort = selection.getLogicComponent().getPort(false);\n\t\t\t\tfor(let component of this.currentSelections){\n\t\t\t\t\tlet logicComponent = component.getLogicComponent();\n\t\t\t\t\tlet outputPort = logicComponent.getPort(true);\n\t\t\t\t\tlet inputPort = logicComponent.getPort(false);\n\t\t\t\t\tif(outputPort){\n\t\t\t\t\t\tif(selectionInputPort){\n\t\t\t\t\t\t\tlet logicConnection = outputPort.connections.find(connection =>\n\t\t\t\t\t\t\t\tconnection.getOtherPort(outputPort) === selectionInputPort\t\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tif(logicConnection != null){\n\t\t\t\t\t\t\t\tlet comp = selection.getPortComponent(false).getConnectionComponent(logicConnection);\n\t\t\t\t\t\t\t\tif(comp)\n\t\t\t\t\t\t\t\t\tthis.currentConnectionSelections.push(comp);\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\t\t\t\t\tcomp = selection.getPortComponent(false).getConnectionComponent(logicConnection);\n\t\t\t\t\t\t\t\t\t\tif(comp)\n\t\t\t\t\t\t\t\t\t\t\tthis.currentConnectionSelections.push(comp);\n\t\t\t\t\t\t\t\t\t}, 50);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(inputPort){\n\t\t\t\t\t\tif(selectionOutputPort){\n\t\t\t\t\t\t\tlet logicConnection = inputPort.connections.find(connection =>\n\t\t\t\t\t\t\t\tconnection.getOtherPort(inputPort) === selectionOutputPort\t\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tif(logicConnection != null){\n\t\t\t\t\t\t\t\tlet comp = selection.getPortComponent(true).getConnectionComponent(logicConnection);\n\t\t\t\t\t\t\t\tif(comp)\n\t\t\t\t\t\t\t\t\tthis.currentConnectionSelections.push(comp);\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tsetTimeout(()=>{\n\t\t\t\t\t\t\t\t\t\tcomp = selection.getPortComponent(true).getConnectionComponent(logicConnection);\n\t\t\t\t\t\t\t\t\t\tif(comp)\n\t\t\t\t\t\t\t\t\t\t\tthis.currentConnectionSelections.push(comp);\n\t\t\t\t\t\t\t\t\t}, 50);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\telse{ // Set as currently selected\n\t\t\t\tfor(let oldSelection of this.currentSelections){\n\t\t\t\t\toldSelection.anchorRef.nativeElement.classList.remove(\"is-current-selection\")\n\t\t\t\t\toldSelection.cdRef.detach();\n\t\t\t\t}\n\t\t\t\tselection.cdRef.reattach();\n\t\t\t\tselection.anchorRef.nativeElement.classList.add(\"is-current-selection\")\n\t\t\t\tthis.currentSelections = [selection];\n\t\t\t\tthis.clearCurrentConnectionSelections();\n\t\t\t}\n\t\t}\n\t\tthis.clearConnectionSelection();\n\t\tthis.clearLineBreakSelection();\n\t\t\n\t\tthis.fireChangeSelection({});\n\t}\n\n\tclearSelection(){\n\t\tfor(let selection of this.currentSelections){\n\t\t\tselection.anchorRef.nativeElement.classList.remove(\"is-current-selection\")\n\t\t\tselection.cdRef.detach();\n\t\t}  \n\t\tthis.currentSelections = [];\n\t\tthis.fireChangeSelection({});\n\t}\n\n\t// Connection\n\tsetConnectionSelection(selection: ConnectionComponent){\n\t\tif(selection != this.currentConnectionSelection){\n\t\t\tif(this.currentConnectionSelection != null){\n\t\t\t\tthis.currentConnectionSelection.mainPath.nativeElement.classList.remove(\"is-current-selection\")\n\t\t\t}\n\t\t\tselection.mainPath.nativeElement.classList.add(\"is-current-selection\")\n\t\t\tthis.currentConnectionSelection = selection;\n\t\t\tthis.clearSelection();\n\t\t\tthis.clearLineBreakSelection();\n\t\t\tthis.clearCurrentConnectionSelections();\n\t\t\tthis.fireChangeSelection({});\n\t\t}\n\t}\n\n\tclearConnectionSelection(){\n\t\tif(this.currentConnectionSelection != null){\n\t\t\tthis.currentConnectionSelection.mainPath.nativeElement.classList.remove(\"is-current-selection\")\n\t\t\tthis.currentConnectionSelection = null;\n\t\t\tthis.fireChangeSelection({});\n\t\t}  \n\t}\n\n\t// LineBreak\n\tsetLineBreakSelection(selection: LineBreak, list: LineBreak[]){\n\t\tif(selection != this.currentLineBreakSelection){\n\t\t\tthis.currentLineBreakSelection = selection;\n\t\t\tthis.currentLineBreakList = list;\n\t\t\tthis.clearSelection();\n\t\t\tthis.clearConnectionSelection();\n\t\t\tthis.fireChangeSelection({});\n\t\t}\n\t}\n\n\tclearLineBreakSelection(){\n\t\tif(this.currentLineBreakSelection != null){\n\t\t\tthis.currentLineBreakList = [];\n\t\t\tthis.currentLineBreakSelection = null;\n\t\t\tthis.fireChangeSelection({});\n\t\t}  \n\t}\n\n\tclearCurrentConnectionSelections(){\n\t\tthis.currentConnectionSelections = [];\n\t}\n\n\t/**\n\t * Returns true if something was deleted, false otherwise\n\t */\n\tdeleteSelection(): boolean{\n\t\tif(this.currentConnectionSelection == null && this.currentSelections.length == 0 && this.currentLineBreakSelection == null)\n\t\t\treturn false;\n\t\tif(this.currentConnectionSelection){\n\t\t\tthis.currentConnectionSelection.destroySelf();\n\t\t\treturn true;\n\t\t}\n\t\telse if(this.currentLineBreakSelection){\n\t\t\tlet index = this.currentLineBreakList.findIndex(b => b.x === this.currentLineBreakSelection.x && b.y === this.currentLineBreakSelection.y);\n\t\t\tif(index === -1)\n\t\t\t\treturn false;\n\t\t\tthis.currentLineBreakList.splice(index, 1);\n\t\t\tthis.onDeleteLineBreak.emit();\n\t\t\treturn true;\n\t\t}\n\t\tfor(let selection of this.currentSelections){\n\t\t\tselection.destroySelf();    \n\t\t}\n\t\tthis.clearSelection();\n\t\tthis.clearLineBreakSelection();\n\t\tthis.clearCurrentConnectionSelections();\n\t\tthis.clearConnectionSelection();\n\t\treturn true;\n\t}\n\n\tstartSelecting(e: MouseEvent, scale: number){\n\t\tthis.clearConnectionSelection();\n\t\tthis.clearLineBreakSelection();\n\t\tthis.clearCurrentConnectionSelections();\n\t\tthis.clearSelection();\n\t\tlet board = document.getElementById(\"board\");\n\t\tlet rect = document.createElement(\"div\");\n\t\trect.style.left = `${e.clientX}px`;\n\t\trect.style.top = `${e.clientY}px`;\n\t\trect.style.width = \"0px\";\n\t\trect.style.height = \"0px\";\n\t\trect.className = \"selection-rect\"\n\t\trect.style.display = \"none\";\n\t\tboard.appendChild(rect);\n\n\t\tthis.selectionRect = rect;\n\t\tthis.selectionStartX = e.offsetX;\n\t\tthis.selectionStartY = e.offsetY;\n\n\t\tthis.selectionClientX = e.clientX;\n\t\tthis.selectionClientY = e.clientY;\n\n\t\tthis.selectionPrevX = e.clientX;\n\t\tthis.selectionPrevY = e.clientY;\n\n\t\tthis.selectionWidth = 0;\n\t\tthis.selectionHeight = 0;\n\n\t\tthis.selectionScale = scale;\n\n\t\twindow.addEventListener(\"mousemove\", this.moveSelectionRect);\n\t\twindow.addEventListener(\"mouseup\", this.stopSelecting);\n\t}\n\n\tstopSelecting = () => {\n\t\tthis.onStopSelecting.emit({ \n\t\t\ttop: parseInt(this.selectionRect.style.top), \n\t\t\tleft: parseInt(this.selectionRect.style.left),\n\t\t\twidth: Math.abs(this.selectionWidth),\n\t\t\theight: Math.abs(this.selectionHeight)\n\t\t});\n\t\twindow.removeEventListener(\"mousemove\", this.moveSelectionRect);\n\t\twindow.removeEventListener(\"mouseup\", this.stopSelecting);\n\t\tdocument.getElementById(\"board\").removeChild(this.selectionRect);\n\t\tthis.selectionRect = null;\n\t}\n\n\tmoveSelectionRect = (e: MouseEvent) =>{\n\t\tthis.selectionRect.style.display = \"block\";\n\t\tlet diffX = (this.selectionPrevX - e.clientX) / this.selectionScale;\n\t\tlet diffY = (this.selectionPrevY - e.clientY) / this.selectionScale;\n\n\t\tthis.selectionWidth -= diffX;\n\t\tthis.selectionHeight -= diffY;\n\n\n\t\tthis.selectionRect.style.width = Math.abs(this.selectionWidth).toString() + \"px\";\n\t\tthis.selectionRect.style.left = e.clientX < this.selectionClientX ? (this.selectionStartX + this.selectionWidth).toString() + \"px\" : this.selectionStartX.toString() + \"px\";\n\n\t\tthis.selectionRect.style.height = Math.abs(this.selectionHeight).toString() + \"px\";\n\t\tthis.selectionRect.style.top = e.clientY < this.selectionClientY ? (this.selectionStartY + this.selectionHeight).toString() + \"px\" : this.selectionStartY.toString() + \"px\";\n\n\t\tthis.selectionPrevX = e.clientX;\n\t\tthis.selectionPrevY = e.clientY;\n\t}\n\n\tpublic moveComponents = (event: Event, scale: number): void => {\n\t\tlet cX = 0;\n\t\tlet cY = 0;\n\t\tif(event instanceof MouseEvent){\n\t\t\tcX = event.clientX;\n\t\t\tcY = event.clientY;\n\t\t}\n\t\telse if(event instanceof TouchEvent){\n\t\t\tcX = event.touches[0].clientX;\n\t\t\tcY = event.touches[0].clientY;\n\t\t}\n\t\tfor(let selection of this.currentSelections){\n\t\t\tselection.setPosition(\n\t\t\t\tselection.getLogicComponent().options.X - (this.prevX - cX) / scale, \n\t\t\t\tselection.getLogicComponent().options.Y - (this.prevY - cY) / scale\n\t\t\t);\n\t\t\t\n\t\t}\n\t\tfor(let connection of this.currentConnectionSelections){\n\t\t\tif(connection.LogicConnection.lineBreaks.length > 2){\n\t\t\t\tconnection.LogicConnection.lineBreaks.filter((c ,i) => {\n\t\t\t\t\treturn i!==0 && i < connection.LogicConnection.lineBreaks.length-1;\n\t\t\t\t}).forEach(br => {\n\t\t\t\t\tlet lineBreak = this.convertLineBreak(\n\t\t\t\t\t\t{x: br.x - (this.prevX - cX) / scale,\n\t\t\t\t\t\ty: br.y - (this.prevY - cY) / scale})\n\t\t\t\t\tbr.x = lineBreak.x;\n\t\t\t\t\tbr.y = lineBreak.y;\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tthis.prevX = this.convertScaledPosition(cX, scale);\n\t\tthis.prevY = this.convertScaledPosition(cY, scale);\n\t}\n\n\tprivate convertLineBreak(lineBreak: LineBreak){\n\t\treturn {x: Math.round(lineBreak.x / 10) * 10, y: Math.round(lineBreak.y / 10) * 10};\n\t}\n\n\tprivate convertScaledPosition(number, scale: number){\n\t\treturn Math.round(number / (10 * scale)) * (10 * scale);\n\t}\n\n\tconstructor() { }\n\n\tprivate changeSelectionDispatcher = new EventDispatcher<ChangeSelectionEvent>();\n\tpublic onChangeSelection(handler: Handler<ChangeSelectionEvent>) {\n\t\tthis.changeSelectionDispatcher.register(handler);\n\t}\n\tprivate fireChangeSelection(event: ChangeSelectionEvent) { \n\t\tthis.changeSelectionDispatcher.fire(event);\n\t}\n}","import { IDataOperator, ShowStatusCodeEvent } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { Endpoint } from \"./Endpoint\";\nimport { LogicComponent } from \"./LogicComponent\";\nimport { Options } from \"./Options\";\nimport { RequestData } from \"./RequestData\";\nimport { Handler } from \"./Shared/EventDispatcher\";\n\nexport class TextField extends LogicComponent implements IDataOperator{\n    \n    options: TextFieldOptions;\n\n    constructor() {\n        super();\n        this.options = new TextFieldOptions();\n        this.options.title = \"Text Field\";\n    }\n    \n    receiveData(data: RequestData, fromOutput: boolean): void { \n        return;\n    }\n    sendData(data: RequestData): void { \n        return;\n    }\n    getAvailableEndpoints(): Endpoint[] {\n        return [];\n    }\n\n    destroy = () => {}\n}\n\nexport class TextFieldOptions extends Options{\n    width: number = 140;\n    height: number = 60;\n    fontSize: number = 12;\n    isBold: boolean = false;\n    isItalic: boolean = false;\n    backgroundColor: string = \"rgba(0, 0, 0, 0.5)\";\n    color: string = \"#fff\";\n}","import { EventEmitter, Injectable } from '@angular/core';\n\n@Injectable({\n  \tprovidedIn: 'root'\n})\nexport class ViewingService {\n\n\tpublic ViewUpdated = new EventEmitter();\n\n\tprivate HELPERS_KEY = \"helpers\";\n\tprivate helpersDisabled: boolean;\n\n\tprivate TITLES_KEY = \"titles\";\n\tprivate titlesHidden: boolean;\n\n\tprivate DARKMODE_KEY = \"darkmode\"\n\tprivate darkModeEnabled: boolean;\n\n\tprivate PERFORMANCEMODE_KEY = \"performancemode\"\n\tprivate performanceModeEnabled: boolean;\n\n\tprivate RESPONSES_KEY = \"responses\"\n\tprivate responsesHidden: boolean;\n\n\tconstructor() { \n\t\tthis.helpersDisabled = localStorage.getItem(this.HELPERS_KEY) == \"true\" ? true : false;\n\t\tthis.titlesHidden = localStorage.getItem(this.TITLES_KEY) == \"true\" ? true : false;\n\t\tthis.darkModeEnabled = localStorage.getItem(this.DARKMODE_KEY) == \"true\" ? true : false;\n\t\tthis.performanceModeEnabled = localStorage.getItem(this.PERFORMANCEMODE_KEY) == \"true\" ? true : false;\n\t\tthis.responsesHidden = localStorage.getItem(this.RESPONSES_KEY) == \"true\" ? true : false;\n\t}\n\n\tisHelpersDisabled(){\n\t\treturn this.helpersDisabled;\n\t}\n\n\tsetHelpersDisabled(disabled: boolean = true){\n\t\tlocalStorage.setItem(this.HELPERS_KEY, disabled.toString());\n\t\tthis.helpersDisabled = disabled;\n\t\tthis.ViewUpdated.emit();\n\t}\n\n\tisTitlesHidden(){\n\t\treturn this.titlesHidden;\n\t}\n\n\tsetTitlesHidden(hidden: boolean = true, saveToLocalStorage: boolean = true){\n\t\tif(saveToLocalStorage)\n\t\t\tlocalStorage.setItem(this.TITLES_KEY, hidden.toString());\n\t\tthis.titlesHidden = hidden;\n\t\tthis.ViewUpdated.emit();\n\t}\n\n\tisDarkMode(){\n\t\treturn this.darkModeEnabled;\n\t}\n\n\tsetDarkMode(enabled: boolean = true, saveToLocalStorage: boolean = true){\n\t\tif(saveToLocalStorage)\n\t\t\tlocalStorage.setItem(this.DARKMODE_KEY, enabled.toString());\n\t\tif(enabled)\n\t\t\tdocument.documentElement.classList.add(\"dark-mode\");\n\t\telse \n\t\t\tdocument.documentElement.classList.remove(\"dark-mode\");\n\t\tthis.darkModeEnabled = enabled;\n\t\tthis.ViewUpdated.emit();\n\t}\n\n\tisPerformanceMode(){\n\t\treturn this.performanceModeEnabled;\n\t}\n\n\tsetPerformanceMode(enabled: boolean = true, saveToLocalStorage: boolean = true){\n\t\tif(saveToLocalStorage)\n\t\t\tlocalStorage.setItem(this.PERFORMANCEMODE_KEY, enabled.toString());\n\t\tthis.performanceModeEnabled = enabled;\n\t}\n\n\tisResponsesHidden(){\n\t\treturn this.responsesHidden;\n\t}\n\n\tsetResponsesHidden(hidden: boolean = true, saveToLocalStorage: boolean = true){\n\t\tif(saveToLocalStorage)\n\t\t\tlocalStorage.setItem(this.RESPONSES_KEY, hidden.toString());\n\t\tthis.responsesHidden = hidden;\n\t}\n}","import { Component, OnInit } from '@angular/core';\nimport { CloudStorage } from 'src/models/CloudStorage';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'cloudstorage',\n\ttemplateUrl: './cloudstorage.component.html',\n\tstyleUrls: ['./cloudstorage.component.scss']\n})\nexport class CloudStorageComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicCloudStorage : CloudStorage = new CloudStorage();\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicCloudStorage;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new CloudStorage();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicCloudStorage.options.X\"\n[style.top.px]=\"LogicCloudStorage.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <span class=\"img bg-cloudstorage\"></span>\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <endpoint-select\n        [Model]=\"LogicCloudStorage\"\n        [Type]=\"APIType.REST\"\n        [Multiple]=\"false\"\n        [HasActions]=\"false\"\n        [ModifiableMethods]=\"false\"\n        [AfterChange]=\"afterChange\"\n        ></endpoint-select>\n    </div>\n</div>","<span *ngIf=\"!viewingService.isHelpersDisabled()\" matTooltip=\"{{ Message }}\" class=\"property-info-button\"><i class=\"far fa-question-circle\"></i></span>","import { Component, Input, OnInit } from '@angular/core';\nimport { ViewingService } from '../viewing.service';\n\n@Component({\n\tselector: 'info-tooltip',\n\ttemplateUrl: './info-tooltip.component.html',\n\tstyleUrls: ['./info-tooltip.component.scss']\n})\nexport class InfoTooltipComponent implements OnInit {\n\n\t@Input() Message : string;\n\n  \tconstructor(public viewingService: ViewingService) { }\n\n\tngOnInit(): void { }\n}\n","export enum Protocol{\n    HTTP,\n    WebSockets,\n    Database\n}","import { RequestData } from \"./RequestData\";\nimport { Port } from \"./Port\";\nimport { EventDispatcher, Handler } from \"./Shared/EventDispatcher\";\n\ninterface SendDataEvent {}\n\nexport class LineBreak{\n    x: number;\n    y: number;\n    constructor(x: number,y: number){\n        this.x = x;\n        this.y = y;\n    }\n}\n\nexport class Connection{\n    port1: Port;\n    port2: Port;\n    lineBreaks: LineBreak[];\n    title: string = \"\";\n\n    constructor(port1: Port, port2: Port) {\n        this.port1 = port1;\n        this.port2 = port2;\n    }\n\n    getOtherPort(port: Port): Port{\n        return port === this.port1 ? this.port2 : this.port1;\n    }\n\n    /**\n     * sendData: sends data to connection\n     */\n    public async sendData(data: RequestData, origin: Port) {\n        if(origin === this.port1){\n            this.fireSendData(origin);\n            let delay = this.getSendDataDelay();\n            await this.port2.receiveData(data, delay);\n        }\n        else if(origin === this.port2){\n            this.fireSendData(origin);\n            let delay = this.getSendDataDelay();\n            await this.port1.receiveData(data, delay);\n        }\n        else\n            throw new Error(\"Invalid origin in Connection.sendData\");\n    }\n\n    destroy(){\n        this.port1.removeConnection(this,true);\n    }\n\n    \n    private sendDataDispatcher = new EventDispatcher<SendDataEvent>();\n    public onSendData(handler: Handler<SendDataEvent>) {\n        this.sendDataDispatcher.register(handler);\n    }\n    private fireSendData(event: SendDataEvent) { \n        this.sendDataDispatcher.fire(event);\n    }\n\n    public getSendDataDelay: () => number = () => {return 180};\n}","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { Endpoint } from \"./Endpoint\";\nimport { HTTPMethod } from \"./enums/HTTPMethod\";\nimport { Port } from \"./Port\";\nimport { RequestData } from \"./RequestData\";\n\nexport class CloudStorage extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    options: CloudStorageOptions;\n    connectionTable: { [id:string]: Connection } = {};\n    fillColor = false;\n    color = \"#dd1818\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this,false,true);      \n        this.options = new CloudStorageOptions();  \n        this.options.title = \"Cloud Storage\";\n        \n        this.options.endpoints = [\n            new Endpoint(\"/cloud\",[HTTPMethod.GET, HTTPMethod.POST, HTTPMethod.PUT, HTTPMethod.DELETE])    \n        ]\n    }\n\n    async receiveData(data: RequestData) {\n        let targetEndpoint = this.getTargetEndpoint(data);\n        if(targetEndpoint == null)\n            return;\n\n        this.fireReceiveData(data);\n\n        this.connectionTable[data.requestId] = data.origin;\n\n        // Send response back\n        if(data.sendResponse)\n            await this.sendData(this.getResponse(data));\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId]\n        if(targetConnection == null)\n            throw new Error(\"Target connection can not be null\");\n        this.connectionTable[response.responseId] = null; // reset request id\n        await this.inputPort.sendData(response, targetConnection);\n    }\n}\n\nexport class CloudStorageOptions extends EndpointOptions{\n}    \n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateComponent } from './create/create.component';\nimport { LandingPageComponent } from './pages/landing-page/landing-page.component';\nimport { PagesComponent } from './pages/pages.component';\n\nconst routes: Routes = [\n  \n  {\n    path: \"create\",\n    component: CreateComponent,\n  },\n  {\n    path: \"\",\n    component: PagesComponent,\n    children: [\n      {\n        path: \"**\",\n        component: LandingPageComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { Endpoint } from \"./Endpoint\";\nimport { HTTPMethod } from \"./enums/HTTPMethod\";\nimport { Port } from \"./Port\";\nimport { RequestData } from \"./RequestData\";\n\nexport class CDN extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    options: CDNOptions;\n    connectionTable: { [id:string]: Connection } = {};\n    color = \"#EB5757\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this,false,true);      \n        this.options = new CDNOptions();  \n        this.options.title = \"CDN\";\n        \n        this.options.endpoints = [\n            new Endpoint(\"/cdn\",[HTTPMethod.GET,HTTPMethod.POST,HTTPMethod.PUT,HTTPMethod.DELETE,HTTPMethod.PATCH])    \n        ]\n    }\n\n    async receiveData(data: RequestData) {\n        let targetEndpoint = this.getTargetEndpoint(data);\n        if(targetEndpoint == null)\n            return;\n\n        this.fireReceiveData(data);\n\n        this.connectionTable[data.requestId] = data.origin;\n\n        // Send response back\n        if(data.sendResponse)\n            await this.sendData(this.getResponse(data));\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId]\n        if(targetConnection == null)\n            throw new Error(\"Target connection can not be null\");\n        this.connectionTable[response.responseId] = null; // reset request id\n        await this.inputPort.sendData(response, targetConnection);\n    }\n}\n\nexport class CDNOptions extends EndpointOptions{\n}","import { Component, OnInit } from '@angular/core';\nimport { Endpoint } from 'src/models/Endpoint';\nimport { MessageQueue } from 'src/models/MessageQueue';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'messagequeue',\n\ttemplateUrl: './messagequeue.component.html',\n\tstyleUrls: ['./messagequeue.component.scss']\n})\nexport class MessagequeueComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicMessageQueue : MessageQueue = new MessageQueue();\n\n\thandleEndpointUrlChange(endpoint: Endpoint){\n\t\tif(endpoint.url == null || endpoint.url.replace(/\\s/g,\"\") == \"\")\n\t\t\tendpoint.url = \"Message Queue\";\n\t}\n\n\tngAfterViewInit(): void {\n\t\tsuper.Init();\n\t\tthis.LogicMessageQueue.onReceiveData((data) => {\n\t\t\tthis.setReceiveDataAnimation();\n\t\t\tthis.cdRef.detectChanges();\n\t\t});\n\t\tthis.LogicMessageQueue.onSendData((data) => {\n\t\t\tthis.cdRef.detectChanges();\n\t\t})\n  \t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicMessageQueue;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new MessageQueue();\n\t\treturn c.color;\n\t}\n}\n","<div\n#anchorRef\n[style.left.px]=\"LogicMessageQueue.options.X\"\n[style.top.px]=\"LogicMessageQueue.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container messages\">\n        <div class=\"message empty\" *ngFor=\"let num of [].constructor(10)\"></div>\n    </div>  \n    <div class=\"img-container messages\" (mousedown)=\"handleMousedown( $event )\"\n    (click)=\"handleClick($event)\" (touchstart)=\"handleMousedown($event)\">\n        <div class=\"message img\" [style.backgroundColor]=\"LogicMessageQueue.color\" *ngFor=\"let message of LogicMessageQueue.messages | slice:0:10;\"></div>\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div class=\"options-endpoints-container\">\n            <div class=\"options-endpoints-top\">\n                <span class=\"property-name\">Endpoints: <info-tooltip [Message]=\"'A message queue endpoint. Any consumers must have an endpoint with the same url.'\"></info-tooltip></span>\n            </div>\n            <div class=\"options-endpoints\">\n                <div class=\"options-endpoint\" *ngFor=\"let endpoint of this.LogicMessageQueue.options.endpoints\">\n                    <input (change)=\"afterChange()\" (blur)=\"handleEndpointUrlChange(endpoint)\" class=\"endpoint-url\" type=\"text\" spellcheck=\"false\" [(ngModel)]=\"endpoint.url\" placeholder=\"url\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { IDataOperator } from \"src/interfaces/IDataOperator\";\nimport { Connection } from \"./Connection\";\nimport { EndpointOperator, EndpointOptions } from \"./EndpointOperator\";\nimport { Endpoint, EndpointRef } from \"./Endpoint\";\nimport { EndpointActionHTTPMethod, HTTPMethod } from \"./enums/HTTPMethod\";\nimport { Port } from \"./Port\";\nimport { RequestData, RequestDataHeader } from \"./RequestData\";\nimport { arrayEquals, sleep, UUID } from \"src/shared/ExtensionMethods\";\nimport { gRPCMode } from \"./enums/gRPCMode\";\nimport { Protocol } from \"./enums/Protocol\";\nimport { APIType } from \"./enums/APIType\";\n\nexport class WebServer extends EndpointOperator implements IDataOperator{\n\n    inputPort: Port;\n    options: WebServerOptions;\n    connectionTable: { [id:string]: Connection } = {};\n    fillColor = false;\n    color = \"#009FFF\";\n\n    constructor() {\n        super();\n        this.inputPort = new Port(this,false,true);     \n        this.outputPort = new Port(this, true, true);       \n        this.options = new WebServerOptions();  \n        this.options.title = \"Web Server\";\n        \n        this.options.endpoints = [\n            new Endpoint(\"/\",[HTTPMethod.GET,HTTPMethod.POST,HTTPMethod.PUT,HTTPMethod.DELETE,])    \n        ]\n    }\n\n    async receiveData(data: RequestData, fromOutput:boolean) {\n        if(fromOutput){\n            let targetConnection = this.connectionTable[data.responseId]\n            if(targetConnection == null) // connection could be ended before last data was sent\n                return; \n            // Checking if endpoint wasn't removed before stream end\n            this.fireReceiveData(data);\n            if(data.header.stream){\n                let hasAction = false;\n\n                this.getEndpoints().forEach(endpoint => {\n                    endpoint.actions.forEach(action => {\n                        if(action.endpoint.url === data.header.endpoint.endpoint.url &&\n                        arrayEquals(action.endpoint.supportedMethods, data.header.endpoint.endpoint.supportedMethods)){\n                            hasAction = true;\n                        }\n                    })\n                })\n                if(!hasAction){ // send end of stream to out if the action no longer exists\n                    data.header.stream = false;\n                    data.requestId = data.responseId;\n                    data.responseId = null;\n                    let result = this.outputPort.sendData(data,data.origin)\n                    if(result)\n                        this.connectionTable[data.responseId] = null;\n                    return;\n                }\n                let result = await this.inputPort.sendData(data, this.connectionTable[data.responseId]);\n                if(!result && data.header.stream){ // send end stream to out if the client doesn't exist \n                    data.header.stream = false;\n                    data.requestId = data.responseId;\n                    data.responseId = null;\n                    let res = this.outputPort.sendData(data,data.origin)\n                    if(res)\n                        this.connectionTable[data.responseId] = null;\n                }\n            }\n            else{\n                if(data.header.endpoint.endpoint.protocol == Protocol.WebSockets || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Bidirectional Streaming\"] || data.header.endpoint.endpoint.grpcMode == gRPCMode[\"Server Streaming\"])\n                    await this.inputPort.sendData(data, this.connectionTable[data.responseId]);\n            }\n        }\n        else{\n            if(data.requestId == \"\" || data.requestId == null) throw new Error(\"Request ID can not be null\");\n            if(data.header.endpoint == null) throw new Error(\"Endpoint can not be null\")\n\n            let targetEndpoint = this.getTargetEndpoint(data);\n\n            if(targetEndpoint == null)\n                return;\n\n            this.fireReceiveData(data);\n\n            let sendResponse = false;\n            let isFirstStreamRequest = this.connectionTable[data.requestId] == null && data.header.stream;\n            let isLastStreamRequest = this.connectionTable[data.requestId] != null && !data.header.stream;\n            let dontSendRequestResponse = (isFirstStreamRequest || isLastStreamRequest);\n\n            this.connectionTable[data.requestId] = data.origin;\n\n            // Send data to every action \n            for(let action of targetEndpoint.actions){\n                // Get connection to given action endpoint\n                if(action.endpoint == null || action.endpoint.url == null)\n                    continue;\n                let targetConnection: Connection;\n                for(let connection of this.outputPort.connections){\n                    let endpoints = connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n                    if(endpoints.find(endpoint => endpoint.url == action.endpoint.url && arrayEquals(endpoint.supportedMethods,action.endpoint.supportedMethods)) != null ){\n                        targetConnection = connection;\n                        break;\n                    }\n                }\n                if(targetConnection == null)\n                    continue;\n\n                let isStream = action.endpoint.protocol == Protocol.WebSockets || action.endpoint.grpcMode != gRPCMode.Unary;\n                if(data.header.stream && isStream && action.endpoint.grpcMode == gRPCMode[\"Server Streaming\"] \n                && !dontSendRequestResponse || dontSendRequestResponse && !isStream) {\n                    continue;\n                }\n                let requestId = (isStream && !data.header.stream && !isLastStreamRequest) ? UUID() : data.requestId;\n                let request = new RequestData();\n                let epRef = new EndpointRef();\n                epRef.endpoint = action.endpoint;\n                epRef.method = EndpointActionHTTPMethod[action.method] == \"Inherit\" ? data.header.endpoint.method : HTTPMethod[EndpointActionHTTPMethod[action.method]]\n                \n                request.header = new RequestDataHeader(epRef, action.endpoint.protocol, data.header.stream);\n\n                request.origin = targetConnection;\n                request.originID = this.originID;\n                request.requestId = requestId;\n\n                if(isStream)\n                    this.outputPort.sendData(request, targetConnection);\n                else{\n                    if(!data.header.stream) \n                        sendResponse = true;\n                    if(action.asynchronous){\n                        this.outputPort.sendData(request, targetConnection);\n                    }\n                    else{\n                        await this.outputPort.sendData(request, targetConnection);\n                        if(data.sendResponse)\n                            this.connectionTable[requestId] = data.origin;\n                    }\n                }\n            }\n\n           // if(isFirstStreamRequest)\n           //     this.connectionTable[data.requestId] = data.origin;\n           if(targetEndpoint.grpcMode == gRPCMode[\"Server Streaming\"]) {\n                if(isFirstStreamRequest){\n                    // Initiate server stream \n                    this.serverStream(this.getResponse(data), targetEndpoint);\n                }\n                if(isLastStreamRequest)\n                    this.connectionTable[data.requestId] = null;\n            }\n            if((sendResponse || targetEndpoint.actions.length == 0 && !data.header.stream) && data.sendResponse){\n                //Send response back\n                //this.connectionTable[data.requestId] = data.origin;\n                console.log(\"send response\");\n                await this.sendData(this.getResponse(data));\n            }\n        }\n    }\n\n    async sendData(response: RequestData) {\n        let targetConnection = this.connectionTable[response.responseId]\n        if(targetConnection == null)\n            return;\n        let result = await this.inputPort.sendData(response, targetConnection);\n        if(!result && response.header.stream){\n            response.header.stream = false;\n            response.requestId = response.responseId;\n            response.responseId = null;\n            let res = this.outputPort.sendData(response,response.origin)\n            if(res){\n                this.connectionTable[response.responseId] = null;\n            }\n        }\n        else{\n            this.connectionTable[response.responseId] = null;\n        }\n    }\n\n    async stream(data: RequestData, streamingEndpoint: Endpoint){\n        await sleep(700);\n        if(this.connectionTable[data.responseId] == null ||(\n            streamingEndpoint.grpcMode != gRPCMode[\"Server Streaming\"] &&\n            streamingEndpoint.grpcMode != gRPCMode[\"Bidirectional Streaming\"] && \n            streamingEndpoint.protocol != Protocol.WebSockets) ||\n            this.options.endpoints.indexOf(streamingEndpoint) == -1) return;\n        await this.sendData(data);\n        await this.stream(data, streamingEndpoint);\n    }\n\n    async serverStream(data: RequestData, streamingEndpoint: Endpoint){\n        await sleep(700);\n        if(streamingEndpoint.actions.filter(action => action.endpoint.grpcMode != gRPCMode[\"Server Streaming\"]).length == 0 || this.connectionTable[data.responseId] == null || (\n            streamingEndpoint.grpcMode != gRPCMode[\"Server Streaming\"]) ||\n            this.getEndpoints().indexOf(streamingEndpoint) == -1) return;\n\n        for(let action of streamingEndpoint.actions){\n            // Get connection to given action endpoint\n            if(action.endpoint == null || action.endpoint.url == null || action.endpoint.grpcMode != gRPCMode.Unary || action.endpoint.protocol == Protocol.WebSockets)\n                continue;\n\n            let targetConnection: Connection;\n            for(let connection of this.outputPort.connections){\n                let endpoints = connection.getOtherPort(this.outputPort).parent.getAvailableEndpoints();\n                if(endpoints.find(endpoint => endpoint.url == action.endpoint.url && arrayEquals(endpoint.supportedMethods,action.endpoint.supportedMethods)) != null ){\n                    targetConnection = connection;\n                    break;\n                }\n            }\n            if(targetConnection == null)\n                continue;\n\n            let newReqId = UUID();\n            this.connectionTable[newReqId] = data.origin\n            let request = new RequestData();\n            let epRef = new EndpointRef();\n            epRef.endpoint = action.endpoint;\n            epRef.method = EndpointActionHTTPMethod[action.method] == \"Inherit\" ? data.header.endpoint.method : HTTPMethod[EndpointActionHTTPMethod[action.method]]\n\n            request.header = new RequestDataHeader(epRef, action.endpoint.protocol);\n            request.origin = targetConnection;\n            request.originID = this.originID;\n            request.requestId = newReqId;\n            await this.outputPort.sendData(request, targetConnection);\n        }\n\n        await this.sendData(data);\n        await this.serverStream(data, streamingEndpoint);\n    }\n}\n\nexport class WebServerOptions extends EndpointOptions{\n    type: APIType = APIType.REST;\n}","import { Component, OnInit, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { ViewingService } from 'src/app/viewing.service';\nimport { DatabaseType } from 'src/models/enums/DatabaseType';\nimport { LoadBalancerType } from 'src/models/enums/LoadBalancerType';\nimport { WritePolicy } from 'src/models/enums/WritePolicy';\nimport { PlacingService } from '../../placing.service';\nimport { ApiComponent } from '../components/api/api.component';\nimport { ApiGatewayComponent } from '../components/apigateway/apigateway.component';\nimport { CacheComponent } from '../components/cache/cache.component';\nimport { ClientComponent } from '../components/client/client.component';\nimport { ClientclusterComponent } from '../components/clientcluster/clientcluster.component';\nimport { CloudStorageComponent } from '../components/cloudstorage/cloudstorage.component';\nimport { DatabaseComponent } from '../components/database/database.component';\nimport { LoadbalancerComponent } from '../components/loadbalancer/loadbalancer.component';\nimport { MessagequeueComponent } from '../components/messagequeue/messagequeue.component';\nimport { ProxyComponent } from '../components/proxy/proxy.component';\nimport { PubsubComponent } from '../components/pubsub/pubsub.component';\nimport { TextfieldComponent } from '../components/textfield/textfield.component';\nimport { WebserverComponent } from '../components/webserver/webserver.component';\nimport { CDNComponent } from '../components/cdn/cdn.component';\n\nclass MenuItem<T>{\n\tcomponent: T;\n\tcaption: string;\n\tmark: string;\n\timageUrl: string;\n\tpresetOptions: Object;\n\tinfo: string;\n\tcolor: string;\n\n\tconstructor(component: T, caption: string, mark: string, imageUrl: string,info: string, presetOptions: Object = null) {\n\t\tthis.component = component;\n\t\tthis.caption = caption;\n\t\tthis.mark = mark;\n\t\tthis.imageUrl = imageUrl;\n\t\tthis.presetOptions = presetOptions;\n\t\tthis.info = info;\n\t\tthis.color = (component as any).getColor() || \"#6059DF\";\n\t}\n}\n\nclass Category{\n\ttitle: string;\n\titems: MenuItem<any>[];\n\tisOpen: boolean;\n\n\tconstructor(title: string, items: MenuItem<any>[] = []) {\n\t\tthis.title = title;\n\t\tthis.items = items;\n\t}\n}\n\n@Component({\n\tselector: 'app-componentmenu',\n\ttemplateUrl: './componentmenu.component.html',\n\tstyleUrls: ['./componentmenu.component.scss'],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class ComponentmenuComponent implements OnInit {\n\n\tallCategories: Category[] = [];\n\tcategories: Category[] = [];\n\tisOpen: boolean = true;\n\tcurrentInfoComponent: MenuItem<any>;\n\tisInfoOpen: boolean = false;\n\n\tcurrentItem: MenuItem<any>;\n\tplacingItem: MenuItem<any>;\n\n\t@ViewChild(\"board\", { read: ViewContainerRef }) connectionRef;\n\t@ViewChild(\"placingItemRef\") placingItemRef;\n\n\tconstructor(private placingService: PlacingService, public viewingService: ViewingService) \n\t{\n\t\t// Create Categories\n\t\tthis.allCategories.push(new Category(\"Client-side\",[\n\t\t\tnew MenuItem(ClientComponent, \"Basic Client\", \"\",\"./assets/client.svg\", '<p>Client is the component, that simulates either a real client, or client side application on any device.</p><p>Use the output port to connect to other compoenents via their input port. Select endpoint you want to connect to and the HTTP method used.</p><p>Once connected to an endpoint, you can use the <span class=\"highlight\">Send data</span> button. To send data automatically, use the loop icon next to <span class=\"highlight\">Send data</span> button.</p>'),\n\t\t\tnew MenuItem(ClientclusterComponent, \"Client Cluster\", \"\",\"./assets/clientcluster.svg\", '<p>Client cluster represents multiple clients. It sends data to any endpoint available at given speed.<p>To start sending data, click the <span class=\"highlight\">Start sending data</span> button.</p>')\n\t\t]));\n\t\tthis.allCategories.push(new Category(\"Server-side\",[\n\t\t\tnew MenuItem(WebserverComponent, \"HTTP Web Server\", \"HTTP\",\"./assets/webserver.svg\", '<p>Web server component simulates an HTTP web server that can accept requests and send them to an API.</p><p>Use the input port to connect a client and the output port to connect other services and APIs.</p>'),\n\t\t\tnew MenuItem(ApiGatewayComponent, \"Web API Gateway\", \"GW\",\"./assets/apigateway.svg\", '<p>API gateway is used to reduce number of requests, the client needs to send.</p><p>Use the input port to connect a client and the output port to connect other services and APIs.</p><p>There are 5 types of endpoints available, every type has some unique properties. Each endpoint can have actions that will be triggered on each request. For more info about each endpoint type, use the <span class=\"highlight\">?</span> icon.</p>'),\n\t\t\tnew MenuItem(ApiComponent, \"Web API Service\", \"API\",\"./assets/api.svg\", '<p>API is general component to simulate any API or microservice.</p> <p>Use the input port to connect a client and the output port to connect other services and APIs. </p> <p>API can be of 5 available types, each used for different purposes. You can add any number of endpoints that can have different actions like sending new requests to other APIs or storing data to database.</p>'),\n\t\t]));\n\t\tthis.allCategories.push(new Category(\"Storage\",[\n\t\t\tnew MenuItem(DatabaseComponent, \"SQL Database\", \"SQL\",\"./assets/database.svg\", '<p>Database component simulates a database server with one default endpoint.</p> <p>Use the input port to connect services to database and receive data through.</p> <p>You can use the <span class=\"highlight\">Shard Database</span> action to shard the database and create 3 default shards. </p>',{ type: DatabaseType.SQL }),\n\t\t\tnew MenuItem(DatabaseComponent, \"NoSQL Database\", \"NoSQL\",\"./assets/database.svg\",'<p>Database component simulates a database server with one default endpoint.</p> <p>Use the input port to connect services to database and receive data through.</p> <p>You can use the <span class=\"highlight\">Shard Database</span> action to shard the database and create 3 default shards. </p>', { type: DatabaseType.NoSQL }),\n\t\t\tnew MenuItem(CloudStorageComponent, \"Cloud Storage\", \"CLOUD\",\"./assets/cloudstorage.svg\",'<p>Cloud storage component simulates any cloud storage with one default endpoint.</p> <p>Use the input port to connect services to cloud and receive data through.</p>'),\n\t\t\tnew MenuItem(CDNComponent, \"Content Delivery Network\", \"CDN\",\"./assets/cdn.svg\",'<p>CDN component simulates a Content Delivery Network with one default endpoint.</p> <p>Use the input port to connect services to CDN and receive data through.</p>'),\n\t\t]));\n\t\tthis.allCategories.push(new Category(\"Caches\",[\n\t\t\tnew MenuItem(CacheComponent, \"Write-Through Cache\", \"WT\",\"./assets/cache.svg\", '<p>Cache component simulates a distributed cache with a <span class=\"underline\">random</span> hit/miss chance.</p> <p>Receive data through input port. The output port is connected to <span class=\"highlight\">Database</span>.</p> <p>You can change Write and Replacement policies to better specify the behaviour of your cache.</p>', { writePolicy: WritePolicy['Write-Through'] }),\n\t\t\tnew MenuItem(CacheComponent, \"Write-Back Cache\", \"WB\",\"./assets/cache.svg\", '<p>Cache component simulates a distributed cache with a <span class=\"underline\">random</span> hit/miss chance.</p> <p>Receive data through input port. The output port is connected to <span class=\"highlight\">Database</span>.</p> <p>You can change Write and Replacement policies to better specify the behaviour of your cache.</p>', { writePolicy: WritePolicy['Write-Back (Behind)'] })\n\t\t]));\n\t\tthis.allCategories.push(new Category(\"Load Balancers & Proxies\",[\n\t\t\tnew MenuItem(LoadbalancerComponent, \"Layer 7 Load Balancer\", \"L7\",\"./assets/loadbalancer.svg\", '<p>Load Balancer component is used to balance load between multiple services. </p> <p>Use the input port to receive data and balance it between connections on output port.</p> <p>Load balancer can work in <span class=\"highlight\">Layer 7</span> or <span class=\"highlight\">Layer 4</span> mode. You can change the balance algorithm to any of 4 available types. </p> '),\n\t\t\tnew MenuItem(LoadbalancerComponent, \"Layer 4 Load Balancer\", \"L4\",\"./assets/loadbalancer.svg\", '<p>Load Balancer component is used to balance load between multiple services. </p> <p>Use the input port to receive data and balance it between connections on output port.</p> <p>Load balancer can work in <span class=\"highlight\">Layer 7</span> or <span class=\"highlight\">Layer 4</span> mode. You can change the balance algorithm to any of 4 available types. </p> ', { type: LoadBalancerType['Layer 4'] }),\n\t\t\tnew MenuItem(ProxyComponent, \"Proxy\", \"PROXY\",\"./assets/proxy.svg\", '<p>Proxy component acts like a man in the middle between client and server. </p> <p>Use the input port to receive data and route it to server through output port.</p>')\n\t\t]));\n\t\tthis.allCategories.push(new Category(\"Async Communication\",[\n\t\t\tnew MenuItem(MessagequeueComponent, \"Message Queue\", \"MQ\",\"./assets/messagequeue.svg\", '<p>Message Queue component is used to simulate a single message queue, <span class=\"underline\">not a full fledged message broker</span>.</p> <p>To publish message to queue, use the input port and send data to an endpoint. Consumers can be connected to output port of message queue. These <span class=\"underline\">consumers need to have an endpoint with the same URL</span>.</p> <p>Message can be only send to one consumer. In case of more consumers, the messages will be sent in round robin manner. Consumers can perform actions on data receive. </p> '),\n\t\t\tnew MenuItem(PubsubComponent, \"Publisher/Subscriber Model\", \"PUBSUB\",\"./assets/pubsub.svg\", '<p>Pub/Sub is used for publishers sending data to a specified topic, to which can be connected any number of subscribers.</p> <p>To publish a message, connect to input port and select a topic as an endpoint. You can create any number of topics. Subcribers connect to output port and select any number of topics they want to subscribe. <span class=\"underline\">Subcribers must have an endpoint with the same url as the topic they subscribe</span>.</p>'),\n\t\t]));\n\t\tthis.allCategories.push(new Category(\"Other\",[\n\t\t\tnew MenuItem(TextfieldComponent, \"Text Field\", \"TEXT\",\"./assets/text.svg\", '<p>General text field with customizable font size and style.</p>'),\n\t\t]));\n\t\tthis.categories = this.allCategories;\n\t}\n\n\ttoggleWindow(){\n\t\tthis.isOpen = !this.isOpen;\n\t\tthis.categories = this.allCategories;\n\t}\n\n\tsearch(value: string){\n\t\tthis.categories = [];\n\t\tfor(let category of this.allCategories){\n\t\t\tlet relevantItems = category.items.filter(i => this.isSearchRelevant(i, value));\n\t\t\tif(relevantItems.length > 0)\n\t\t\t\tthis.categories.push(new Category(category.title ,relevantItems));\n\t\t}\n\t}\n\n\thoverItem(item: MenuItem<any>){\n\t\tthis.currentItem = item;\n\t}\n\n\tleaveItem(){\n\t\tthis.currentItem = null;\n\t}\n\n\tisSearchRelevant(item: MenuItem<any>, searchValue: string){\n\t\tlet isRelevant = item.caption.toLowerCase().indexOf(searchValue.toLowerCase()) != -1;\n\t\tisRelevant = isRelevant ||  item.mark.toLowerCase().indexOf(searchValue.toLowerCase()) != -1;\n\t\treturn isRelevant;\n\t}\n\t\n\tdragItem(item: MenuItem<any>){\n\t\tthis.placingService.startCreating(item.component, item.presetOptions);\n\t\tthis.placingItem = item;\n\n\t\twindow.addEventListener(\"mousemove\", this.mouseMove);\n\t\twindow.addEventListener(\"mouseup\", this.mouseUp);\n\n\t\twindow.addEventListener(\"touchmove\", this.mouseMove);\n\t\twindow.addEventListener(\"touchend\", this.mouseUp);\n\t\treturn false;\n\t}\n\n\tmouseUp = () =>{\n\t\tthis.placingItem = null;\n\t\twindow.removeEventListener(\"mouseup\",this.mouseUp);\n\t\twindow.removeEventListener(\"mousemove\",this.mouseMove);\n\n\t\twindow.removeEventListener(\"touchend\",this.mouseUp);\n\t\twindow.removeEventListener(\"touchmove\",this.mouseMove);\n\t\t\n\t\tthis.placingService.creatingItem = null;\n\t\tthis.placingService.stopCreating();\n\t\treturn true;\n\t}\n\n\tmouseMove = (e: Event) =>{\n\t\tif(e instanceof MouseEvent){\n\t\t\tthis.placingItemRef.nativeElement.style.width = `${40*Math.max(1,this.placingService.boardScale)}px`;\n\t\t\tthis.placingItemRef.nativeElement.style.height = `${40*Math.max(1,this.placingService.boardScale)}px`;\n\t\t\tthis.placingItemRef.nativeElement.style.left = `${e.clientX-(20*Math.max(1,this.placingService.boardScale))}px`;\n\t\t\tthis.placingItemRef.nativeElement.style.top = `${e.clientY-(20*Math.max(1,this.placingService.boardScale))}px`;\n\t\t}\n\t\telse if(e instanceof TouchEvent){\n\t\t\tthis.placingItemRef.nativeElement.style.width = `${40*Math.max(1,this.placingService.boardScale)}px`;\n\t\t\tthis.placingItemRef.nativeElement.style.height = `${40*Math.max(1,this.placingService.boardScale)}px`;\n\t\t\tthis.placingItemRef.nativeElement.style.left = `${e.touches[0].clientX-(20*Math.max(1,this.placingService.boardScale))}px`;\n\t\t\tthis.placingItemRef.nativeElement.style.top = `${e.touches[0].clientY-(20*Math.max(1,this.placingService.boardScale))}px`;\n\t\t}\n\t}\n\n\tshowInfo(item: MenuItem<any>){\n\t\tthis.currentInfoComponent = item;\n\t\tthis.isInfoOpen = true;\n\t}\n\n\tcloseInfo(){\n\t\tthis.isInfoOpen = false;\n\t\tthis.currentInfoComponent = null;\n\t}\n\n\tngOnInit(): void {\n\t}\n\n\tngAfterViewInit(){\n\t}\n}\n","<div class=\"component-menu-window\" *ngIf=\"isOpen; else closedWindow\">\n    <div class=\"top\">\n        <input #searchBar (input)=\"search(searchBar.value)\" type=\"text\" autocomplete=\"off\" spellcheck=\"false\" class=\"search\" placeholder=\"search\"/>\n        <span (click)=\"toggleWindow()\" class=\"window-close\">\n            <i class=\"fas fa-minus\"></i>\n        </span>\n    </div>\n    <div class=\"main\">\n        <div class=\"section\" *ngFor=\"let category of categories\" [class.active]=\"category.isOpen\">\n            <div class=\"header\" (click)=\"category.isOpen = !category.isOpen\">\n                <span class=\"title\">{{ category.title }}</span>\n                <span class=\"icon\" *ngIf=\"category.isOpen; else closed\">\n                    <i class=\"fas fa-caret-up\"></i>\n                </span>\n                <ng-template #closed>\n                    <span class=\"icon\">\n                        <i class=\"fas fa-caret-down\"></i>\n                    </span>\n                </ng-template>\n            </div>\n            <div class=\"content\">\n                <div [style.backgroundColor]=\"item.color\" class=\"section-item\" *ngFor=\"let item of category.items\"\n                (mousedown)=\"dragItem(item)\" (delayed-hover)=\"hoverItem(item)\" delay=\"300\" (mouseout)=\"leaveItem()\"\n                (touchstart)=\"dragItem(item)\">\n                    <span class=\"caption\">{{ item.mark }}</span>\n                    <img src=\"{{ item.imageUrl }}\">\n                    <button *ngIf=\"!viewingService.isHelpersDisabled()\" class=\"info\" (click)=\"showInfo(item)\"><i class=\"far fa-question-circle\"></i></button>\n                </div>\n                <div class=\"section-item fill\">\n                </div>\n                <div class=\"section-item fill\">\n                </div>\n                <div class=\"section-item fill\">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"item-description\" *ngIf=\"currentItem != null\" [style.backgroundColor]=\"currentItem.color\">\n    <span>{{ currentItem.caption }}</span>\n    <hr>\n    <img src=\"{{ currentItem.imageUrl }}\">\n</div>\n<div #placingItemRef class=\"section-item placing-item\" *ngIf=\"placingItem != null\" [style.backgroundColor]=\"placingItem.color\">\n    <img src=\"{{ placingItem.imageUrl }}\">\n</div>\n<ng-template #closedWindow>\n    <div class=\"arrow-open\" (click)=\"toggleWindow()\">\n        <i class=\"fas fa-chevron-right\"></i>\n    </div>\n</ng-template>\n<div class=\"component-info-window\" *ngIf=\"isInfoOpen\">\n    <span class=\"component-info-title\">{{currentInfoComponent.caption}}</span>\n    <div class=\"component-info-icon\">\n        <img src=\"{{currentInfoComponent.imageUrl}}\">\n    </div>\n    <div [innerHtml]=\"currentInfoComponent.info\"></div>\n    <button class=\"close\" (click)=\"closeInfo()\"><i class=\"fas fa-times\"></i></button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Endpoint } from 'src/models/Endpoint';\nimport { APIType } from 'src/models/enums/APIType';\nimport { gRPCMode } from 'src/models/enums/gRPCMode';\nimport { HTTPMethod } from 'src/models/enums/HTTPMethod';\nimport { Protocol } from 'src/models/enums/Protocol';\nimport { WebServer } from 'src/models/WebServer';\nimport { OperatorComponent } from '../Shared/OperatorComponent';\n\n@Component({\n\tselector: 'webserver',\n\ttemplateUrl: './webserver.component.html',\n\tstyleUrls: ['./webserver.component.scss']\n})\nexport class WebserverComponent extends OperatorComponent implements OnInit {\n\n\tpublic LogicWebServer : WebServer = new WebServer();\n\n\tconnectableEndpoints: Endpoint[] = [];\n\n\tpublic handleClick(event: MouseEvent){\n\t\tsuper.handleClick(event);\n\t\tthis.updateSelection();\n\t}\n\n\tupdateSelection(){\n\t\tthis.connectableEndpoints = this.LogicWebServer.getConnectableEndpoints();\n\t\tfor(let j = 0; j < this.LogicWebServer.options.endpoints.length; j++){\n\t\t\tlet endpoint = this.LogicWebServer.options.endpoints[j];\n\t\t\tfor(let i = 0; i < endpoint.actions.length; i++){\n\t\t\t\tlet action = endpoint.actions[i];\n\t\t\t\tlet currEdp = action.endpoint;\n\t\t\t\tlet currMth = action.method;\n\t\t\t\tthis.LogicWebServer.options.endpoints[j].actions[i].endpoint = null;\n\t\t\t\tif(this.connectableEndpoints.length == 0){\n\t\t\t\t\tthis.connectableEndpoints = [];\n\t\t\t\t\tendpoint.actions = [];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(currEdp != null && currMth != null){\n\t\t\t\t\tfor(let e of this.connectableEndpoints){ // need this workaround to keep values in material select....\n\t\t\t\t\t\tif(e.url == currEdp.url)\n\t\t\t\t\t\t\tthis.LogicWebServer.options.endpoints[j].actions[i].endpoint = e;\n\t\t\t\t\t}\n\t\t\t\t\tendpoint.actions[i].method = currMth;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tendpoint.actions.splice(i,1);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleTypeChange(){\n\t\tlet type = this.LogicWebServer.options.type;\n\t\tlet endpoint: Endpoint;\n\t\tif(type == APIType.REST){\n\t\t\tendpoint = new Endpoint(\"api/posts\",[HTTPMethod.GET,HTTPMethod.POST,HTTPMethod.PUT,HTTPMethod.DELETE]);\n\t\t}\n\t\telse if(type == APIType.GraphQL){\n\t\t\tendpoint = new Endpoint(\"/graphql\",[HTTPMethod.GET,HTTPMethod.POST]);\n\t\t}\n\t\telse if(type == APIType.RPC){\n\t\t\tendpoint = new Endpoint(\"api/getPosts\",[HTTPMethod.GET]);\n\t\t}\n\t\telse if(type == APIType.gRPC){\n\t\t\tendpoint = new Endpoint(\"api/getPosts\",[HTTPMethod.GET]);\n\t\t\tendpoint.grpcMode = gRPCMode.Unary;\n\t\t}\n    \telse if(type == APIType.WebSockets){\n\t\t\tendpoint = new Endpoint(\"api/sendMessage\", [HTTPMethod.GET]);\n\t\t\tendpoint.protocol = Protocol.WebSockets;\n\t\t}\n\t\tthis.LogicWebServer.options.endpoints = [endpoint];\n\t}\n\n\tpublic getLogicComponent(){\n\t\treturn this.LogicWebServer;\n\t}\n\n\tstatic getColor(): string{\n\t\tlet c = new WebServer();\n\t\treturn c.color;\n\t}\n}","<div\n#anchorRef\n[style.left.px]=\"LogicWebServer.options.X\"\n[style.top.px]=\"LogicWebServer.options.Y\"\n>\n    <template #conn></template>\n    <div class=\"img-container\" (mousedown)=\"handleMousedown( $event )\" (touchstart)=\"handleMousedown($event)\"\n    (click)=\"handleClick($event)\">\n        <span class=\"img bg-webserver\"></span>\n    </div>  \n</div>\n<div style=\"display:none\">\n    <div #options>\n        <div class=\"options-type-container\">\n            <span class=\"property-name\">Type: <info-tooltip [Message]=\"'Changes the type of endpoints the Web Server has. This can change the behaviour of endpoints.'\"></info-tooltip></span>\n            <div>\n                <mat-form-field appearance=\"fill\" class=\"action-endpoint\">\n                    <mat-select (selectionChange)=\"handleTypeChange(); afterChange()\" [(ngModel)]=\"LogicWebServer.options.type\">\n                        <mat-option *ngFor=\"let type of APITypeKeys\" [value]=\"type\">{{APIType[type]}}</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n        </div>\n        <endpoint-select\n        [Model]=\"LogicWebServer\"\n        [Type]=\"LogicWebServer.options.type\"\n        [HasStreamActions]=\"true\"\n        [ConnectableEndpoints]=\"connectableEndpoints\"\n        [AfterChange]=\"afterChange\"\n        ></endpoint-select>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}